@{
    Layout = "_Admin_Layout";
}
<style>
    .table-content {
        padding: 15px;
        background: var(--bs-app-header-base-bg-color);
        border-radius: 8px;
    }

    #tableData thead tr th:nth-child(1),
    #tableData tbody tr td:nth-child(1),
    #tableData tfoot tr th:nth-child(1) {
        text-align: center;
        width: 20px !important;
        max-width: 20px !important;
    }

    #tableData thead tr th:nth-child(2),
    #tableData tbody tr td:nth-child(2),
    #tableData tfoot tr th:nth-child(2) {
        text-align: left;
        width: 200px !important;
        max-width: 200px !important;
    }

    table thead tr th {
        white-space: nowrap;
    }
</style>
<div id="kt_app_content" class="app-content flex-column-fluid">
<!--begin::Content container-->
<div id="kt_app_content_container" class="app-container container-fluid">
<!--begin::Row-->
<div class="table-content">
<!--begin::Col-->
<!--begin::Wrapper-->
<div class="d-flex flex-stack mb-5">
    <!--begin::Search-->
    <div class="d-flex align-items-center position-relative my-1">
        <i class="ki-duotone ki-magnifier fs-1 position-absolute ms-6">
            <span class="path1"></span><span class="path2"></span>
        </i>
        <input type="search" data-kt-docs-table-filter="search" class="form-control form-control-solid w-250px ps-15" id="search-input" placeholder="Tìm kiếm"/>
    </div>
    <!--end::Search-->
    <!--begin::Toolbar-->
    <div class="d-flex justify-content-end" data-kt-docs-table-toolbar="base">
        <!--begin::Filter-->
        <button type="button" class="btn btn-light-primary me-3" data-bs-toggle="tooltip" title="Coming Soon">
            <i class="ki-duotone ki-filter fs-2">
                <span class="path1"></span><span class="path2"></span>
            </i>
            Bộ lọc
        </button>
        <!--end::Filter-->
        <!--begin::Add customer-->
        <button type="button" class="btn btn-primary" data-bs-toggle="tooltip" title="Tạo mới" onclick="editItem(0)">
            <i class="ki-duotone ki-plus fs-2"></i>
            Tạo mới
        </button>
        <!--end::Add customer-->
    </div>
    <!--end::Toolbar-->
    <!--begin::Group actions-->
    <div class="d-flex justify-content-end align-items-center d-none" data-kt-docs-table-toolbar="selected">
        <div class="fw-bold me-5"><span class="me-2" data-kt-docs-table-select="selected_count"></span> Selected</div>

        <button type="button" class="btn btn-danger" data-bs-toggle="tooltip" title="Coming Soon">
            Selection Action
        </button>
    </div>
    <!--end::Group actions-->
</div>
<!--end::Wrapper-->
<!--begin::Datatable-->
<table id="tableData" class="table table-hover table-rounded table-row-bordered gy-3 gs-3">
    <thead>
    <tr class="fw-bold fs-6 text-gray-800">
        <th>STT</th>
        @*<th>Mã</th>*@
        <th>Tên</th>
        <th>Nơi làm việc</th>
        <th>Chức vụ</th>
        <th>Kinh nghiệm</th>
        <th>Chuyên khoa</th>
        @*<th>Ngôn ngữ</th>*@
        @*<th>Giấy phép hành nghề</th>*@
        <th>Tài khoản</th>
        <th>Loại bác sĩ</th>
        <th>Trạng thái bác sĩ</th>
        <th>Cơ sở y tế</th>
        <th>Ngày tạo</th>
        <th>Thao tác</th>
    </tr>
    </thead>
    <thead>
    <tr class="fs-6">
        <th></th>
        @*<th><input type="text" class="form-control tableheaderFillter" /></th>*@
        <th>
            <input type="text" class="form-control tableheaderFillter"/>
        </th>
        <th>
            <input type="text" class="form-control tableheaderFillter"/>
        </th>
        <th>
            <input type="text" class="form-control tableheaderFillter"/>
        </th>
        <th>
            <input type="text" class="form-control tableheaderFillter"/>
        </th>
        <th>
            <input type="text" class="form-control tableheaderFillter"/>
        </th>
        @*<th><input type="text" class="form-control tableheaderFillter" /></th>
                        <th><input type="text" class="form-control tableheaderFillter" /></th>*@
        <th>
            <select class="form-select form-select-solid tableheaderFillter" id="filterAccountId" data-control="select2" data-placeholder="Chọn Tài khoản" data-allow-clear="true" multiple> </select>
        </th>

        <th>
            <select class="form-select form-select-solid tableheaderFillter" id="filterDoctorTypeId" data-control="select2" data-placeholder="Chọn Loại bác sĩ" data-allow-clear="true" multiple> </select>
        </th>

        <th>
            <select class="form-select form-select-solid tableheaderFillter" id="filterDoctorStatusId" data-control="select2" data-placeholder="Chọn Trạng thái bác sĩ" data-allow-clear="true" multiple> </select>
        </th>

        <th>
            <select class="form-select form-select-solid tableheaderFillter" id="filterHealthFacilityId" data-control="select2" data-placeholder="Chọn Cơ sở y tế" data-allow-clear="true" multiple> </select>
        </th>

        <th>
            <div class="input-group" id="filterCreatedTime" data-td-target-input="nearest" data-td-target-toggle="nearest">
                <input id="filterCreatedTime_input" readonly type="text" class="form-control tableheaderFillter" data-td-target="#filterCreatedTime"/>
                <span class="input-group-text" title="Chọn" id="open-flatpickr" data-td-target="#filterCreatedTime">
                    <i class="ki-duotone ki-calendar fs-2">
                        <span class="path1"></span><span class="path2"></span>
                    </i>
                </span>
                <span class="input-group-text" id="clear-flatpickr" title="Xóa" data-clear="true" data-target="filterCreatedTime">
                    <i class="ki-duotone ki-calendar-remove fs-2">
                        <i class="path1"></i><i class="path2"></i><i class="path3"></i><i class="path4"></i><i class="path5"></i><i class="path6"></i>
                    </i>
                </span>
            </div>
        </th>

        <th class="text-center">
            <div class="search-control">
                <button class="btn btn-primary form-control mb-1" title="Tìm kiếm" id="btnTableSearch">
                    <span class="svg-icon svg-icon svg-icon-1 svg_search_2 m-0">
                        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                            <path d="M21.7 18.9L18.6 15.8C17.9 16.9 16.9 17.9 15.8 18.6L18.9 21.7C19.3 22.1 19.9 22.1 20.3 21.7L21.7 20.3C22.1 19.9 22.1 19.3 21.7 18.9Z" fill="currentColor"></path>
                            <path opacity="0.3"
                                  d="M11 20C6 20 2 16 2 11C2 6 6 2 11 2C16 2 20 6 20 11C20 16 16 20 11 20ZM11 4C7.1 4 4 7.1 4 11C4 14.9 7.1 18 11 18C14.9 18 18 14.9 18 11C18 7.1 14.9 4 11 4ZM8 11C8 9.3 9.3 8 11 8C11.6 8 12 7.6 12 7C12 6.4 11.6 6 11 6C8.2 6 6 8.2 6 11C6 11.6 6.4 12 7 12C7.6 12 8 11.6 8 11Z"
                                  fill="currentColor">
                            </path>
                        </svg>
                    </span>
                </button>
                <button class="btn btn-secondary form-control" title="Reset" id="btnTableResetSearch">
                    <span class="svg-icon svg-icon svg-icon-1 svg_cancel m-0">
                        <svg width="32" height="32" viewBox="0 0 32 32" fill="none" xmlns="http://www.w3.org/2000/svg">
                            <rect x="9.39844" y="20.7144" width="16" height="2.66667" rx="1.33333" transform="rotate(-45 9.39844 20.7144)" fill="currentColor"></rect>
                            <rect x="11.2852" y="9.40039" width="16" height="2.66667" rx="1.33333" transform="rotate(45 11.2852 9.40039)" fill="currentColor"></rect>
                        </svg>
                    </span>
                </button>
            </div>
        </th>
    </tr>
    </thead>
    <tbody></tbody>
    <tfoot>
    <tr class="border-top fw-bold fs-6 text-gray-800"></tr>
    </tfoot>
</table>
<!--end::Datatable-->
<div class="modal fade" id="modal-id">
<div class="modal-dialog modal-xl modal-dialog-scrollable">
<div class="modal-content">
<div class="modal-header">
    <h3 class="modal-title" id="defaultModalTitle">Modal title</h3>

    <!--begin::Close-->
    <div class="btn btn-icon btn-sm btn-active-light-primary ms-2" data-bs-dismiss="modal" aria-label="Close">
        <i class="ki-duotone ki-cross fs-1">
            <span class="path1"></span><span class="path2"></span>
        </i>
    </div>
    <!--end::Close-->
</div>
<div class="modal-body">
<form action="#">
<div class="row">
<div class="col-sm-6" hidden>
    <div class="form-group">
        <div class="input-group input-group-solid mb-5">
            <span class="input-group-text" id="basic-addon-id">Mã</span>
            <input readonly type="number" autocomplete="off" class="form-control input-id" id="doctors-id" placeholder="id" aria-label="id" aria-describedby="basic-addon-id"/>
        </div>
    </div>
</div>

<div class="col-sm-6" style="display: none;">
    <div class="form-group">
        <div class="input-group input-group-solid mb-5">
            <span class="input-group-text" id="basic-addon-active">Kích hoạt</span>
            <input readonly type="number" autocomplete="off" class="form-control input-active" id="doctors-active" placeholder="active" aria-label="active" aria-describedby="basic-addon-active"/>
        </div>
    </div>
</div>

<div class="col-sm-4">
    <div class="form-group">
        <div class="fv-plugins-icon-container mb-5">
            <span class="fw-semibold fs-6 mb-2 required" id="basic-addon-name">Tên</span>
            <input type="text" required autocomplete="off" class="form-control input-name" id="doctors-name" placeholder="" aria-label="name" aria-describedby="basic-addon-name"/>
        </div>
    </div>
</div>


<div class="col-sm-4">
    <div class="form-group">
        <div class="fv-plugins-icon-container mb-5">
            <span class="fw-semibold fs-6 mb-2" id="basic-addon-info">Nội dung</span>
            <input type="text" autocomplete="off" class="form-control input-info" id="doctors-info" placeholder="" aria-label="info" aria-describedby="basic-addon-info"/>
        </div>
    </div>
</div>

<div class="col-sm-4">
    <div class="form-group">
        <div class="fv-plugins-icon-container mb-5">
            <span class="fw-semibold fs-6 mb-2" id="basic-addon-workAddress">Nơi làm việc</span>
            <input type="text"
                   autocomplete="off"
                   class="form-control input-workAddress"
                   id="doctors-workAddress"
                   placeholder=""
                   aria-label="workAddress"
                   aria-describedby="basic-addon-workAddress"/>
        </div>
    </div>
</div>

<div class="col-sm-4">
    <div class="form-group">
        <div class="fv-plugins-icon-container mb-5">
            <span class="fw-semibold fs-6 mb-2" id="basic-addon-workAddress">Quận huyện làm việc</span>
            <select class="form-select rounded-8 dataSelect" 
                    multiple="multiple"
                    id="doctors-address" 
                    data-control="select2"
                    aria-label="workAddress"
                    aria-describedby="basic-addon-workAddress">
            </select>
        </div>
    </div>
</div>

<div class="col-sm-4">
    <div class="form-group">
        <div class="fv-plugins-icon-container mb-5">
            <span class="fw-semibold fs-6 mb-2" id="basic-addon-position">Chức vụ</span>
            <input type="text" autocomplete="off" class="form-control input-position" id="doctors-position" placeholder="" aria-label="position" aria-describedby="basic-addon-position"/>
        </div>
    </div>
</div>

<div class="col-sm-4">
    <div class="form-group">
        <div class="fv-plugins-icon-container mb-5">
            <span class="fw-semibold fs-6 mb-2" id="basic-addon-experience">Kinh nghiệm</span>
            <input type="text"
                   autocomplete="off"
                   class="form-control input-experience"
                   id="doctors-experience"
                   placeholder=""
                   aria-label="experience"
                   aria-describedby="basic-addon-experience"/>
        </div>
    </div>
</div>

<div class="col-sm-4">
    <div class="form-group">
        <div class="fv-plugins-icon-container mb-5">
            <span class="fw-semibold fs-6 mb-2" id="basic-addon-specialist">Chuyên khoa</span>
            <input type="text"
                   autocomplete="off"
                   class="form-control input-specialist"
                   id="doctors-specialist"
                   placeholder=""
                   aria-label="specialist"
                   aria-describedby="basic-addon-specialist"/>
        </div>
    </div>
</div>

<div class="col-sm-4">
    <div class="form-group">
        <div class="fv-plugins-icon-container mb-5">
            <span class="fw-semibold fs-6 mb-2" id="basic-addon-language">Ngôn ngữ</span>
            <input type="text" autocomplete="off" class="form-control input-language" id="doctors-language" placeholder="" aria-label="language" aria-describedby="basic-addon-language"/>
        </div>
    </div>
</div>

<div class="col-sm-4">
    <div class="form-group">
        <div class="fv-plugins-icon-container mb-5">
            <span class="fw-semibold fs-6 mb-2" id="basic-addon-license">Giấy phép hành nghề</span>
            <input type="text" autocomplete="off" class="form-control input-license" id="doctors-license" placeholder="" aria-label="license" aria-describedby="basic-addon-license"/>
        </div>
    </div>
</div>

<div class="col-sm-4">
    <div class="form-group">
        <div class="fv-plugins-icon-container mb-5">
            <span class="fw-semibold fs-6 mb-2 required">
                Tài khoản
            </span>
            <div class="overflow-hidden flex-grow-1">
                <select class="form-select dataSelect" id="doctors-accountId" data-control="select2" data-dropdown-parent="#modal-id"> </select>
            </div>
        </div>
    </div>
    <script>
                                            var accountData = [];
                                            async function loadDataSelectAccount() {
                                                await $.ajax({
                                                    url: systemURL + "account/api/ListByRoleId/" + @RoleId.DOCTOR,
                                                    type: "GET",
                                                    async: "true",
                                                    contentType: "application/json",
                                                    success: function(responseData) {
                                                        //console.log(new Date().getSeconds() + ":" + new Date().getMilliseconds() + " - loaded account");
                                                        // debugger;
                                                        var data = responseData.data;
                                                        accountData = data;
                                                    },
                                                    error: function(e) {
                                                        //console.log(e.message);
                                                    },
                                                });
                                            }
                                            $(document).ready(function() {
                                                loadDataSelectAccount();
                                                $.when(loadDataSelectAccount()).done(function() {
                                                    $("#filterAccountId").select2();
                                                    accountData.forEach(function(item) {
                                                        $("#doctors-accountId").append(new Option(item.name, item.id, false, false)).trigger("change");
                                                        $("#filterAccountId").append(new Option(item.name, item.id, false, false));
                                                    });
                                                    $('#doctors-accountId').on('change', function() {
                                                        var selectedValue = $("#select2-doctors-accountId-container").html();
                                                        //console.log('Giá trị đã thay đổi:', selectedValue);
                                                        $("#doctors-name").val(selectedValue)
                                                        // Thực hiện các thao tác khác sau khi giá trị thay đổi
                                                    });
                                                });
                                            });
                                        </script>
</div>

<div class="col-sm-4">
    <div class="form-group">
        <div class="fv-plugins-icon-container mb-5">
            <span class="fw-semibold fs-6 mb-2 required">
                Loại bác sĩ
            </span>
            <div class="overflow-hidden flex-grow-1">
                <select class="form-select dataSelect" id="doctors-doctorTypeId" data-control="select2" data-dropdown-parent="#modal-id"> </select>
            </div>
        </div>
    </div>
    <script>
                                            var doctorTypeData = [];
                                            async function loadDataSelectDoctorType() {
                                                await $.ajax({
                                                    url: systemURL + "doctorType/api/list",
                                                    type: "GET",
                                                    async: "true",
                                                    contentType: "application/json",
                                                    success: function(responseData) {
                                                        // console.log(new Date().getSeconds() + ":" + new Date().getMilliseconds() + " - loaded account");
                                                        // debugger;
                                                        var data = responseData.data;
                                                        doctorTypeData = data;
                                                    },
                                                    error: function(e) {
                                                        //console.log(e.message);
                                                    },
                                                });
                                            }
                                            $(document).ready(function() {
                                                loadDataSelectDoctorType();
                                                $.when(loadDataSelectDoctorType()).done(function() {
                                                    $("#filterDoctorTypeId").select2();
                                                    doctorTypeData.forEach(function(item) {
                                                        $("#doctors-doctorTypeId").append(new Option(item.name, item.id, false, false)).trigger("change");
                                                        $("#filterDoctorTypeId").append(new Option(item.name, item.id, false, false));
                                                    });
                                                });
                                            });
                                        </script>
</div>

<div class="col-sm-4">
    <div class="form-group">
        <div class="fv-plugins-icon-container mb-5">
            <span class="fw-semibold fs-6 mb-2 required">
                Trạng thái bác sĩ
            </span>
            <div class="overflow-hidden flex-grow-1">
                <select class="form-select dataSelect" id="doctors-doctorStatusId" data-control="select2" data-dropdown-parent="#modal-id"> </select>
            </div>
        </div>
    </div>
    <script>
                                            var doctorStatusData = [];
                                            async function loadDataSelectDoctorStatus() {
                                                await $.ajax({
                                                    url: systemURL + "doctorStatus/api/list",
                                                    type: "GET",
                                                    async: "true",
                                                    contentType: "application/json",
                                                    success: function(responseData) {
                                                        //console.log(new Date().getSeconds() + ":" + new Date().getMilliseconds() + " - loaded account");
                                                        // debugger;
                                                        var data = responseData.data;
                                                        doctorStatusData = data;
                                                    },
                                                    error: function(e) {
                                                        //console.log(e.message);
                                                    },
                                                });
                                            }
                                            $(document).ready(function() {
                                                loadDataSelectDoctorStatus();
                                                $.when(loadDataSelectDoctorStatus()).done(function() {
                                                    $("#filterDoctorStatusId").select2();
                                                    doctorStatusData.forEach(function(item) {
                                                        $("#doctors-doctorStatusId").append(new Option(item.name, item.id, false, false)).trigger("change");
                                                        $("#filterDoctorStatusId").append(new Option(item.name, item.id, false, false));
                                                    });
                                                });
                                            });
                                        </script>
</div>

<div class="col-sm-4">
    <div class="form-group">
        <div class="fv-plugins-icon-container mb-5">
            <span class="fw-semibold fs-6 mb-2 required">
                Cơ sở y tế
            </span>
            <div class="overflow-hidden flex-grow-1">
                <select class="form-select dataSelect" id="doctors-healthFacilityId" data-control="select2" data-dropdown-parent="#modal-id"> </select>
            </div>
        </div>
    </div>
    <script>
                                            var healthFacilityData = [];
                                            async function loadDataSelectHealthFacility() {
                                                await $.ajax({
                                                    url: systemURL + "healthFacility/api/list",
                                                    type: "GET",
                                                    async: "true",
                                                    contentType: "application/json",
                                                    success: function(responseData) {
                                                        //console.log(new Date().getSeconds() + ":" + new Date().getMilliseconds() + " - loaded account");
                                                        // debugger;
                                                        var data = responseData.data;
                                                        healthFacilityData = data;
                                                    },
                                                    error: function(e) {
                                                        //console.log(e.message);
                                                    },
                                                });
                                            }
                                            $(document).ready(function() {
                                                loadDataSelectHealthFacility();
                                                $.when(loadDataSelectHealthFacility()).done(function() {
                                                    $("#filterHealthFacilityId").select2();
                                                    healthFacilityData.forEach(function(item) {
                                                        $("#doctors-healthFacilityId").append(new Option(item.name, item.id, false, false)).trigger("change");
                                                        $("#filterHealthFacilityId").append(new Option(item.name, item.id, false, false));
                                                    });
                                                });
                                            });
                                        </script>
</div>
<div class="col-sm-4">
    <div class="form-group">
        <div class="fv-plugins-icon-container mb-5">
            <span class="fw-semibold fs-6 mb-2 required">
                Dịch vụ
            </span>
            <div class="overflow-hidden flex-grow-1">
                <select class="form-select dataSelect" id="doctors-servicesId" data-control="select2" data-dropdown-parent="#modal-id"> </select>
            </div>
        </div>
    </div>
    <script>
                                            var healthFacilityData = [];
                                            async function loadDataSelectServices() {
                                                await $.ajax({
                                                    url: systemURL + "services/api/list",
                                                    type: "GET",
                                                    async: "true",
                                                    contentType: "application/json",
                                                    success: function (responseData) {
                                                        //console.log(new Date().getSeconds() + ":" + new Date().getMilliseconds() + " - loaded account");
                                                        // debugger;
                                                        var data = responseData.data;
                                                        servicesData = data;
                                                    },
                                                    error: function (e) {
                                                        //console.log(e.message);
                                                    },
                                                });
                                            }
                                            $(document).ready(function () {
                                                loadDataSelectServices();
                                                $.when(loadDataSelectServices()).done(function () {
                                                    $("#filterServicesId").select2();
                                                    servicesData.forEach(function (item) {
                                                        $("#doctors-servicesId").append(new Option(item.name, item.id, false, false)).trigger("change");
                                                        $("#filterServicesId").append(new Option(item.name, item.id, false, false));
                                                    });
                                                });
                                            });
                                        </script>
</div>
<div class="col-sm-4">
    <div class="form-group">
        <div class="fv-plugins-icon-container mb-5">
            <label class="fw-semibold fs-6 " id="basic-addon-startTime">Thời gian bắt đầu làm việc</label>
            <input type='text' autocomplete="off" id="doctors-startTime" required class="form-control " aria-label="StartTime" aria-describedby="basic-addon-startTime"/>
            <label class="input-group-addon">
                <span class="glyphicon glyphicon-calendar"></span>
            </label>
        </div>
    </div>
</div>
<div class="col-sm-4">
    <div class="form-group">
        <div class="fv-plugins-icon-container mb-5">
            <label class="fw-semibold fs-6 " id="basic-addon-endTime">Thời gian kết thúc làm việc</label>
            <input type='text' autocomplete="off" id="doctors-endTime" required class="form-control " aria-label="EndTime" aria-describedby="basic-addon-endTime"/>
            <label class="input-group-addon">
                <span class="glyphicon glyphicon-calendar"></span>
            </label>
        </div>
    </div>
</div>
<div class="col-sm-4">
    <div class="form-group">
        <div class="fv-plugins-icon-container mb-5">
            <label class="fw-semibold fs-6 " id="basic-addon-createdTime">Ngày tạo</label>
            <input type='text' autocomplete="off" id="doctors-createdTime" required class="form-control " aria-label="createdTime" aria-describedby="basic-addon-createdTime" readonly disabled/>
            <label class="input-group-addon">
                <span class="glyphicon glyphicon-calendar"></span>
            </label>
        </div>
    </div>
</div>
<div class="col-sm-12">
    <div class="form-group">
        <div class="fv-plugins-icon-container mb-5">
            <span class="fw-semibold fs-6 mb-2" id="basic-addon-description">Mô tả</span>
            <textarea class="form-control input-description" rows="2" id="doctors-description" aria-label="description" aria-describedby="basic-addon-description"></textarea>
        </div>
    </div>
</div>


</div>
</form>
</div>
<div class="modal-footer sticky-action justify-content-center">
    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Đóng</button>
    <button type="button" class="btn btn-primary" id="btnUpdateItem">Lưu</button>
</div>
</div>
</div>
</div>
<!--end::Col-->
</div>
</div>
<!--end::Content container-->
</div>
<!--begin:Base load data-->
<script>
    var showItem = ["id", "name", "workAddress", "position", "experience", "specialist", "language", "license", "accountId", "doctorTypeId", "doctorStatusId", "healthFacilityId", "createdTime"];
    var dataSource = [];
    var updatingItemId = 0;
    var editObj;
    var tableUpdating = 0;
    var table;
    const submitButton = document.getElementById("btnUpdateItem");
    submitButton.addEventListener("click", function(e) {
        e.preventDefault();
        submitButton.setAttribute("data-kt-indicator", "on");
        // Disable button to avoid multiple click
        //submitButton.disabled = true;
        // Simulate form submission. For more info check the plugin's official documentation: https://sweetalert2.github.io/
        //updateItem(updatingItemId);
    });

    $('#search-input').on('keyup', function(e) {
        if (e.key === 'Enter' || e.keyCode === 13) {
            // Thực hiện tìm kiếm khi phím Enter được nhấn
            table.search(this.value).draw();
        }
    });
    
    async function loadDataDoctorDistrictAddressId(provinceId) {
    try {
        const responseData = await $.ajax({
            url: systemURL + 'district/api/ListByProvinceId/' + provinceId,
            type: 'GET',
            async: true,
            contentType: 'application/json'
        });
        const data = responseData.data;
        for (const item of data) {
            $('#doctors-address').append(new Option(item.name, item.id, false, false));
        }
    } catch (error) {
        console.error("Error loading district data:", error);
    }
}
    

    $(document).ready(async function() {
        
        // Load data
        loadData();

        // Datetime picker
        document.querySelectorAll(".datepicker").forEach(function(item) {
            new tempusDominus.TempusDominus(item, datePickerOption);
        });
        $(".datepicker").on("dp.change", function(e) {
            // console.log(this.value);
            this.value = moment(this.value).format("YYYY-MM-DD HH:mm:ss");
            // console.log(this.value);
        });
        //Flat pickr format
        $("#filterCreatedTime_input").flatpickr({
            dateFormat: "d/m/Y",
            mode: "range",
        });
        $("#doctors-startTime").flatpickr({
            enableTime: true,
            noCalendar: true,
            dateFormat: "H:i:S",
            time_24hr: true
        })
        $("#doctors-endTime").flatpickr({
            enableTime: true,
            noCalendar: true,
            dateFormat: "H:i:S",
            time_24hr: true
        })
        $("#open-flatpickr").click(function() {
            $("#filterCreatedTime_input").click();
        });
        $("#clear-flatpickr").click(function() {
            $("#filterCreatedTime_input").val("");
        });

        $(".dataSelect").select2();

        $("#btnTableSearch").click(function() {
            tableSearch();
        });

        $("#tableData thead:nth-child(2) tr th input").keypress(function(e) {
            let key = e.which;
            if (key == 13) {
                $("#btnTableSearch").click();
            }
        });
        $("#btnTableResetSearch").click(function() {
            $(".tableheaderFillter").val("").trigger("change");
            tableSearch();
        });
        await loadDataDoctorDistrictAddressId(1001);
    });
    function loadData() {
        initTable();
    }
    function initTable() {
        table = $("#tableData").DataTable({
            processing: true,
            serverSide: true,
            paging: true,
            searching: { regex: true },
            order: [10, "desc"],
            oLanguage: {
                sUrl: "/js/Vietnamese.json",
            },
            ajax: {
                url: systemURL + "doctors/api/list-server-side",
                type: "POST",
                contentType: "application/json",
                dataType: "json",
                data: function(d) {
                    d.searchAll = $("#search-input").val();
                    d.accountIds = $("#filterAccountId").val();
                    d.doctorTypeIds = $("#filterDoctorTypeId").val();
                    d.doctorStatusIds = $("#filterDoctorStatusId").val();
                    d.healthFacilityIds = $("#filterHealthFacilityId").val();
                    return JSON.stringify(d);
                },
            },
            columns: [
                {
                    data: "id",
                    render: function(data, type, row, meta) {
                        var info = table.page.info();
                        var stt = meta.row + 1 + info.page * info.length;
                        return stt; // This contains the row index
                    },
                },

                //{
                //    data: "id",
                //    render: function (data, type, row, meta) {
                //        return "<span id='row" + row.id + "-column-id'>" + data + "<span>";
                //    },
                //},

                {
                    data: "name",
                    render: function(data, type, row, meta) {
                        return "<span id='row" + row.id + "-column-id'>" + data + "<span>";
                    },
                },

                {
                    data: "workAddress",
                    render: function(data, type, row, meta) {
                        return "<span id='row" + row.id + "-column-id'>" + data + "<span>";
                    },
                },

                {
                    data: "position",
                    render: function(data, type, row, meta) {
                        return "<span id='row" + row.id + "-column-id'>" + data + "<span>";
                    },
                },

                {
                    data: "experience",
                    render: function(data, type, row, meta) {
                        return "<span id='row" + row.id + "-column-id'>" + data + "<span>";
                    },
                },

                {
                    data: "specialist",
                    render: function(data, type, row, meta) {
                        return "<span id='row" + row.id + "-column-id'>" + data + "<span>";
                    },
                },

                //{
                //    data: "language",
                //    render: function (data, type, row, meta) {
                //        return "<span id='row" + row.id + "-column-id'>" + data + "<span>";
                //    },
                //},

                //{
                //    data: "license",
                //    render: function (data, type, row, meta) {
                //        return "<span id='row" + row.id + "-column-id'>" + data + "<span>";
                //    },
                //},

                {
                    data: "accountId",
                    render: function(data, type, row, meta) {
                        return "<span id='row" + row.id + "-column-id'>" + row.accountName + "<span>";
                    },
                },
                {
                    data: "doctorTypeId",
                    render: function(data, type, row, meta) {
                        return "<span id='row" + row.id + "-column-id'>" + row.doctorTypeName + "<span>";
                    },
                },
                {
                    data: "doctorStatusId",
                    render: function(data, type, row, meta) {
                        return "<span id='row" + row.id + "-column-id'>" + row.doctorStatusName + "<span>";
                    },
                },
                {
                    data: "healthFacilityId",
                    render: function(data, type, row, meta) {
                        return "<span id='row" + row.id + "-column-id'>" + row.healthFacilityName + "<span>";
                    },
                },
                {
                    data: "createdTime",
                    render: function(data) {
                        var tempDate = new Date(data);
                        var displayValue = moment(data).format("DD/MM/YYYY HH:mm:ss");
                        return displayValue;
                    },
                },

                {
                    data: "id",
                    render: function(data, type, row, meta) {
                        return (
                            "<div class='d-flex justify-content-center gap-2'>" +
                            "<a title='Cập nhật' onclick='editItem(" +
                            row.id +
                            ")' class='me-2 btn_manage'><span class='svg-icon-success svg-icon  svg-icon-1 svg_teh009'><span class='svg-icon-primary svg-icon  svg-icon-1'> <svg width='24' height='24' viewBox='0 0 24 24' fill='none' xmlns='http://www.w3.org/2000/svg'><path opacity='0.3' fill-rule='evenodd' clip-rule='evenodd' d='M2 4.63158C2 3.1782 3.1782 2 4.63158 2H13.47C14.0155 2 14.278 2.66919 13.8778 3.04006L12.4556 4.35821C11.9009 4.87228 11.1726 5.15789 10.4163 5.15789H7.1579C6.05333 5.15789 5.15789 6.05333 5.15789 7.1579V16.8421C5.15789 17.9467 6.05333 18.8421 7.1579 18.8421H16.8421C17.9467 18.8421 18.8421 17.9467 18.8421 16.8421V13.7518C18.8421 12.927 19.1817 12.1387 19.7809 11.572L20.9878 10.4308C21.3703 10.0691 22 10.3403 22 10.8668V19.3684C22 20.8218 20.8218 22 19.3684 22H4.63158C3.1782 22 2 20.8218 2 19.3684V4.63158Z' fill='currentColor'></path><path d='M10.9256 11.1882C10.5351 10.7977 10.5351 10.1645 10.9256 9.77397L18.0669 2.6327C18.8479 1.85165 20.1143 1.85165 20.8953 2.6327L21.3665 3.10391C22.1476 3.88496 22.1476 5.15129 21.3665 5.93234L14.2252 13.0736C13.8347 13.4641 13.2016 13.4641 12.811 13.0736L10.9256 11.1882Z' fill='currentColor'></path><path d='M8.82343 12.0064L8.08852 14.3348C7.8655 15.0414 8.46151 15.7366 9.19388 15.6242L11.8974 15.2092C12.4642 15.1222 12.6916 14.4278 12.2861 14.0223L9.98595 11.7221C9.61452 11.3507 8.98154 11.5055 8.82343 12.0064Z' fill='currentColor'></path></svg></span></span></a>" +
                            "<a title='Cập nhật' onclick='deleteItem(" +
                            row.id +
                            ")' class='me-2 btn_manage'><span class='svg-icon-success svg-icon  svg-icon-1 svg_teh009'><span class='svg-icon-danger svg-icon  svg-icon-1'><svg width='24' height='24' viewBox='0 0 24 24' fill='none' xmlns='http://www.w3.org/2000/svg'><path d='M5 9C5 8.44772 5.44772 8 6 8H18C18.5523 8 19 8.44772 19 9V18C19 19.6569 17.6569 21 16 21H8C6.34315 21 5 19.6569 5 18V9Z' fill='currentColor'></path><path opacity='0.5' d='M5 5C5 4.44772 5.44772 4 6 4H18C18.5523 4 19 4.44772 19 5V5C19 5.55228 18.5523 6 18 6H6C5.44772 6 5 5.55228 5 5V5Z' fill='currentColor'></path><path opacity='0.5' d='M9 4C9 3.44772 9.44772 3 10 3H14C14.5523 3 15 3.44772 15 4V4H9V4Z' fill='currentColor'></path></svg></span></a>"
                        );
                    },
                },
            ],
            columnDefs: [
                { targets: "no-sort", orderable: false },
                { targets: "no-search", searchable: false },
                { orderable: false, targets: [-1, 0] },
            ],
            aLengthMenu: [
                [10, 25, 50, 100],
                [10, 25, 50, 100],
            ],
            drawCallback: function() {
                $("#tableData tfoot").html("");
                $("#tableData thead:nth-child(1) tr").clone(true).appendTo("#tableData tfoot");
                $("#tableData tfoot tr").addClass("border-top");
            },
        });
    }
    async function editItem(id) {
        updatingItemId = id;
        $("#modal-id").modal("show");
        if (id > 0) {
            editObj = await getItemById(id);
        }
        $("#defaultModalTitle").text(id == 0 ? "Thêm mới" : "Cập nhật");
        $("#doctors-id").val(id > 0 ? editObj.id : "0");
        $("#doctors-active").val(id > 0 ? editObj.active : "");
        $("#doctors-name").val(id > 0 ? editObj.name : "");
        $("#doctors-description").val(id > 0 ? editObj.description : "");
        $("#doctors-info").val(id > 0 ? editObj.info : "");
        $("#doctors-workAddress").val(id > 0 ? editObj.workAddress : "");
        var defaultAddress;
        if (editObj.address === null || editObj.address === undefined) {
            defaultAddress = '0';
        } else {
            defaultAddress = editObj.address.split(',');
        }
        $("#doctors-address").val(defaultAddress).trigger("change");
        $("#doctors-position").val(id > 0 ? editObj.position : "");
        $("#doctors-experience").val(id > 0 ? editObj.experience : "");
        $("#doctors-specialist").val(id > 0 ? editObj.specialist : "");
        $("#doctors-language").val(id > 0 ? editObj.language : "");
        $("#doctors-license").val(id > 0 ? editObj.license : "");
        $("#doctors-accountId")
            .val(id > 0 ? editObj.accountId : "")
            .trigger("change");
        $("#doctors-servicesId")
            .val(id > 0 ? editObj.servicesId : "")
            .trigger("change");
        $("#doctors-doctorTypeId")
            .val(id > 0 ? editObj.doctorTypeId : "")
            .trigger("change");
        $("#doctors-doctorStatusId")
            .val(id > 0 ? editObj.doctorStatusId : "")
            .trigger("change");
        $("#doctors-healthFacilityId")
            .val(id > 0 ? editObj.healthFacilityId : "")
            .trigger("change");
        $("#doctors-createdTime").val(id > 0 ? moment(editObj.createdTime).format("DD/MM/YYYY HH:mm:ss") : moment(new Date()).format("DD/MM/YYYY HH:mm:ss"));
        $("#doctors-startTime").val(id > 0 ? editObj.startTime : "");
        $("#doctors-endTime").val(id > 0 ? editObj.endTime : "");
        //formatNumber();
    }
    async function updateItem(id) {
        var actionName = id == 0 ? "Bạn muốn tạo mới" : "Cập nhật";
        var obj;
        if (id > 0) {
            obj = await getItemById(id);
        }
        let objName = id > 0 ? obj.name : "item";
        validateInputNumber();
        var updatingObj = {
            id: $("#doctors-id").val(),
            active: $("#doctors-active").val(),
            name: $("#doctors-name").val(),
            description: $("#doctors-description").val(),
            info: $("#doctors-info").val(),
            workAddress: $("#doctors-workAddress").val(),
            address: $("#doctors-address").val().join(','),
            position: $("#doctors-position").val(),
            experience: $("#doctors-experience").val(),
            specialist: $("#doctors-specialist").val(),
            language: $("#doctors-language").val(),
            license: $("#doctors-license").val(),
            accountId: $("#doctors-accountId").val(),
            doctorTypeId: $("#doctors-doctorTypeId").val(),
            doctorStatusId: $("#doctors-doctorStatusId").val(),
            healthFacilityId: $("#doctors-healthFacilityId").val(),
            servicesId: $("#doctors-servicesId").val(),
            createdTime: formatDatetimeUpdate($("#doctors-createdTime").val()),
            startTime: $("#doctors-startTime").val(),
            endTime: $("#doctors-endTime").val()
        };
        Swal.fire({
            title: "Xác nhận thay đổi?",
            text: "" + actionName + " " + objName + "",
            icon: "info",
            showCancelButton: true,
            confirmButtonColor: "#3085d6",
            cancelButtonColor: "#443",
            confirmButtonText: "Xác nhận",
            cancelButtonText: "Huỷ",
        }).then((result) => {
            if (result.value) {
                $("#modal-id").modal("hide");
                //CALL AJAX TO UPDATE
                if (id > 0) {
                    $.ajax({
                        url: systemURL + "doctors/api/update",
                        type: "POST",
                        contentType: "application/json",
                        data: JSON.stringify(updatingObj),
                        success: function(responseData) {
                            // debugger;
                            if (responseData.status == 200 && responseData.message === "SUCCESS") {
                                Swal.fire("Thành Công!", 'Đã cập nhật "' + objName + '" ', "success");
                                reGenTable();
                                // Remove loading indication
                                submitButton.removeAttribute("data-kt-indicator");
                                // Enable button
                                submitButton.disabled = false;
                            }
                        },
                        error: function(e) {
                            //console.log(e.message);
                            Swal.fire("Lỗi!", "Đã xảy ra lỗi, vui lòng thử lại", "error");
                            // Remove loading indication
                            submitButton.removeAttribute("data-kt-indicator");
                            // Enable button
                            submitButton.disabled = false;
                        },
                    });
                }
                //CALL AJAX TO CREATE
                if (id == 0) {
                    updatingObj.id = 1;
                    delete updatingObj["id"];
                    updatingObj.active = 1;
                    updatingObj.createdTime = new Date();
                    console.log(updatingObj);
                    $.ajax({
                        url: systemURL + "doctors/api/add",
                        type: "POST",
                        contentType: "application/json",
                        data: JSON.stringify(updatingObj),
                        success: function(responseData) {
                            // debugger;
                            if (responseData.status == 201 && responseData.message === "CREATED") {
                                Swal.fire("Thành công!", "Đã cập nhật dữ liệu", "success");
                                updatingObj = responseData.data;
                                reGenTable();
                                // Remove loading indication
                                submitButton.removeAttribute("data-kt-indicator");
                                // Enable button
                                submitButton.disabled = false;
                            }
                        },
                        error: function(e) {
                            //console.log(e.message);
                            Swal.fire("Lỗi!", "Đã xảy ra lỗi, vui lòng thử lại", "error");
                            // Remove loading indication
                            submitButton.removeAttribute("data-kt-indicator");
                            // Enable button
                            submitButton.disabled = false;
                        },
                    });
                }
            } else {
                // Remove loading indication
                submitButton.removeAttribute("data-kt-indicator");
                // Enable button
                submitButton.disabled = false;
            }
        });
    }
    async function deleteItem(id) {
        updatingObj = table.ajax.json().data.find((c) => c.id == id);
        let objName = id > 0 ? updatingObj.name : "item";
        Swal.fire({
            title: "Xác nhận thay đổi?",
            text: "Xóa " + objName + "",
            icon: "warning",
            showCancelButton: true,
            confirmButtonColor: "#d33",
            cancelButtonColor: "#3085d6",
            confirmButtonText: "Xoá",
            cancelButtonText: "Huỷ",
        }).then((result) => {
            if (result.value) {
                //CALL AJAX TO DELETE
                $.ajax({
                    url: systemURL + "doctors/api/delete",
                    type: "POST",
                    contentType: "application/json",
                    data: JSON.stringify({ id: id }),
                    success: function(responseData) {
                        // debugger;
                        if (responseData.status == 200 && responseData.message === "SUCCESS") {
                            Swal.fire("Thành công!", "Đã xoá " + updatingObj.name + ".", "success");
                            reGenTable();
                        }
                    },
                    error: function(e) {
                        //console.log(e.message);
                        Swal.fire("Lỗi!", "Đã xảy ra lỗi, vui lòng thử lại", "error");
                    },
                });
            } else {
                // Remove loading indication
                submitButton.removeAttribute("data-kt-indicator");
                // Enable button
                submitButton.disabled = false;
            }
        });
    }
    async function getItemById(id) {
        var data;
        await $.ajax({
            url: systemURL + "doctors/api/detail/" + id,
            method: "GET",
            success: function(responseData) {
                data = responseData.data[0];
            },
            error: function(e) { },
        });
        return data;
    }

    $("#btnUpdateItem").on("click", function() {
        validate();
    })

    function validate() {
        var errorList = [];

        if ($("#doctors-name").val().length == 0) {
            errorList.push("Tên không được để trống.");
        }
        if ($("#doctors-workAddress").val().length == 0) {
            errorList.push("Nơi làm việc không được để trống.");
        }
        if ($("#doctors-position").val().length == 0) {
            errorList.push("Chức vụ không được để trống.");
        }
        if ($("#doctors-specialist").val().length == 0) {
            errorList.push("Chuyên khoa không được để trống.");
        }
        if ($("#doctors-accountId").val() == null) {
            errorList.push("Tài khoản không được để trống!");
        }
        if ($("#doctors-doctorTypeId").val() == null) {
            errorList.push("Loại bác sĩ không được để trống!");
        }
        if ($("#doctors-doctorStatusId").val() == null) {
            errorList.push("Trạng thái bác sĩ không được để trống!");
        }
        if ($("#doctors-healthFacilityId").val() == null) {
            errorList.push("Cơ sở y tế không được để trống!");
        }
        if ($("#doctors-startTime").val() > $("#doctors-endTime").val()){
            errorList.push("Thời gian bắt đầu không được muộn hơn thời gian kết thúc!");
        }
        if (errorList.length > 0) {
            var contentError = "<ul>";
            errorList.forEach(function(item, index) {
                contentError += "<li class='text-start'>" + item + "</li>";
            })
            contentError += "</ul>";
            var actionName = (updatingItemId > 0 ? "Cập nhật" : "Thêm mới");
            var swalSubTitle = "<p class='swal__admin__subtitle'>" + actionName + " không thành công</p>";
            Swal.fire(
                'Quản lý tài khoản' + swalSubTitle,
                contentError,
                'warning'
            );
        } else {
            updateItem(updatingItemId);
        }
    }

    function reGenTable() {
        tableUpdating = 0;
        table.destroy();
        $(".tableHeaderFilter").val(null).trigger("change");
        $("#tableData tbody").html("");
        loadData();
    }
</script>
<!--end:Base load data-->
<!--begin:setting in data table-->
<script>
    function tableSearch() {
        table.column(1).search($("#tableData thead:nth-child(2) tr th:nth-child(2) input").val());
        table.column(2).search($("#tableData thead:nth-child(2) tr th:nth-child(3) input").val());
        table.column(3).search($("#tableData thead:nth-child(2) tr th:nth-child(4) input").val());
        table.column(4).search($("#tableData thead:nth-child(2) tr th:nth-child(5) input").val());
        table.column(5).search($("#tableData thead:nth-child(2) tr th:nth-child(6) input").val());
        table.column(6).search($("#tableData thead:nth-child(2) tr th:nth-child(7) input").val());
        table.column(7).search($("#tableData thead:nth-child(2) tr th:nth-child(8) input").val());
        table.column(8).search($("#tableData thead:nth-child(2) tr th:nth-child(9) input").val());
        table.column(9).search($("#tableData thead:nth-child(2) tr th:nth-child(10) input").val());
        table.column(10).search($("#tableData thead:nth-child(2) tr th:nth-child(11) input").val());
        //table.column(11).search($("#tableData thead:nth-child(2) tr th:nth-child(12) input").val());
        //table.column(12).search($("#tableData thead:nth-child(2) tr th:nth-child(13) input").val());

        table.draw();
    }
</script>
<!--end:setting in data table-->