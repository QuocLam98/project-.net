@using HomeDoctorSolution.Constants;
@{
    Layout = "_Admin_Layout";
}
<style type="text/css">
    /*tree view css*/
    .input-color-container {
        position: absolute;
        overflow: hidden;
        width: 1.5rem;
        height: 1.5rem;
        border: solid 2px #ddd;
        border-radius: 50%;
        right: 8px;
    }

    .input-color {
        position: absolute;
        right: -3px;
        top: -2px;
        width: 1.7rem;
        height: 1.7rem;
        border: none;
    }
    /*  #colorShow::before {
            content: '';
            background-color: red;
            position: relative;
            width: 1.5rem;
            display: inline-block;
            height: 1.5rem;
            border-radius: 50%;
        }
     */
    .tree {
        margin: 0;
        padding: 0;
        list-style: none;
    }

        .tree ul {
            margin: 0;
            padding: 0;
            list-style: none;
            margin-left: 1em;
            position: relative;
        }

            .tree ul ul {
                margin-left: 0.5em;
            }

            .tree ul:before {
                content: "";
                display: block;
                width: 0;
                position: absolute;
                top: 0;
                bottom: 0;
                left: 0;
                border-left: 1px solid;
            }

            .tree ul li:before {
                content: "";
                display: block;
                width: 10px;
                height: 0;
                border-top: 1px solid;
                margin-top: -1px;
                position: absolute;
                top: 1em;
                left: 0;
            }

            .tree ul li:last-child:before {
                background: var(--bs-body-bg);
                height: auto;
                top: 1em;
                bottom: 0;
            }

        .tree li {
            margin: 0 0 5px;
            padding: 0 1em;
            line-height: 2.5em;
            color: #b9c7d480;
            font-weight: 500;
            font-size: 14px;
            position: relative;
            cursor: default;
        }

        .tree .branch div {
            display: inline;
        }

        .tree .branch > div .btn {
            display: none;
            border-radius: 50%;
            width: 32px;
            aspect-ratio: 1;
        }

        .tree .branch > div:hover .btn {
            display: inline-block;
        }

        .tree .branch > div .btn i {
            margin: auto;
        }

        .tree .branch > div .btn-admin-edit:hover {
            background: #2ed8b6;
        }

        .tree .branch > div .btn-admin-delete:hover {
            background: #ff5370;
        }

        .tree .branch > div .btn-admin-upper:hover {
            background: #1bf566;
        }

        .tree .branch > div .btn-admin-lower:hover {
            background: #ff5370;
        }

        .tree .branch > div .btn-admin-delete:hover i, .tree li > div .btn-admin-edit:hover i, .tree .branch > div .btn-admin-upper:hover i, .tree li > div .btn-admin-lower:hover i {
            color: #fff;
        }

        .tree li .expand {
            display: block;
        }

        .tree li .collapse {
            display: none;
        }

        .tree li a {
            text-decoration: none;
            color: #369;
        }

        .tree li .name-item {
            cursor: pointer;
            color: #000;
            padding: 0.5rem .75rem;
            vertical-align: middle;
            transition: all 0.2s ease-in;
        }

            .tree li .name-item:hover {
                color: #fff;
                background-color: #489dff;
                border-radius: 5px;
            }

        .tree li span:hover ~ div {
            display: inline;
        }

        .tree li > i {
            cursor: pointer;
            color: #666;
        }

        .tree li button {
            text-decoration: none;
            color: #369;
            border: none;
            background: transparent;
            margin: 0px 0px 0px 0px;
            padding: 0px 0px 0px 0px;
            outline: 0;
        }

            .tree li button:active {
                text-decoration: none;
                color: #369;
                border: none;
                background: transparent;
                margin: 0px 0px 0px 0px;
                padding: 0px 0px 0px 0px;
                outline: 0;
            }

            .tree li button:focus {
                text-decoration: none;
                color: #369;
                border: none;
                background: transparent;
                margin: 0px 0px 0px 0px;
                padding: 0px 0px 0px 0px;
                outline: 0;
            }

    /*    #kt_app_layout_builder_toggle {
                                bottom: 77px !important;
                            }*/

    .select2-results__option span {
        display: inline-block;
    }

    .btn i {
        padding: 0;
    }

    .btn-admin-delete:not(.btn-outline):not(.btn-dashed):not(.border-hover):not(.border-active):not(.btn-flush):not(.btn-icon) {
        padding: inherit;
    }

    .form-check-label {
        font-weight: 500;
        color: rgb(24, 28, 50);
    }

    .form-check .form-check-input {
        float: left;
        margin-left: 0;
        margin-right: 0.75rem;
    }

    #btnUpdateItem, #modal_courseCategory_cancel {
        padding: calc(0.775rem + 1px) calc(1.5rem + 1px);
    }

    #photoImage {
        object-fit: cover;
        object-position: center;
    }
</style>

<div id="kt_app_content" class="app-content flex-column-fluid">
    <div id="kt_app_content_container" class="app-container  container-fluid ">
        <div class="row">
            <div class="col-12">
                <div class="card">
                    <div class="card-header">
                        <div class="card-toolbar w-100">
                            <!--begin::Toolbar-->
                            <div class="d-flex justify-content-end w-100" data-kt-user-table-toolbar="base">
                                <!--begin::Add user-->
                                <button type="button" class="btn btn-primary btn-sm" onclick="editItem(0)">
                                    <span class="svg-icon svg-icon svg-icon-1 svg_plus p-0">
                                    </span> Thêm mới
                                </button>
                                <!--end::Add user-->
                            </div>
                            <!--end::Toolbar-->
                        </div>
                    </div>
                    <div class="card-body">
                        <!-- Tree view -->
                        <div class="row">
                            <div class="col-5">
                                <ul id="tree" class="tree ">
                                </ul>
                            </div>

                            <div class="col-7">
                                <!--begin::Modal dialog-->
                                <div class="card border border-2" id="modal_courseCategory">
                                    <!--begin::Form-->
                                    <div>
                                        <!--begin::Modal header-->
                                        <div class="modal-header d-flex justify-content-center mt-2" id="kt_modal_add_customer_header">
                                            <!--begin::Modal title-->
                                            <h2 class="fw-bold modal-title">Add a Customer</h2>
                                        </div>
                                        <!--end::Modal header-->
                                        <!--begin::Modal body-->
                                        <div class="modal-body py-5 px-lg-17">
                                            <!--begin::Scroll-->
                                            <div class="scroll-y me-n7 pe-7" id="kt_modal_add_customer_scroll" data-kt-scroll-activate="{default: false, lg: true}" data-kt-scroll-max-height="auto" data-kt-scroll-dependencies="#kt_modal_add_customer_header" data-kt-scroll-wrappers="#kt_modal_add_customer_scroll" data-kt-scroll-offset="300px" style="max-height: 629px;">
                                                <div class="fv-row fv-plugins-icon-container">
                                                    <!--begin::Label-->
                                                    <label class=" col-form-label fw-semibold fs-6 required">Ảnh</label>
                                                    <!--end::Label-->
                                                    <!--begin::Col-->
                                                    <div class="col-lg-12 d-flex justify-content-center">
                                                        <div class="image-input image-input-outline image-input-placeholder" data-kt-image-input="true">
                                                            <div class="w-150px h-150px" id="divImage"><img id="imagePath" src="/assets/media/images/blog/NoImage.png" class="w-150px h-150px" file-accept="image/*"></div>
                                                            <label class="btn btn-icon btn-circle btn-active-color-primary w-25px h-25px bg-body shadow choseFile" data-fm-target="#imagePath" data-kt-image-input-action="change" data-bs-toggle="tooltip" aria-label="Change avatar" data-bs-original-title="Change avatar" data-kt-initialized="1">
                                                                <i class="ki-duotone ki-pencil fs-7">
                                                                    <span class="path1 ki-uniEDBC"></span>
                                                                    <span class="path2 ki-uniEDBD"></span>
                                                                </i>
                                                            </label>
                                                        </div>
                                                    </div>
                                                    <!--end::Col-->
                                                    <div class="form-text text-center text-danger ms-20">
                                                        Để hình ảnh đẹp nhất nên để kích thước tối đa là 1440px*1440px
                                                        <br>Dung lượng tối đa là 5MB
                                                    </div>

                                                </div>

                                                <div class="col-sm-6" style="display:none;">
                                                    <div class="form-group">
                                                        <div class="input-group input-group-solid mb-5">
                                                            <span class="input-group-text" id="basic-addon-active">Kích hoạt</span>
                                                            <input readonly type="number" autocomplete="off" class="form-control input-active" id="active" placeholder="active" aria-label="active" aria-describedby="basic-addon-active" />
                                                        </div>
                                                    </div>
                                                </div>

                                                <!--begin::Input group-->
                                                <div class="fv-row mb-7 fv-plugins-icon-container">
                                                    <!--begin::Label-->
                                                    <label class="required fs-6 fw-semibold mb-2" for="name">Tên</label>
                                                    <!--end::Label-->
                                                    <!--begin::Input-->
                                                    <input type="text" class="form-control form-control-solid" placeholder="" id="name" name="name" maxlength="255" onchange="convertToSlug(value)">
                                                    <!--end::Input-->
                                                    <div class="fv-plugins-message-container invalid-feedback"></div>
                                                </div>
                                                <!--end::Input group-->
                                                <!--begin::Input group-->
                                                <!--end::Input group-->
                                                <!--begin::Input group-->
                                                <div class="row mb-10 fv-plugins-icon-container">
                                                    <label class="fs-6 fw-semibold mb-2" for="capDanhMuc">Topic Cha</label>
                                                    <select class="form-select " id="capDanhMuc" name="capDanhMuc" data-placeholder="Topic Cha" data-control="select2">
                                                    </select>
                                                </div>
                                                <!--end::Input group-->
                                                <!--begin::Input group-->
                                                <div class="row mb-10 fv-plugins-icon-container">
                                                    <div class="col-md-6">
                                                        <label class="required fs-6 fw-semibold mb-2" for="color">Màu</label>
                                                        <div class="d-flex" style="position:relative;">

                                                            <input type="text" class="form-control form-control-solid disable" id="code" style="height:3rem; padding:0.775rem 3rem 1rem 0.775rem" readonly>
                                                            <div for="code" id="colorShow" style="position: absolute;right: 0;padding: 0.775rem 1rem;width: 3rem;height: 3rem;">
                                                                <div class="input-color-container">
                                                                    <input id="color" value="#ed6868" class="input-color" type="color" onchange="selectColor(value)">
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>

                                                    <div class="col-md-6">
                                                        <label class="fs-6 fw-semibold mb-2" for="slug">Slug</label>
                                                        <input type="text" class="form-control" placeholder="" id="slug" readonly disabled>
                                                    </div>
                                                </div>

                                                <div class="fv-row fv-plugins-icon-container">
                                                    <!--begin::Label-->
                                                    <label class=" fs-6 fw-semibold mb-2" for="createdTime">Ngày tạo</label>
                                                    <!--end::Label-->
                                                    <!--begin::Input-->
                                                    <input type="text" class="form-control form-control-solid" readonly placeholder="" id="createdTime" name="createdTime" disabled>
                                                    <!--end::Input-->
                                                    <div class="fv-plugins-message-container invalid-feedback"></div>
                                                </div>
                                                <!--end::Input group-->
                                            </div>
                                            <!--end::Scroll-->
                                        </div>
                                        <!--end::Modal body-->
                                        <!--begin::Modal footer-->
                                        <div class="modal-footer flex-center mb-6">
                                            <button id="btnUpdateItem" class="btn btn-primary">
                                                <span class="indicator-label">
                                                    Lưu
                                                </span>
                                                <span class="indicator-progress">
                                                    Please wait... <span class="spinner-border spinner-border-sm align-middle ms-2"></span>
                                                </span>
                                            </button>
                                        </div>
                                        <!--end::Modal footer-->
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<!--end::Content-->
<script type="text/javascript">
    var showItem = [];
    var dataSource = [];
    var table, updatingObj;
    var tableUpdating = 0, updatingItemId = 0;
    var swal2deleteClass = {
        confirmButton: 'swal_btn_danger',
    }
    $(document).ready(function () {
        loadData();
        loadDataSelectParent();
        //loadOrderSort(10);
        editItem(0)
    });

    $("#btnUpdateItem").click(function () {
        validateData(updatingItemId);
    })

    function selectColor(value) {
        $("#colorShow::before").css("background-color", value);
        return $('#code').val(value);
    }

    function getItemById(id) {
        const result = dataSource.find(item => parseInt(item.id) === id);
        return result;
    }

    function validateData(id) {
        var titleName = (id > 0 ? "Cập nhật loại danh mục khoá học" : "Thêm mới loại danh mục khoá học");
        var listErr = [];
        if ($("#name").val().length == 0) {
            listErr.push("Tên không được để trống");
        }
        if ($("#imagePath").val() == '@DefaultImage.DEFAUL_IMAGE_PATH') {
            listErr.push("Ảnh không được để trống");
        }
        if (listErr.length > 0) {
            var contentError = "<ul>";
            listErr.forEach(function (item, index) {
                contentError += "<li class='text-start mb-2'>" + item + "</li>";
            })
            contentError += "</ul>";
            var swalSubTitle = "<p class='swal__admin__subtitle mt-2'>" + titleName + " không thành công</p>";
            Swal.fire(
                'Danh mục khoá học' + swalSubTitle,
                contentError,
                'warning'
            );
        }
        else {
            updateItem(updatingItemId);
        }
    }

    function loadData() {
        $.ajax({
            url: "@Url.Action("List","PostCategory")",
            type: "GET",
            contentType: "application/json",
            success: function (responseData) {
                var data = responseData.data;
                dataSource = data;
                data.forEach(function (item, index) {
                    if (item.parentId == 0) {
                        var span = `<span class="svg-icon svg-icon-muted svg-icon-1">${item.icon != null ? item.icon : ""}</span><span class="name-item edit-item text-dark"  data-id="${item.id}" >${item.name}</span>`;
                        var actionButtons = "";

                        actionButtons = `<button type="button" class="btn btn-admin-delete" data-id="${item.id}">
                                                                                                                                         <i class="fa-regular fa-trash-can text-c-red"></i>
                                                                                                                                </button>
                                                                                                                                `;

                        var newRow = `<li class='branch' id='${item.id}'>
                                                                                                                  <div>${span}${actionButtons}</div>
                                                                                                                  </li>`;
                        $(newRow).appendTo($("#tree"));
                        recursion(item);
                    };
                });
                renderTreeView();

                $(".edit-item").click(function () {
                    editItem(parseInt($(this).attr('data-id')))
                })
                $(".btn-admin-delete").click(function () {
                    deleteItem(parseInt($(this).attr('data-id')))
                })
            },
            error: function (e) {
                Swal.fire(
                    'Danh mục khoá học',
                    'Lấy danh mục khoá học không thành công!',
                    'error'
                );
            }
        });
    }

    function renderTreeView() {
        var tree = document.getElementById("tree");
        if (tree) {
            tree.querySelectorAll("ul").forEach(function (ul, key, parent) {
                var li = ul.parentNode;
                li.classList.add("branch");
                var i = document.createElement("i");
                i.classList.add("indicator", "fas");
                i.classList.add("fa-chevron-right");
                li.insertBefore(i, li.firstChild);
                ul.classList.add("collapse");

                i.addEventListener("click", function (event) {
                    if (li === event.target || li === event.target.parentNode) {
                        if (ul.classList.contains('collapse')) {
                            ul.classList.add("expand");
                            ul.classList.remove("collapse");
                            i.classList.remove("fa-chevron-right");
                            i.classList.add("fa-chevron-down");
                        } else {
                            ul.classList.add("collapse");
                            ul.classList.remove("expand");
                            i.classList.remove("fa-chevron-down");
                            i.classList.add("fa-chevron-right");
                        }
                    }
                }, false);
            });
        }
    }

    function recursion(parent_item) {
        var children = dataSource.filter(x => x.parentId == parent_item.id);
        if (children.length < 1) {
            return 0;
        }
        else {
            // gen ra thẻ ul
            var ul = `<ul id='parent_${parent_item.id}'></ul>`;
            $('li#' + parent_item.id + '').append(ul);
            // thực hiện đệ quy với children
            children.forEach(function (item, index) {
                var span = `<span class="name-item text-dark" onclick="editItem(${item.id})"">${item.name}</span>`;
                var actionButtons = "";

                actionButtons = `<button type="button" class="btn btn-admin-delete" data-id="${item.id}">
                                                                                                                                                 <i class="fa-regular fa-trash-can text-c-red"></i>
                                                                                                                                        </button>
                                                                                                                                        `;

                var newRow = `<li class='branch' id='${item.id}'>
                                                                                                          <div>${span}${actionButtons}</div>
                                                                                                          </li>`;
                $('#parent_' + item.parentId + '').append(newRow);
                recursion(item);
            });
        };
    }

    function editItem(id) {
        updatingItemId = id;
        $("#modal_courseCategory .modal-title").text(id == 0 ? "Thêm mới danh mục khoá học " : "Cập nhật danh mục khoá học");
        let obj = getItemById(id);
        $("#Id").val(id > 0 ? obj.id : 0);
        $('#imagePath').attr("file-path", id > 0 ? obj.photo : "");
        $('#imagePath').attr("src", id > 0 && obj.photo != undefined && obj.photo.trim() != "" ? obj.photo : "/assets/media/images/blog/NoImage.png").trigger("change");
        $("#active").val(id > 0 ? obj.active : 1);
        $("#name").val(id > 0 ? obj.name : "");
        $("#color").val(id > 0 ? obj.color : "").trigger('change');
        $("#capDanhMuc").val(id > 0 ? obj.parentId : 0).trigger('change');
        $('#slug').val(id > 0 ? obj.slug : "")
        $("#createdTime").val(id > 0 ? moment(obj.createdTime).format("DD/MM/YYYY HH:mm:ss") : moment().format("DD/MM/YYYY HH:mm:ss"));
    }

    function updateItem(id) {
        var titleName = (updatingItemId > 0 ? "Cập nhật danh mục khoá học" : "Thêm mới danh mục khoá học");
        var textName = (updatingItemId > 0 ? "cập nhật" : "thêm mới");
        let filePath = $("#imagePath").attr("file-path") || "";
        filePath = filePath.replace("@UploadFileConst.DEFAULT_THUMB");
        let obj = getItemById(id);
        let objName = id > 0 ? obj.name : $("#name").val();
        var updatingObj = {
            "id": updatingItemId,
            "active": $("#active").val(),
            "name": $("#name").val(),
            "color": $("#color").val(),
            "slug": $("#slug").val(),
            "photo": filePath,
            "parentId": $("#capDanhMuc").val(),
            "createdTime": moment($("#createdTime").val(), "DD/MM/YYYY HH:mm:ss").format("YYYY-MM-DD HH:mm:ss"),
        };

        if (updatingObj.parentId == null) {
            updatingObj.parentId = 0
        }
        if (updatingObj.parentId > 0) {
            if (id == updatingObj.parentId) {
                Swal.fire({
                    title: titleName,
                    html: titleName + ' không thành công, không thể chọn menu ' + obj.name + " làm cha của chính nó",
                    icon: 'error'
                })
            }
            else {
                Swal.fire({
                    title: titleName,
                    html: "Bạn có chắc chắn muốn " + textName + " danh mục khoá học <strong>" + objName + "</strong> không?",
                    icon: 'info',
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#443',
                    cancelButtonText: 'Hủy',
                    confirmButtonText: 'Lưu',
                    focusConfirm: true,
                }).then((result) => {
                    if (result.value) {
                        //CALL AJAX TO UPDATE
                        if (id > 0) {
                            $.ajax({
                                url: systemURL + "PostCategory/api/Update",
                                type: "POST",
                                contentType: "application/json",
                                data: JSON.stringify(updatingObj),
                                success: function (responseData) {
                                    if (responseData.status == 200 && responseData.message === "SUCCESS") {
                                        Swal.fire({
                                            title: titleName,
                                            html: 'Danh mục khoá học <strong>' + objName + '</strong> được cập nhật thành công!',
                                            icon: 'success'
                                        }).then(function () {
                                            $('#tree').html('');
                                            loadData();
                                            $("#capDanhMuc").html("");
                                            loadDataSelectParent();
                                            editItem(0)
                                        });
                                    }
                                    else if (responseData.status == 403 && responseData.message === "BadRequest") {
                                        var contentError = "<ul>";
                                        responseData.errors.forEach(function (item, index) {
                                            contentError += "<li class='text-start'>" + item + "</li>";
                                        })
                                        contentError += "</ul>";
                                        var swalSubTitle = "<p class='swal__admin__subtitle'>" + titleName + " không thành công</p>";
                                        Swal.fire(
                                            'Danh mục khoá học' + swalSubTitle,
                                            contentError,
                                            'warning'
                                        );
                                    }
                                },
                                error: function (e) {
                                    Swal.fire({
                                        title: titleName,
                                        html: titleName + ' danh mục khoá học không thành công, vui lòng thử lại sau !',
                                        icon: 'error'
                                    });
                                }
                            });
                        };

                        //CALL AJAX TO CREATE
                        if (id == 0) {
                            $.ajax({
                                url: systemURL + "PostCategory/api/Add",
                                type: "POST",
                                contentType: "application/json",
                                data: JSON.stringify(updatingObj),
                                success: function (responseData) {
                                    if (responseData.status == 201 && responseData.message === "CREATED") {
                                        Swal.fire({
                                            title: titleName,
                                            html: 'danh mục khoá học <strong>' + objName + '</strong> được tạo mới thành công!',
                                            icon: 'success'
                                        }).then(function () {
                                            $('#tree').html('');
                                            loadData();
                                            $("#capDanhMuc").html("");
                                            loadDataSelectParent();
                                            editItem(0)
                                        });
                                    }
                                    else if (responseData.status == 403 && responseData.message === "BadRequest") {
                                        var contentError = "<ul>";
                                        responseData.errors.forEach(function (item, index) {
                                            contentError += "<li class='text-start'>" + item + "</li>";
                                        })
                                        contentError += "</ul>";
                                        var swalSubTitle = "<p class='swal__admin__subtitle'>" + titleName + " không thành công</p>";
                                        Swal.fire(
                                            'Danh mục khoá học' + swalSubTitle,
                                            contentError,
                                            'warning'
                                        );
                                    }
                                },
                                error: function (e) {
                                    Swal.fire({
                                        title: titleName,
                                        html: titleName + ' danh mục khoá học không thành công, vui lòng thử lại sau !',
                                        icon: 'error'
                                    });
                                }
                            });
                        }
                    }
                })
            }
        }
        else {
            Swal.fire({
                title: titleName,
                html: "Bạn có chắc chắn muốn " + textName + " danh mục khoá học <strong>" + objName + "</strong> không?",
                icon: 'info',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#443',
                cancelButtonText: 'Hủy',
                confirmButtonText: 'Lưu',
                focusConfirm: true,
            }).then((result) => {
                if (result.value) {
                    //CALL AJAX TO UPDATE
                    if (id > 0) {
                        $.ajax({
                            url: systemURL + "PostCategory/api/Update",
                            type: "POST",
                            contentType: "application/json",
                            data: JSON.stringify(updatingObj),
                            success: function (responseData) {
                                if (responseData.status == 200 && responseData.message === "SUCCESS") {
                                    Swal.fire({
                                        title: titleName,
                                        html: 'Danh mục khoá học <strong>' + objName + '</strong> được cập nhật thành công!',
                                        icon: 'success'
                                    }).then(function () {
                                        $('#tree').html('');
                                        loadData();
                                        $("#capDanhMuc").html("");
                                        loadDataSelectParent();
                                        editItem(0)
                                    });
                                }
                                else if (responseData.status == 403 && responseData.message === "BadRequest") {
                                    var contentError = "<ul>";
                                    responseData.errors.forEach(function (item, index) {
                                        contentError += "<li class='text-start'>" + item + "</li>";
                                    })
                                    contentError += "</ul>";
                                    var swalSubTitle = "<p class='swal__admin__subtitle'>" + titleName + " không thành công</p>";
                                    Swal.fire(
                                        'Danh mục khoá học' + swalSubTitle,
                                        contentError,
                                        'warning'
                                    );
                                }
                            },
                            error: function (e) {
                                Swal.fire({
                                    title: titleName,
                                    html: titleName + ' danh mục khoá học không thành công, vui lòng thử lại sau !',
                                    icon: 'error'
                                });
                            }
                        });
                    };

                    //CALL AJAX TO CREATE
                    if (id == 0) {
                        $.ajax({
                            url: systemURL + "PostCategory/api/Add",
                            type: "POST",
                            contentType: "application/json",
                            data: JSON.stringify(updatingObj),
                            success: function (responseData) {
                                if (responseData.status == 201 && responseData.message === "CREATED") {
                                    Swal.fire({
                                        title: titleName,
                                        html: 'danh mục khoá học <strong>' + objName + '</strong> được tạo mới thành công!',
                                        icon: 'success'
                                    }).then(function () {
                                        $('#tree').html('');
                                        loadData();
                                        $("#capDanhMuc").html("");
                                        loadDataSelectParent();
                                        editItem(0)
                                    });
                                }
                                else if (responseData.status == 403 && responseData.message === "BadRequest") {
                                    var contentError = "<ul>";
                                    responseData.errors.forEach(function (item, index) {
                                        contentError += "<li class='text-start'>" + item + "</li>";
                                    })
                                    contentError += "</ul>";
                                    var swalSubTitle = "<p class='swal__admin__subtitle'>" + titleName + " không thành công</p>";
                                    Swal.fire(
                                        'Danh mục khoá học' + swalSubTitle,
                                        contentError,
                                        'warning'
                                    );
                                }
                            },
                            error: function (e) {
                                Swal.fire({
                                    title: titleName,
                                    html: titleName + ' danh mục khoá học không thành công, vui lòng thử lại sau !',
                                    icon: 'error'
                                });
                            }
                        });
                    }
                }
            })
        }
    }
    function deleteItem(id) {
        let obj = getItemById(id);
        Swal.fire({
            title: 'Xóa danh mục khoá học?',
            html: "Bạn có chắc chắn muốn xóa danh mục khoá học <br> <strong>" + obj.name + "</strong> không?",
            icon: 'warning',
            showCancelButton: true,
            cancelButtonColor: '#443',
            cancelButtonText: 'Hủy',
            confirmButtonText: 'Xóa',
            customClass: swal2deleteClass
        }).then((result) => {
            if (result.value) {
                //CALL AJAX TO DELETE
                $.ajax({
                    url: "@Url.Action("Delete","PostCategory")",
                    type: "DELETE",
                    data: { "id": id },
                    success: function (responseData) {
                        if (responseData.status == 200 && responseData.message === "SUCCESS") {
                            Swal.fire(
                                'Xóa danh mục khoá học!',
                                'danh mục khoá học <strong> ' + obj.name + '</strong> đã được xóa thành công.',
                                'success'
                            ).then(function () {
                                $('#tree').html('');
                                loadData();
                                $("#capDanhMuc").html("");
                                loadDataSelectParent();
                                editItem(0)
                            });
                        }
                    },
                    error: function (e) {
                        Swal.fire(
                            'Xóa danh mục khoá học',
                            'Xóa danh mục khoá học không thành công, <br> vui lòng thử lại sau!',
                            'error'
                        );
                    }
                });

            }
        })
    }
    // render list
    var dataSelectParent = [];
    function loadDataSelectParent() {
        return $.ajax({
            url: systemURL + "PostCategory/api/list",
            type: 'GET',
            async: 'true',
            contentType: 'application/json',
            success: function (responseData) {
                var data = responseData.data;
                let tree = list_to_tree(data)
                let dataSelectParent = []
                makeTreeOption(tree, 0, dataSelectParent);
                dataSelectParent.forEach(function (item, index) {
                    delete item.children
                })
                dataSelectParent.unshift({ id: 0, name: 'Gốc' })
                dataSelectParent.forEach(function (item, index) {
                    var data = {
                        id: item.id,
                        text: item.name
                    };
                    var newOption = new Option(data.text, data.id, false, false);
                    $('#capDanhMuc').append(newOption).trigger('change');
                });

                $('#capDanhMuc').select2({

                    dropdownParent: $("#modal_courseCategory"),
                    data: dataSelectParent,
                    templateResult: formatResult,
                    allowClear: true,
                });

            },
            error: function (e) {
                if (e.status === 401) {
                    Swal.fire(
                        'Quản lý tin tức',
                        'Phiên đăng nhập của bạn đã hết hạn, vui lòng đăng nhập để sử dụng tính năng này.',
                        'error'
                    ).then(function () {
                        window.location.href = "@Url.Action("LoginPage","Home")";
                    });
                }
                else if (e.status == 403) {
                    Swal.fire(
                        'Quản lý tin tức',
                        'Bạn không có quyền sử dụng tính năng này.',
                        'error'
                    );
                }
                else {
                    Swal.fire(
                        'Quản lý tin tức',
                        'Lấy danh sách danh mục cha không thành công, hãy thử lại sau.',
                        'error'
                    );
                }
            }
        });
    }

    function loadOrderSort(count) {
        for (var i = 1; i <= count; i++) {
            var data = {
                id: i,
                text: i
            };
            var newOption = new Option(data.text, data.id, false, false);
            $('#order').append(newOption).trigger('change');
        }
        $("#order").select2();
    }
    function makeTreeOption(tree, level, list) {
        if (tree.length == 1) {
            tree[0].level = level
            list.push(tree[0])
        }
        else {
            for (let i = 0; i < tree.length; i++) {
                tree[i].level = level
                list.push(tree[i])
                makeTreeOption(tree[i].children, level + 1, list)
            }

        }

    };
    function list_to_tree(list) {
        var map = {}, node, roots = [], i;

        for (i = 0; i < list.length; i += 1) {
            map[list[i].id] = i; // initialize the map
            list[i].children = []; // initialize the children
        }

        for (i = 0; i < list.length; i += 1) {
            node = list[i];
            if (node.parentId !== 0) {
                // if you have dangling branches check that map[node.parentId] exists
                list[map[node.parentId]].children.push(node);
            } else {
                roots.push(node);
            }
        }
        return roots;
    }
    function formatResult(node) {
        var $result = $(`<span style="padding-left: ${node.level * 17}px">${node.name}</span>`);
        return $result;
    };

    function convertToSlug(text) {
        text = text.toLowerCase().trim();

        // Define a map of special characters and their replacements
        const specialChars = {
            'à': 'a',
            'á': 'a',
            'ả': 'a',
            'ã': 'a',
            'ạ': 'a',
            'ă': 'a',
            'ắ': 'a',
            'ằ': 'a',
            'ẳ': 'a',
            'ẵ': 'a',
            'ặ': 'a',
            'â': 'a',
            'ấ': 'a',
            'ầ': 'a',
            'ẩ': 'a',
            'ẫ': 'a',
            'ậ': 'a',
            'đ': 'd',
            'è': 'e',
            'é': 'e',
            'ẻ': 'e',
            'ẽ': 'e',
            'ẹ': 'e',
            'ê': 'e',
            'ế': 'e',
            'ề': 'e',
            'ể': 'e',
            'ễ': 'e',
            'ệ': 'e',
            'ì': 'i',
            'í': 'i',
            'ỉ': 'i',
            'ĩ': 'i',
            'ị': 'i',
            'ò': 'o',
            'ó': 'o',
            'ỏ': 'o',
            'õ': 'o',
            'ọ': 'o',
            'ô': 'o',
            'ố': 'o',
            'ồ': 'o',
            'ổ': 'o',
            'ỗ': 'o',
            'ộ': 'o',
            'ơ': 'o',
            'ớ': 'o',
            'ờ': 'o',
            'ở': 'o',
            'ỡ': 'o',
            'ợ': 'o',
            'ù': 'u',
            'ú': 'u',
            'ủ': 'u',
            'ũ': 'u',
            'ụ': 'u',
            'ư': 'u',
            'ứ': 'u',
            'ừ': 'u',
            'ử': 'u',
            'ữ': 'u',
            'ự': 'u',
            'ỳ': 'y',
            'ý': 'y',
            'ỷ': 'y',
            'ỹ': 'y',
            'ỵ': 'y',
            'ñ': 'n',
            'ç': 'c',
            'ß': 'ss',
            ' ': '-',
            '_': '-',
            '+': '-',
        };

        // Replace special characters with their counterparts
        text = text.replace(/[^a-z0-9-]/g, (char) => specialChars[char] || '');

        // Replace multiple consecutive hyphens with a single hyphen
        text = text.replace(/-+/g, '-');

        return $('#slug').val(text)
    }
    $("#code,#colorShow").on('click', function () {
        $("#color").click();
    })
</script>

@section Scripts{
    <partial name="_FileExplorer" />
}
