@{
    Layout = "_Admin_Layout";
}
<style>
    .table-content {
        padding: 15px;
        background: var(--bs-app-header-base-bg-color);
        border-radius: 8px;
    }

    table thead tr th {
        white-space: nowrap;
    }

    #tableData thead tr th:nth-child(1),
    #tableData tbody tr td:nth-child(1),
    #tableData tfoot tr th:nth-child(1) {
        text-align: center;
        width: 50px !important;
        max-width: 50px !important;
    }

    #tableData thead tr th:nth-child(3),
    #tableData tbody tr td:nth-child(3),
    #tableData tfoot tr th:nth-child(3) {
        width: 150px !important;
        max-width: 150px !important;
    }

    #tableData thead tr th:nth-child(4),
    #tableData tbody tr td:nth-child(4),
    #tableData tfoot tr th:nth-child(4) {
        width: 250px !important;
        max-width: 250px !important;
        text-align: center;
    }

    #tableData thead tr th:nth-child(5),
    #tableData tbody tr td:nth-child(5),
    #tableData tfoot tr th:nth-child(5) {
        text-align: center;
        width: 80px !important;
        max-width: 80px !important;
    }

</style>
<div id="kt_app_content" class="app-content  flex-column-fluid ">
    <!--begin::Content container-->
    <div id="kt_app_content_container" class="app-container  container-fluid ">
        <!--begin::Row-->
        <div class="table-content">
            <!--begin::Col-->
            <!--begin::Wrapper-->
            <div class="d-flex flex-stack mb-5">
                <!--begin::Search-->
                <div class="d-flex align-items-center position-relative my-1">
                    <i class="ki-duotone ki-magnifier fs-1 position-absolute ms-6"><span class="path1"></span><span class="path2"></span></i>
                    <input type="search" data-kt-docs-table-filter="search" class="form-control form-control-solid w-250px ps-15" id="search-input" placeholder="Tìm kiếm" />
                </div>
                <!--end::Search-->
                <!--begin::Toolbar-->
                <div class="d-flex justify-content-end" data-kt-docs-table-toolbar="base">
                    <!--begin::Filter-->
                    @*<button type="button" class="btn btn-light-primary me-3" data-bs-toggle="tooltip" title="Coming Soon">
                    <i class="ki-duotone ki-filter fs-2"><span class="path1"></span><span class="path2"></span></i>
                    Bộ lọc
                    </button>*@
                    <!--end::Filter-->
                    <!--begin::Add customer-->
                    @*<button type="button" class="btn btn-primary" data-bs-toggle="tooltip" title="Tạo mới" onclick="editItem(0)">
                    <i class="ki-duotone ki-plus fs-2"></i>
                    Tạo mới
                    </button>*@
                    <!--end::Add customer-->
                </div>
                <!--end::Toolbar-->
                <!--begin::Group actions-->
                <div class="d-flex justify-content-end align-items-center d-none" data-kt-docs-table-toolbar="selected">
                    <div class="fw-bold me-5">
                        <span class="me-2" data-kt-docs-table-select="selected_count"></span> Selected
                    </div>

                    <button type="button" class="btn btn-danger" data-bs-toggle="tooltip" title="Coming Soon">
                        Selection Action
                    </button>
                </div>
                <!--end::Group actions-->
            </div>
            <!--end::Wrapper-->
            <!--begin::Datatable-->
            <table id="tableData" class="table table-hover table-rounded table-row-bordered gy-3 gs-3">
                <thead>
                    <tr class="fw-bold fs-6 text-gray-800">
                        <th>STT</th>
                        @*<th>Mã</th>*@
                        <th>Tiêu đề</th>
                        @*<th>Tài khoản</th>*@
                        <th>Trạng thái thông báo</th>
                        @*<th>Người gửi</th>*@
                        <th>Ngày tạo</th>
                        <th>Thao tác</th>
                    </tr>
                </thead>
                <thead>
                    <tr class="fs-6">
                        <th></th>
                        <th><input type="text" class="form-control tableheaderFillter" /></th>
                        @*<th><input type="text" class="form-control tableheaderFillter" /></th>*@
                        @*<th>
                        <select class="form-select tableheaderFillter" id="filterAccountId" data-control="select2" data-placeholder="" data-allow-clear="true" multiple>
                        </select>
                        </th>*@

                        <th>
                            <select class="form-select tableheaderFillter" id="filterNotificationStatusId" data-control="select2" data-placeholder="" data-allow-clear="true" multiple>
                            </select>
                        </th>

                        @*<th>
                        <select class="form-select tableheaderFillter" id="filterSenderId" data-control="select2" data-placeholder="" data-allow-clear="true" multiple>
                        </select>
                        </th>*@
                        <th>
                            <div class="input-group" id="filterCreatedTime" data-td-target-input="nearest" data-td-target-toggle="nearest">
                                <input id="filterCreatedTime_input" readonly type="text" class="form-control tableheaderFillter" data-td-target="#filterCreatedTime" />
                                <span class="input-group-text" title="Chọn" id="open-flatpickr" data-td-target="#filterCreatedTime">
                                    <i class="ki-duotone ki-calendar fs-2"><span class="path1"></span><span class="path2"></span></i>
                                </span>
                                <span class="input-group-text" id="clear-flatpickr" title="Xóa" data-clear="true" data-target="filterCreatedTime">
                                    <i class="ki-duotone ki-calendar-remove fs-2"><i class="path1"></i><i class="path2"></i><i class="path3"></i><i class="path4"></i><i class="path5"></i><i class="path6"></i></i>
                                </span>
                            </div>
                        </th>

                        <th class="text-center">
                            <div class="search-control">
                                <button class="btn btn-primary form-control mb-1" title="Tìm kiếm" id="btnTableSearch">
                                    <span class="svg-icon svg-icon svg-icon-1 svg_search_2 m-0">
                                        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                                            <path d="M21.7 18.9L18.6 15.8C17.9 16.9 16.9 17.9 15.8 18.6L18.9 21.7C19.3 22.1 19.9 22.1 20.3 21.7L21.7 20.3C22.1 19.9 22.1 19.3 21.7 18.9Z" fill="currentColor"></path>
                                            <path opacity="0.3" d="M11 20C6 20 2 16 2 11C2 6 6 2 11 2C16 2 20 6 20 11C20 16 16 20 11 20ZM11 4C7.1 4 4 7.1 4 11C4 14.9 7.1 18 11 18C14.9 18 18 14.9 18 11C18 7.1 14.9 4 11 4ZM8 11C8 9.3 9.3 8 11 8C11.6 8 12 7.6 12 7C12 6.4 11.6 6 11 6C8.2 6 6 8.2 6 11C6 11.6 6.4 12 7 12C7.6 12 8 11.6 8 11Z" fill="currentColor"></path>
                                        </svg>
                                    </span>
                                </button>
                                <button class="btn btn-secondary form-control" title="Reset" id="btnTableResetSearch">
                                    <span class="svg-icon svg-icon svg-icon-1 svg_cancel m-0">
                                        <svg width="32" height="32" viewBox="0 0 32 32" fill="none" xmlns="http://www.w3.org/2000/svg">
                                            <rect x="9.39844" y="20.7144" width="16" height="2.66667" rx="1.33333" transform="rotate(-45 9.39844 20.7144)" fill="currentColor"></rect>
                                            <rect x="11.2852" y="9.40039" width="16" height="2.66667" rx="1.33333" transform="rotate(45 11.2852 9.40039)" fill="currentColor"></rect>
                                        </svg>
                                    </span>
                                </button>
                            </div>
                        </th>
                    </tr>
                </thead>
                <tbody>
                </tbody>
                <tfoot>
                    <tr class="border-top fw-bold fs-6 text-gray-800">
                    </tr>
                </tfoot>
            </table>
            <!--end::Datatable-->
            <div class="modal fade" id="modal-id" data-bs-backdrop="static" data-bs-keyboard="false">
                <div class="modal-dialog modal-ml modal-dialog-centered">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h3 class="modal-title" id="defaultModalTitle">Modal title</h3>

                            <!--begin::Close-->
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                            <!--end::Close-->
                        </div>
                        <div class="modal-body">
                            <form action="#">
                                <div class="row">
                                    <div class="col-sm-6" style="display:none;">
                                        <div class="form-group">
                                            <div class="input-group input-group-solid mb-5">
                                                <span class="input-group-text" id="basic-addon-active">Kích hoạt</span>
                                                <input readonly type="number" autocomplete="off" class="form-control input-active" id="notification-active" placeholder="active" aria-label="active" aria-describedby="basic-addon-active" />
                                            </div>
                                        </div>
                                    </div>

                                    @*<div class="col-md-4 mb-7" style="display:none;">
                                    <div class="form-group">
                                    <div class="fv-plugins-icon-container">
                                    <label class="required fw-semibold fs-6 mb-2">Tài khoản</label>
                                    <select class="form-select  dataSelect" id="notification-accountId" data-placeholder="" readonly disabled>
                                    </select>
                                    </div>
                                    </div>
                                    <script>
                                    var accountData = [];
                                    async function loadDataSelectAccount() {
                                    await $.ajax({
                                    url: systemURL + 'account/api/list',
                                    type: 'GET',
                                    async: 'true',
                                    contentType: 'application/json',
                                    beforeSend: function (xhr) {
                                    if (localStorage.token) {
                                    xhr.setRequestHeader('Authorization', 'Bearer ' + localStorage.token);
                                    }
                                    },
                                    success: function (responseData) {
                                    //console.log(new Date().getSeconds() + ':' + new Date().getMilliseconds() + ' - loaded account');
                                    // debugger;
                                    var data = responseData.data;
                                    accountData = data;
                                    },
                                    error: function (e) {
                                    //console.log(e.message);
                                    }
                                    });
                                    }
                                    loadDataSelectAccount();
                                    $(document).ready(function () {
                                    $.when(loadDataSelectAccount()).done(function () {
                                    $("#filterAccountId").select2();
                                    accountData.forEach(function (item) {
                                    $('#notification-accountId').append(new Option(item.name, item.id, false, false)).trigger('change');
                                    $('#filterAccountId').append(new Option(item.name, item.id, false, false));
                                    })
                                    });
                                    });
                                    </script>
                                    </div>*@

                                    <div class="col-md-12 mb-7">
                                        <div class="form-group">
                                            <div class="fv-plugins-icon-container">
                                                <label class="fw-semibold fs-6 mb-2">Trạng thái thông báo</label>
                                                <select class="form-select  dataSelect" id="notification-notificationStatusId" data-placeholder="" readonly disabled>
                                                </select>
                                            </div>
                                        </div>
                                        <script>
                                            var notificationStatusData = [];
                                            async function loadDataSelectNotificationStatus() {
                                                await $.ajax({
                                                    url: systemURL + 'notificationStatus/api/list',
                                                    type: 'GET',
                                                    async: 'true',
                                                    contentType: 'application/json',
                                                    success: function (responseData) {
                                                        //console.log(new Date().getSeconds() + ':' + new Date().getMilliseconds() + ' - loaded account');
                                                        // debugger;
                                                        var data = responseData.data;
                                                        notificationStatusData = data;
                                                    },
                                                    error: function (e) {
                                                        //console.log(e.message);
                                                    }
                                                });
                                            }
                                            loadDataSelectNotificationStatus();
                                            $(document).ready(function () {
                                                $.when(loadDataSelectNotificationStatus()).done(function () {
                                                    $("#filterNotificationStatusId").select2();
                                                    notificationStatusData.forEach(function (item) {
                                                        $('#notification-notificationStatusId').append(new Option(item.name, item.id, false, false)).trigger('change');
                                                        $('#filterNotificationStatusId').append(new Option(item.name, item.id, false, false));
                                                    })
                                                });
                                            });
                                        </script>
                                    </div>
                                    <div class="col-md-12 mb-7 fv-plugins-icon-container">
                                        <label class="fw-semibold fs-6 mb-2">Ngày tạo</label>
                                        <input type="text" id="notification-createdTime" class="form-control  mb-3 mb-lg-0" placeholder="" value="" readonly disabled>
                                    </div>

                                    <div class="col-md-12 mb-7 fv-plugins-icon-container">
                                        <label class="fw-semibold fs-6 mb-2" id="basic-addon-firstName">Tiêu đề</label>
                                        @*<input type="text" class="form-control mb-3 mb-lg-0 bs_max_length" id="notification-name" aria-label="" />*@
                                        <textarea class="form-control" id="notification-name" data-kt-autosize="true" readonly disabled></textarea>
                                    </div>

                                    @*<div class="col-md-12 mb-7" style="display:none;">
                                    <div class="form-group">
                                    <div class="fv-plugins-icon-container">
                                    <label class="required fw-semibold fs-6 mb-2">Người gửi</label>
                                    <select class="form-select  dataSelect" id="notification-senderId" data-placeholder="">
                                    </select>
                                    </div>
                                    </div>
                                    <script>
                                    var accountData = [];
                                    async function loadDataSelectAccountSender() {
                                    await $.ajax({
                                    url: systemURL + 'account/api/list',
                                    type: 'GET',
                                    async: 'true',
                                    contentType: 'application/json',
                                    beforeSend: function (xhr) {
                                    if (localStorage.token) {
                                    xhr.setRequestHeader('Authorization', 'Bearer ' + localStorage.token);
                                    }
                                    },
                                    success: function (responseData) {
                                    //console.log(new Date().getSeconds() + ':' + new Date().getMilliseconds() + ' - loaded account');
                                    // debugger;
                                    var data = responseData.data;
                                    accountData = data;
                                    },
                                    error: function (e) {
                                    //console.log(e.message);
                                    }
                                    });
                                    }
                                    loadDataSelectAccountSender();
                                    $(document).ready(function () {
                                    $.when(loadDataSelectAccount()).done(function () {
                                    $("#filterSenderId").select2();
                                    accountData.forEach(function (item) {
                                    $('#notification-senderId').append(new Option(item.name, item.id, false, false)).trigger('change');
                                    $('#filterSenderId').append(new Option(item.name, item.id, false, false));
                                    })
                                    });
                                    });
                                    </script>
                                    </div>*@



                                    @*<div class="col-md-4 mb-7 fv-plugins-icon-container">
                                    <label class="required fw-semibold fs-6 mb-2">
                                    Mô tả
                                    </label>
                                    <textarea class="form-control mb-3 mb-lg-0 bs_max_length" id="notification-description" data-kt-autosize="true"></textarea>
                                    </div>*@

                                    <div class="col-sm-6" style="display:none;">
                                        <div class="form-group">
                                            <div class="input-group input-group-solid mb-5">
                                                <span class="input-group-text" id="basic-addon-id">Mã</span>
                                                <input readonly type="number" autocomplete="off" class="form-control input-id" id="notification-id" placeholder="id" aria-label="id" aria-describedby="basic-addon-id" />
                                            </div>
                                        </div>
                                    </div>

                                </div>

                            </form>
                        </div>
                        <div class="modal-footer sticky-action justify-content-center">
                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Đóng</button>
                            <button type="button" class="btn btn-primary" id="btnUpdateItem" style="display:none;">
                                @*<span class="indicator-label">
                                Lưu
                                </span>*@
                                <span class="indicator-progress">
                                    Đang tải... <span class="spinner-border spinner-border-sm align-middle ms-2"></span>
                                </span>
                            </button>
                        </div>
                    </div>
                </div>
            </div>
            <!--end::Col-->
        </div>
    </div>
    <!--end::Content container-->
</div>
<!--begin:Base load data-->
<script>
    var showItem = ['id', 'notificationStatusId', 'name', 'senderId', 'createdTime'];
    var dataSource = [];
    var updatingItemId = 0;
    var editObj;
    var tableUpdating = 0;
    var table;
    const submitButton = document.getElementById('btnUpdateItem');
    submitButton.addEventListener('click', function (e) {
        e.preventDefault();
        submitButton.setAttribute('data-kt-indicator', 'on');
        // Disable button to avoid multiple click
        submitButton.disabled = true;
        // Simulate form submission. For more info check the plugin's official documentation: https://sweetalert2.github.io/
        updateItem(updatingItemId);
    });
    $("#search-input").on('keyup', function (e) {
        let key = e.which;
        if (key == 13) {
            table.search($(this).val()).draw();
        }
    });
    $(document).ready(function () {
        // Load data
        loadData();

        // Datetime picker
        document.querySelectorAll(".datepicker").forEach(function (item) {
            new tempusDominus.TempusDominus(item, datePickerOption);
        })
        $(".datepicker").on('dp.change', function (e) {
            // console.log(this.value);
            this.value = moment(this.value).format("YYYY-MM-DD HH:mm:ss");
            // console.log(this.value);
        });
        //Flat pickr format
        $("#filterCreatedTime_input").flatpickr({
            dateFormat: "d/m/Y",
            mode: "range",
        });
        $("#open-flatpickr").click(function () {
            $("#filterCreatedTime_input").click();
        });
        $("#clear-flatpickr").click(function () {
            $("#filterCreatedTime_input").val("");
        });

        $('.dataSelect').select2();


        $("#btnTableSearch").click(function () {
            tableSearch();
        });

        $("#tableData thead:nth-child(2) tr th input").keypress(function (e) {
            let key = e.which;
            if (key == 13) {
                $("#btnTableSearch").click();
            }
        });
        $("#btnTableResetSearch").click(function () {
            $(".tableheaderFillter").val("").trigger("change");
            tableSearch();
        });
    });
    function loadData() {
        initTable();
    }

    function initTable() {
        table = $('#tableData').DataTable({
            processing: true,
            serverSide: true,
            paging: true,
            language: systemConfig.languageDataTable,
            searching: { regex: true },
            order: [3, 'desc'],
            ajax: {
                url: systemURL + "notification/api/ListServerSideByAccountId",
                type: "POST",
                contentType: "application/json",
                beforeSend: function (xhr) {
                    if (localStorage.token) {
                        xhr.setRequestHeader('Authorization', 'Bearer ' + localStorage.token);
                    }
                },
                dataType: "json",
                data: function (d) {
                    d.searchAll = $("#search-input").val();
                    d.accountIds = $("#filterAccountId").val(); d.notificationStatusIds = $("#filterNotificationStatusId").val();
                    return JSON.stringify(d);
                }
            },
            columns: [
                {
                    data: 'id',
                    render: function (data, type, row, meta) {
                        var info = table.page.info();
                        var stt = meta.row + 1 + info.page * info.length;
                        return stt; // This contains the row index
                    }
                },

                //{
                //    data: "id",
                //    render: function (data, type, row, meta) {
                //        return "<span id='row" + row.id + "-column-id'>" + data + "<span>";
                //    },
                //},
                {
                    data: "name",
                    render: function (data, type, row, meta) {
                        return "<span id='row" + row.id + "-column-id'>" + data + "<span>";
                    },
                },
                //{
                //    data: "accountId",
                //    render: function (data, type, row, meta) {
                //        return "<span id='row" + row.id + "-column-id'>" + row.accountName + "<span>";
                //    },
                //},
                {
                    data: "notificationStatusId",
                    render: function (data, type, row, meta) {
                        return "<span id='row" + row.id + "-column-id'>" + row.notificationStatusName + "<span>";
                    },
                },


                //{
                //    data: "senderId",
                //    render: function (data, type, row, meta) {
                //        return "<span id='row" + row.id + "-column-id'>" + data + "<span>";
                //    },
                //},

                {
                    data: "createdTime",
                    render: function (data) {
                        var tempDate = new Date(data);
                        var displayValue = moment(data).format("DD/MM/YYYY HH:mm:ss");
                        return displayValue;
                    }
                },

                {
                    data: 'id',
                    render: function (data, type, row, meta) {
                        return "<div class='d-flex justify-content-center gap-2'>"
                            + "<a title='Cập nhật' onclick='editItem(" + row.id + ")' class='me-2 btn_manage data-notification-id=" + row.id + " '><span class='svg-icon-success svg-icon  svg-icon-1 svg_teh009'><span class='svg-icon-primary svg-icon  svg-icon-1'> <svg xmlns='http://www.w3.org/2000/svg' height='1em' viewBox='0 0 576 512'><style>svg{fill:#00bfff}</style><path d='M288 32c-80.8 0-145.5 36.8-192.6 80.6C48.6 156 17.3 208 2.5 243.7c-3.3 7.9-3.3 16.7 0 24.6C17.3 304 48.6 356 95.4 399.4C142.5 443.2 207.2 480 288 480s145.5-36.8 192.6-80.6c46.8-43.5 78.1-95.4 93-131.1c3.3-7.9 3.3-16.7 0-24.6c-14.9-35.7-46.2-87.7-93-131.1C433.5 68.8 368.8 32 288 32zM144 256a144 144 0 1 1 288 0 144 144 0 1 1 -288 0zm144-64c0 35.3-28.7 64-64 64c-7.1 0-13.9-1.2-20.3-3.3c-5.5-1.8-11.9 1.6-11.7 7.4c.3 6.9 1.3 13.8 3.2 20.7c13.7 51.2 66.4 81.6 117.6 67.9s81.6-66.4 67.9-117.6c-11.1-41.5-47.8-69.4-88.6-71.1c-5.8-.2-9.2 6.1-7.4 11.7c2.1 6.4 3.3 13.2 3.3 20.3z'/></svg></span></span></a>"
                        //+ "<a title='Cập nhật' onclick='deleteItem(" + row.id + ")' class='me-2 btn_manage'><span class='svg-icon-success svg-icon  svg-icon-1 svg_teh009'><span class='svg-icon-danger svg-icon  svg-icon-1'><svg width='24' height='24' viewBox='0 0 24 24' fill='none' xmlns='http://www.w3.org/2000/svg'><path d='M5 9C5 8.44772 5.44772 8 6 8H18C18.5523 8 19 8.44772 19 9V18C19 19.6569 17.6569 21 16 21H8C6.34315 21 5 19.6569 5 18V9Z' fill='currentColor'></path><path opacity='0.5' d='M5 5C5 4.44772 5.44772 4 6 4H18C18.5523 4 19 4.44772 19 5V5C19 5.55228 18.5523 6 18 6H6C5.44772 6 5 5.55228 5 5V5Z' fill='currentColor'></path><path opacity='0.5' d='M9 4C9 3.44772 9.44772 3 10 3H14C14.5523 3 15 3.44772 15 4V4H9V4Z' fill='currentColor'></path></svg></span></a>"
                    }
                },

            ],
            columnDefs: [
                { targets: "no-sort", orderable: false },
                { targets: "no-search", searchable: false },
                { orderable: false, targets: [-1, 0] },
            ],
            aLengthMenu: [
                [10, 25, 50, 100],
                [10, 25, 50, 100]
            ],
            drawCallback: function () {
                $('#tableData tfoot').html("");
                $("#tableData thead:nth-child(1) tr").clone(true).appendTo("#tableData tfoot");
                $('#tableData tfoot tr').addClass("border-top");
            }
        });
    }

    //$("#table_candidate_notification").on("click", ".notification-clickable", makeAsRead);
    async function makeAsRead() {

        var notificationId = $("#notification-id").val();
        //let res = await httpService.putAsync(api/notification/MakeAsRead/${notificationId});
        $.ajax({
            url: systemURL + "notification/api/MakeAsRead/" + notificationId,
            type: "PUT",
            contentType: "application/json",
            beforeSend: function (xhr) {
                if (localStorage.token) {
                    xhr.setRequestHeader('Authorization', 'Bearer ' + localStorage.token);
                }
            },
        });
        reGenTable();
    }

    async function editItem(id) {
        autosize.destroy($('#notification-name'));
        autosize($('#notification-name'));
        updatingItemId = id;
        $("#modal-id").modal('show');
        if (id > 0) {
            editObj = await getItemById(id);
        }
        $("#defaultModalTitle").text(id == 0 ? "Thêm mới thông báo" : "Chi tiết thông báo");

        $("#notification-id").val(id > 0 ? editObj.id : "0");
        $("#notification-active").val(id > 0 ? editObj.active : "");
        //$("#notification-accountId").val(id > 0 ? editObj.accountId : "").trigger("change");
        $("#notification-notificationStatusId").val(id > 0 ? editObj.notificationStatusId : "").trigger("change");
        $("#notification-name").val(id > 0 ? editObj.name : "");
        //$("#notification-senderId").val(id > 0 ? editObj.senderId : "");
        //$("#notification-description").val(id > 0 ? editObj.description : "");
        $("#notification-createdTime").val(id > 0 ? moment(editObj.createdTime).format("DD/MM/YYYY HH:mm:ss") : moment(new Date()).format("DD/MM/YYYY HH:mm:ss"));
        if (id > 0) {
            var strLength = $("#notification-name").val().split('\n').length;
            $("#notification-name").attr('rows', strLength < 6 ? 6 : strLength)
        }
        makeAsRead();
        //formatNumber();
    }
    async function updateItem(id) {
        var actionName = (id == 0 ? "Bạn muốn tạo mới" : "Cập nhật");
        var obj;
        if (id > 0) {
            obj = await getItemById(id);
        }
        let objName = id > 0 ? obj.name : "item";
        validateInputNumber();
        var updatingObj = {
            "id": $("#notification-id").val(),
            "active": $("#notification-active").val(),
            //"accountId": $("#notification-accountId").val(),
            "notificationStatusId": $("#notification-notificationStatusId").val(),
            "name": $("#notification-name").val(),
            //"senderId": $("#notification-senderId").val(),
            //"description": $("#notification-description").val(),
            "createdTime": formatDatetimeUpdate($("#notification-createdTime").val()),

        };
        Swal.fire({
            title: 'Xác nhận thay đổi?',
            text: "" + actionName + " " + objName + "",
            icon: 'info',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#443',
            confirmButtonText: 'Xác nhận',
            cancelButtonText: 'Huỷ'
        }).then((result) => {
            if (result.value) {
                $("#modal-id").modal('hide');
                //CALL AJAX TO UPDATE
                if (id > 0) {
                    $.ajax({
                        url: systemURL + "notification/api/update",
                        type: "POST",
                        contentType: "application/json",
                        data: JSON.stringify(updatingObj),
                        success: function (responseData) {
                            // debugger;
                            if (responseData.status == 200 && responseData.message === "SUCCESS") {
                                Swal.fire(
                                    'Thành Công!',
                                    'Đã cập nhật "' + objName + '" ',
                                    'success'
                                );
                                $("#notification-name").val(updatingObj.name);
                                reGenTable();
                                // Remove loading indication
                                submitButton.removeAttribute('data-kt-indicator');
                                // Enable button
                                submitButton.disabled = false;
                            }
                        },
                        error: function (e) {
                            //console.log(e.message);
                            Swal.fire(
                                'Lỗi!',
                                'Đã xảy ra lỗi, vui lòng thử lại',
                                'error'
                            );
                            // Remove loading indication
                            submitButton.removeAttribute('data-kt-indicator');
                            // Enable button
                            submitButton.disabled = false;
                        }
                    });
                };
                //CALL AJAX TO CREATE
                if (id == 0) {
                    updatingObj.id = 1;
                    delete updatingObj["id"]
                    updatingObj.active = 1;
                    updatingObj.createdTime = new Date();
                    console.log(updatingObj);
                    $.ajax({
                        url: systemURL + "notification/api/add",
                        type: "POST",
                        contentType: "application/json",
                        data: JSON.stringify(updatingObj),
                        success: function (responseData) {
                            // debugger;
                            if (responseData.status == 201 && responseData.message === "CREATED") {
                                Swal.fire(
                                    'Thành công!',
                                    'Đã cập nhật dữ liệu',
                                    'success'
                                );
                                updatingObj = responseData.data;
                                reGenTable();
                                // Remove loading indication
                                submitButton.removeAttribute('data-kt-indicator');
                                // Enable button
                                submitButton.disabled = false;
                            }
                        },
                        error: function (e) {
                            //console.log(e.message);
                            Swal.fire(
                                'Lỗi!',
                                'Đã xảy ra lỗi, vui lòng thử lại',
                                'error'
                            );
                            // Remove loading indication
                            submitButton.removeAttribute('data-kt-indicator');
                            // Enable button
                            submitButton.disabled = false;
                        }
                    });
                }
            }
            else {
                // Remove loading indication
                submitButton.removeAttribute('data-kt-indicator');
                // Enable button
                submitButton.disabled = false;
            }
        })
    }
    async function deleteItem(id) {
        updatingObj = table.ajax.json().data.find(c => c.id == id);
        let objName = id > 0 ? updatingObj.name : "item";
        Swal.fire({
            title: 'Xác nhận thay đổi?',
            text: "Xóa " + objName + "",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#d33',
            cancelButtonColor: '#3085d6',
            confirmButtonText: 'Xoá',
            cancelButtonText: 'Huỷ'
        }).then((result) => {
            if (result.value) {
                //CALL AJAX TO DELETE
                $.ajax({
                    url: systemURL + "notification/api/delete",
                    type: "POST",
                    contentType: "application/json",
                    data: JSON.stringify({ "id": id }),
                    success: function (responseData) {
                        // debugger;
                        if (responseData.status == 200 && responseData.message === "SUCCESS") {
                            Swal.fire(
                                'Thành công!',
                                'Đã xoá ' + updatingObj.name + '.',
                                'success'
                            );
                            reGenTable();
                        }
                    },
                    error: function (e) {
                        //console.log(e.message);
                        Swal.fire(
                            'Lỗi!',
                            'Đã xảy ra lỗi, vui lòng thử lại',
                            'error'
                        );
                    }
                });

            }
            else {
                // Remove loading indication
                submitButton.removeAttribute('data-kt-indicator');
                // Enable button
                submitButton.disabled = false;
            }
        })
    }
    async function getItemById(id) {
        var data;
        await $.ajax({
            url: systemURL + "notification/api/detail/" + id,
            method: "GET",
            success: function (responseData) {
                data = responseData.data[0];
            },
            error: function (e) {
            },
        });
        return data;
    }
    function reGenTable() {
        tableUpdating = 0;
        table.destroy();
        $(".tableHeaderFilter").val(null).trigger("change");
        $("#tableData tbody").html('');
        loadData();
    }
</script>
<!--end:Base load data-->
<!--begin:setting in data table-->
<script>
    function tableSearch() {
        table.column(1).search($("#tableData thead:nth-child(2) tr th:nth-child(2) input").val());
        table.column(2).search($("#tableData thead:nth-child(2) tr th:nth-child(3) input").val());
        table.column(3).search($("#tableData thead:nth-child(2) tr th:nth-child(4) input").val());

        table.draw();
    }
</script>
<!--end:setting in data table-->
