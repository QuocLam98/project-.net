@using HomeDoctorSolution.Constants
@{
    Layout = "_Admin_Layout";
}
<style>
    .table-content {
        padding: 15px;
        background: var(--bs-app-header-base-bg-color);
        border-radius: 8px;
    }

    table thead tr th {
        white-space: nowrap;
    }

    #tableData thead tr th:nth-child(1),
    #tableData tbody tr td:nth-child(1),
    #tableData tfoot tr th:nth-child(1) {
        text-align: center;
        width: 50px !important;
        max-width: 50px !important;
    }
    #tableData thead tr th:nth-child(6),
    #tableData tbody tr td:nth-child(6),
    #tableData tfoot tr th:nth-child(6) {
        width: 150px !important;
        max-width: 150px !important;
    }
    /*#tableData thead tr th:nth-child(7),
    #tableData tbody tr td:nth-child(7),
    #tableData tfoot tr th:nth-child(7) {
        width: 150px !important;
        max-width: 150px !important;
    }*/
    #tableData thead tr th:nth-child(7),
    #tableData tbody tr td:nth-child(7),
    #tableData tfoot tr th:nth-child(7) {
        text-align: center;
        width: 260px !important;
        max-width: 260px !important;
    }
    #tableData thead tr th:nth-child(8),
    #tableData tbody tr td:nth-child(8),
    #tableData tfoot tr th:nth-child(8) {
        text-align: center;
        width: 90px !important;
        max-width: 90px !important;
    }
</style>
<div id="kt_app_content" class="app-content  flex-column-fluid ">
    <!--begin::Content container-->
    <div id="kt_app_content_container" class="app-container  container-fluid ">
        <!--begin::Row-->
        <div class="table-content">
            <!--begin::Col-->
            <!--begin::Wrapper-->
            <div class="d-flex flex-stack mb-5">
                <!--begin::Search-->
                <div class="d-flex align-items-center position-relative my-1">
                    <i class="ki-duotone ki-magnifier fs-1 position-absolute ms-6"><span class="path1"></span><span class="path2"></span></i>
                    <input type="search" data-kt-docs-table-filter="search" class="form-control form-control-solid w-250px ps-15" id="search-input" placeholder="Tìm kiếm" />
                </div>
                <!--end::Search-->
                <!--begin::Toolbar-->
                <div class="d-flex justify-content-end" data-kt-docs-table-toolbar="base">
                    <!--begin::Filter-->
                    @*<button type="button" class="btn btn-light-primary me-3" data-bs-toggle="tooltip" title="Coming Soon">
                    <i class="ki-duotone ki-filter fs-2"><span class="path1"></span><span class="path2"></span></i>
                    Bộ lọc
                    </button>*@
                    <!--end::Filter-->
                    <!--begin::Add customer-->
                    <button type="button" class="btn btn-primary" data-bs-toggle="tooltip" title="Tạo mới" onclick="editItem(0)">
                        <i class="ki-duotone ki-plus fs-2"></i>
                        Tạo mới
                    </button>
                    <!--end::Add customer-->
                </div>
                <!--end::Toolbar-->
                <!--begin::Group actions-->
                <div class="d-flex justify-content-end align-items-center d-none" data-kt-docs-table-toolbar="selected">
                    <div class="fw-bold me-5">
                        <span class="me-2" data-kt-docs-table-select="selected_count"></span> Selected
                    </div>

                    <button type="button" class="btn btn-danger" data-bs-toggle="tooltip" title="Coming Soon">
                        Selection Action
                    </button>
                </div>
                <!--end::Group actions-->
            </div>
            <!--end::Wrapper-->
            <!--begin::Datatable-->
            <table id="tableData" class="table table-hover table-rounded table-row-bordered gy-3 gs-3">
                <thead>
                    <tr class="fw-bold fs-6 text-gray-800">
                        <th>STT</th>
                        <th>Tên</th>
                        <th>Email</th>
                        <th>Tên tài khoản</th>
                        <th>Số điện thoại</th>
                        @*<th>Loại tài khoản</th>*@
                        <th>Trạng thái tài khoản</th>
                        <th>Ngày tạo</th>
                        <th>Thao tác</th>
                    </tr>
                </thead>
                <thead>
                    <tr class="fs-6">
                        <th></th>
                        <th><input type="text" class="form-control tableheaderFillter" /></th>
                        <th><input type="text" class="form-control tableheaderFillter" /></th>
                        <th><input type="text" class="form-control tableheaderFillter" /></th>
                        <th><input type="text" class="form-control tableheaderFillter" /></th>
                        @*<th>
                        <select class="form-select tableheaderFillter" id="filterAccountTypeId" data-control="select2" data-placeholder="" data-allow-clear="true" multiple>
                        </select>
                        </th>*@

                        <th>
                            <select class="form-select tableheaderFillter" id="filterAccountStatusId" data-control="select2" data-placeholder="" data-allow-clear="true" multiple>
                            </select>
                        </th>

                        <th>
                            <div class="input-group" id="filterCreatedTime" data-td-target-input="nearest" data-td-target-toggle="nearest">
                                <input id="filterCreatedTime_input" readonly type="text" class="form-control tableheaderFillter" data-td-target="#filterCreatedTime" />
                                <span class="input-group-text" title="Chọn" id="open-flatpickr" data-td-target="#filterCreatedTime">
                                    <i class="ki-duotone ki-calendar fs-2"><span class="path1"></span><span class="path2"></span></i>
                                </span>
                                <span class="input-group-text" id="clear-flatpickr" title="Xóa" data-clear="true" data-target="filterCreatedTime">
                                    <i class="ki-duotone ki-calendar-remove fs-2"><i class="path1"></i><i class="path2"></i><i class="path3"></i><i class="path4"></i><i class="path5"></i><i class="path6"></i></i>
                                </span>
                            </div>
                        </th>

                        <th class="text-center">
                            <div class="search-control">
                                <button class="btn btn-primary form-control mb-1" title="Tìm kiếm" id="btnTableSearch">
                                    <span class="svg-icon svg-icon svg-icon-1 svg_search_2 m-0">
                                        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                                            <path d="M21.7 18.9L18.6 15.8C17.9 16.9 16.9 17.9 15.8 18.6L18.9 21.7C19.3 22.1 19.9 22.1 20.3 21.7L21.7 20.3C22.1 19.9 22.1 19.3 21.7 18.9Z" fill="currentColor"></path>
                                            <path opacity="0.3" d="M11 20C6 20 2 16 2 11C2 6 6 2 11 2C16 2 20 6 20 11C20 16 16 20 11 20ZM11 4C7.1 4 4 7.1 4 11C4 14.9 7.1 18 11 18C14.9 18 18 14.9 18 11C18 7.1 14.9 4 11 4ZM8 11C8 9.3 9.3 8 11 8C11.6 8 12 7.6 12 7C12 6.4 11.6 6 11 6C8.2 6 6 8.2 6 11C6 11.6 6.4 12 7 12C7.6 12 8 11.6 8 11Z" fill="currentColor"></path>
                                        </svg>
                                    </span>
                                </button>
                                <button class="btn btn-secondary form-control" title="Reset" id="btnTableResetSearch">
                                    <span class="svg-icon svg-icon svg-icon-1 svg_cancel m-0">
                                        <svg width="32" height="32" viewBox="0 0 32 32" fill="none" xmlns="http://www.w3.org/2000/svg">
                                            <rect x="9.39844" y="20.7144" width="16" height="2.66667" rx="1.33333" transform="rotate(-45 9.39844 20.7144)" fill="currentColor"></rect>
                                            <rect x="11.2852" y="9.40039" width="16" height="2.66667" rx="1.33333" transform="rotate(45 11.2852 9.40039)" fill="currentColor"></rect>
                                        </svg>
                                    </span>
                                </button>
                            </div>
                        </th>
                    </tr>
                </thead>
                <tbody>
                </tbody>
                <tfoot>
                    <tr class="border-top fw-bold fs-6 text-gray-800">
                    </tr>
                </tfoot>
            </table>
            <!--end::Datatable-->
            <div class="modal fade" id="modal-id" data-bs-backdrop="static" data-bs-keyboard="false">
                <div class="modal-dialog modal-xl modal-dialog-centered">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h3 class="modal-title" id="defaultModalTitle">Modal title</h3>

                            <!--begin::Close-->
                            @*<div class="btn btn-icon btn-sm btn-active-light-primary ms-2" data-bs-dismiss="modal" aria-label="Close">
                            <i class="ki-duotone ki-cross fs-1"><span class="path1"></span><span class="path2"></span></i>
                            </div>*@
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                            <!--end::Close-->
                        </div>
                        <div class="modal-body">
                            <form action="#">
                                <div class="row">
                                    <div class="col-md-4 mb-7">
                                        <div class="image-input image-input-outline image-input-placeholder ms-20 mt-7" data-kt-image-input="true">
                                            <div class="w-150px h-150px" id="divImage"><img id="adminAccountPhoto" src="/assets/media/images/blog/NoImage.png" class="w-150px h-150px rounded thumbnail" file-accept="image/*" /></div>
                                            <label class="btn btn-icon btn-circle btn-active-color-primary w-25px h-25px bg-body shadow choseFile" data-fm-target="#adminAccountPhoto" data-kt-image-input-action="change" data-bs-toggle="tooltip" aria-label="Change avatar" data-bs-original-title="Change avatar" data-kt-initialized="1">
                                                <i class="ki-duotone ki-pencil fs-7">
                                                    <span class="path1 ki-uniEDBC"></span>
                                                    <span class="path2 ki-uniEDBD"></span>
                                                </i>
                                            </label>
                                        </div>
                                    </div>

                                    <div class="col-md-4 mb-7 d-none">

                                        <div class="form-group">
                                            <div class="fv-plugins-icon-container">
                                                <label class="required fw-semibold fs-6 mb-2">Loại tài khoản</label>
                                                <select class="form-select  dataSelect" id="account-accountTypeId" data-placeholder="">
                                                </select>
                                            </div>
                                        </div>
                                        <script>
                                            var accountTypeData = [];
                                            async function loadDataSelectAccountType() {
                                                await $.ajax({
                                                    url: systemURL + 'accountType/api/list',
                                                    type: 'GET',
                                                    async: 'true',
                                                    contentType: 'application/json',
                                                    success: function(responseData) {
                                                        //console.log(new Date().getSeconds() + ':' + new Date().getMilliseconds() + ' - loaded account');
                                                        // debugger;
                                                        var data = responseData.data;
                                                        accountTypeData = data;
                                                    },
                                                    error: function(e) {
                                                        //console.log(e.message);
                                                    }
                                                });
                                            }
                                            loadDataSelectAccountType();
                                            $(document).ready(function() {
                                                $.when(loadDataSelectAccountType()).done(function() {
                                                    $("#filterAccountTypeId").select2();
                                                    accountTypeData.forEach(function(item) {
                                                        $('#account-accountTypeId').append(new Option(item.name, item.id, false, false)).trigger('change');
                                                        $('#filterAccountTypeId').append(new Option(item.name, item.id, false, false));
                                                    })
                                                });
                                            });
                                        </script>
                                    </div>

                                    <div class="col-md-4 mb-7">
                                        <div class="form-group">
                                            <div class="fv-plugins-icon-container">
                                                <label class="required fw-semibold fs-6 mb-2">Trạng thái tài khoản</label>
                                                <select class="form-select  dataSelect" id="account-accountStatusId" data-placeholder="">
                                                </select>
                                            </div>
                                        </div>
                                        <script>
                                            var accountStatusData = [];
                                            async function loadDataSelectAccountStatus() {
                                                await $.ajax({
                                                    url: systemURL + 'accountStatus/api/list',
                                                    type: 'GET',
                                                    async: 'true',
                                                    contentType: 'application/json',
                                                    success: function(responseData) {
                                                        //console.log(new Date().getSeconds() + ':' + new Date().getMilliseconds() + ' - loaded account');
                                                        // debugger;
                                                        var data = responseData.data;
                                                        accountStatusData = data;
                                                    },
                                                    error: function(e) {
                                                        //console.log(e.message);
                                                    }
                                                });
                                            }
                                            loadDataSelectAccountStatus();
                                            $(document).ready(function() {
                                                $.when(loadDataSelectAccountStatus()).done(function() {
                                                    $("#filterAccountStatusId").select2();
                                                    accountStatusData.forEach(function(item) {
                                                        $('#account-accountStatusId').append(new Option(item.name, item.id, false, false)).trigger('change');
                                                        $('#filterAccountStatusId').append(new Option(item.name, item.id, false, false));
                                                    })
                                                });
                                            });
                                        </script>
                                    </div>

                                    <div class="col-md-4 mb-7">
                                        <div class="form-group">
                                            <div class="fv-plugins-icon-container">
                                                <label class="fw-semibold fs-6 mb-2">Vai trò truy cập</label>
                                                <select class="form-select  dataSelect" id="account-roleId" data-placeholder="" disabled>
                                                </select>
                                            </div>
                                        </div>
                                        <script>
                                            var roleData = [];
                                            async function loadDataSelectRole() {
                                                await $.ajax({
                                                    url: systemURL + 'role/api/list',
                                                    type: 'GET',
                                                    async: 'true',
                                                    contentType: 'application/json',
                                                    success: function(responseData) {
                                                        //console.log(new Date().getSeconds() + ':' + new Date().getMilliseconds() + ' - loaded account');
                                                        // debugger;
                                                        var data = responseData.data;
                                                        roleData = data;
                                                    },
                                                    error: function(e) {
                                                        //console.log(e.message);
                                                    }
                                                });
                                            }
                                            loadDataSelectRole();
                                            $(document).ready(function() {
                                                $.when(loadDataSelectRole()).done(function() {
                                                    //$("#filterRoleId").select2();
                                                    $('#filterRoleId').select2({
                                                        dropdownParent: $('#modal-id')
                                                    });
                                                    roleData.forEach(function(item) {
                                                        $('#account-roleId').append(new Option(item.name, item.id, false, false)).trigger('change');
                                                        $('#filterRoleId').append(new Option(item.name, item.id, false, false));
                                                    })
                                                });
                                            });
                                        </script>
                                    </div>

                                    <div class="col-md-4 mb-7 fv-plugins-icon-container">
                                        <label class="required fw-semibold fs-6 mb-2">Kích hoạt</label>
                                        <select class="form-select  dataSelect" id="account-isActivated">
                                            <option value="1">Đã kích hoạt</option>
                                            <option value="0">Chưa kích hoạt</option>
                                        </select>
                                        @*<input type="number" id="account-isActivated" class="form-control mb-3 mb-lg-0 none-space bs_max_length" placeholder="" value="" maxlength="255">*@
                                    </div>

                                    <div class="col-md-4 mb-7" style="display:none;">
                                        <div class="form-group">
                                            <div class="input-group input-group-solid mb-5">
                                                <span class="input-group-text" id="basic-addon-active">Kích hoạt</span>
                                                <input readonly type="number" autocomplete="off" class="form-control input-active" id="account-active" placeholder="active" aria-label="active" aria-describedby="basic-addon-active" />
                                            </div>
                                        </div>
                                    </div>

                                    <div class="col-md-4 mb-7 fv-plugins-icon-container">
                                        <label class="required fw-semibold fs-6 mb-2" id="basic-addon-firstName">Họ</label>
                                        <input type="text" class="form-control mb-3 mb-lg-0 bs_max_length" id="account-firstName" aria-label="firstName" />
                                    </div>

                                    <div class="col-md-4 mb-7 fv-plugins-icon-container">
                                        <label class="required fw-semibold fs-6 mb-2" id="basic-addon-lastName">Tên</label>
                                        <input type="text" class="form-control mb-3 mb-lg-0 bs_max_length" id="account-lastName" aria-label="lastName" />
                                    </div>

                                    <div class="col-md-4 mb-7 fv-plugins-icon-container">
                                        <label class="required fw-semibold fs-6 mb-2">Họ và tên</label>
                                        <input type="text" id="account-name" class="form-control mb-3 mb-lg-0 bs_max_length" maxlength="255">
                                    </div>

                                    <div class="col-md-4 mb-7 fv-plugins-icon-container">
                                        <label class="required fw-semibold fs-6 mb-2">Email</label>
                                        <input type="text" id="account-email" class="form-control mb-3 mb-lg-0 none-space bs_max_length" placeholder="" value="" maxlength="255">
                                    </div>

                                    <div class="col-md-4 mb-7 fv-plugins-icon-container">
                                        <label class="fw-semibold fs-6 mb-2">Tên đăng nhập</label>
                                        <input type="text" id="account-username" class="form-control mb-3 mb-lg-0 bs_max_length" maxlength="255">
                                    </div>

                                    <div class="col-md-4 mb-7 fv-plugins-icon-container">
                                        <label id="password__title" class="required fw-semibold fs-6 mb-2">Mật khẩu</label>
                                        <label style="float: right;cursor: pointer" id="btnChangePassword">Đặt lại mật khẩu</label>
                                        <div class="position-relative d-flex align-items-center input-group-pass">
                                            <span type="button" class="svg-icon svg-icon-1 fs-3 position-absolute me-5 end-0 btn_show_pass d-none" data-target="#account-password"><i class="fa fa-eye-slash"></i></span>
                                            <input type="password" id="account-password" class="form-control pe-13  mb-3 mb-lg-0 none-space bs_max_length" maxlength="255">
                                        </div>
                                    </div>

                                    <div class="col-md-4 mb-7 fv-plugins-icon-container">
                                        <label class="fw-semibold fs-6 mb-2">Số điện thoại</label>
                                        <input type="text" id="account-phone" class="form-control  mb-3 mb-lg-0" placeholder="" value="">
                                    </div>

                                    <div class="col-md-4 mb-7 fv-plugins-icon-container">
                                        <label class="fw-semibold fs-6 mb-2">CMND/CCCD</label>
                                        <input type="text" id="account-idCardNumber" class="form-control  mb-3 mb-lg-0 none-space input-search-number bs_max_length" maxlength="12">
                                    </div>

                                    <div class="col-md-4 mb-7 fv-plugins-icon-container">
                                        <label class="required fw-semibold fs-6 mb-2">Ngày sinh</label>
                                        <input type="text" id="account-dob" class="form-control  mb-3 mb-lg-0" placeholder="" value="">
                                    </div>

                                    <div class="col-md-8 mb-7 fv-plugins-icon-container">
                                        <label class="fw-semibold fs-6 mb-2">Địa chỉ</label>
                                        <input type="text" id="account-address" class="form-control  mb-3 mb-lg-0" placeholder="" value="">
                                    </div>

                                    <div class="col-md-4 mb-7 fv-plugins-icon-container">
                                        <label class="required fw-semibold fs-6 mb-2">Ngày tạo</label>
                                        <input type="text" id="account-createdTime" class="form-control  mb-3 mb-lg-0" placeholder="" value="" readonly disabled>
                                    </div>
                                    
                                    <div class="col-md-8 mb-7 fv-plugins-icon-container">
                                        <label class="fw-semibold fs-6 mb-2">Thông tin</label>
                                        <textarea id="account-info" rows="6" class="form-control  mb-3 mb-lg-0 text-editor" placeholder="" data-kt-autosize="true" value=""></textarea>
                                    </div>
                                    
                                    <div class="col-md-8 mb-7 fv-plugins-icon-container">
                                        <label class="fw-semibold fs-6 mb-2">Thông tin</label>
                                        <textarea id="account-info" rows="6" class="form-control  mb-3 mb-lg-0 text-editor" placeholder="" data-kt-autosize="true" value=""></textarea>
                                    </div>

                                    <div class="col-md-4 mb-7">
                                        <div class="form-group d-none">
                                            <div class="input-group input-group-solid mb-5">
                                                <span class="input-group-text" id="basic-addon-id">Mã</span>
                                                <input readonly type="number" autocomplete="off" class="form-control input-id" id="account-id" placeholder="id" aria-label="id" aria-describedby="basic-addon-id" />
                                            </div>
                                        </div>
                                    </div>
                                </div>

                            </form>
                        </div>
                        <div class="modal-footer sticky-action justify-content-center">
                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Đóng</button>
                            <button type="button" class="btn btn-primary" id="btnUpdateItem">Lưu</button>
                        </div>
                    </div>
                </div>
            </div>
            <!--end::Col-->
        </div>
    </div>
    <!--end::Content container-->
</div>
<!--begin:Base load data-->
@section Scripts{
    <partial name="_FileExplorer" />
}
    <script>
        CKEDITOR.replace('account-info');
        //$(document).ready(async function() {
        //    CKEDITOR.on('dialogDefinition', function(e) {
        //        var dialogName = e.data.name;
        //        var dialog = e.data.definition.dialog;
        //        dialog.on('show', function() {
        //            setupCKUploadFile();
        //        });
        //    });
        //})

        var showItem = ['name', 'email', 'username', 'phone', 'accountTypeId', 'accountStatusId', 'createdTime'];
        var dataSource = [];
        var updatingItemId = 0;
        var editObj;
        var tableUpdating = 0;
        var table;
        const submitButton = document.getElementById('btnUpdateItem');
        //submitButton.addEventListener('click', function (e) {
        //    e.preventDefault();
        //    submitButton.setAttribute('data-kt-indicator', 'on');
        //    // Disable button to avoid multiple click
        //    submitButton.disabled = true;
        //    // Simulate form submission. For more info check the plugin's official documentation: https://sweetalert2.github.io/
        //    updateItem(updatingItemId);
        //});
        //$('#search-input').on("input", function () {
        //    table.search($(this).val()).draw();
        //});
        $(document).ready(function() {
            // Load data
            loadData();

            // Datetime picker
            document.querySelectorAll(".datepicker").forEach(function(item) {
                new tempusDominus.TempusDominus(item, datePickerOption);
            })
            $(".datepicker").on('dp.change', function(e) {
                // console.log(this.value);
                this.value = moment(this.value).format("YYYY-MM-DD HH:mm:ss");
                // console.log(this.value);
            });
            //Flat pickr format
            $("#filterCreatedTime_input").flatpickr({
                dateFormat: "d/m/Y",
                mode: "range",
            });
            $("#open-flatpickr").click(function() {
                $("#filterCreatedTime_input").click();
            });
            $("#clear-flatpickr").click(function() {
                $("#filterCreatedTime_input").val("");
            });

            $("#filterDob_input").flatpickr({
                dateFormat: "d/m/Y",
                mode: "range",
            });
            $("#open-flatpickr-Dob").click(function() {
                $("#filterDob_input").click();
            });
            $("#clear-flatpickr-Dob").click(function() {
                $("#filterDob_input").val("");
            });

            $('.dataSelect').select2();


            $("#btnTableSearch").click(function() {
                tableSearch();
            });

            $("#tableData thead:nth-child(2) tr th input").keypress(function(e) {
                let key = e.which;
                if (key == 13) {
                    $("#btnTableSearch").click();
                }
            });
            $("#btnTableResetSearch").click(function() {
                $(".tableheaderFillter").val("").trigger("change");
                tableSearch();
            });
        });

        $("#search-input").on('keyup', function(e) {
            let key = e.which;
            if (key == 13) {
                table.search($(this).val()).draw();
            }
        });

        function loadData() {
            initTable();
        }
        function initTable() {
            table = $('#tableData').DataTable({
                processing: true,
                serverSide: true,
                paging: true,
                searching: { regex: true },
                order: [7, 'desc'],
                ajax: {
                    url: systemURL + "account/api/list-counselor-server-side",
                    type: "POST",
                    contentType: "application/json",
                    dataType: "json",
                    data: function(d) {
                        d.searchAll = $("#search-input").val();
                        d.roleIds = $("#filterRoleId").val(); /*d.accountTypeIds = $("#filterAccountTypeId").val();*/ d.accountStatusIds = $("#filterAccountStatusId").val();
                        return JSON.stringify(d);
                    }
                },
                columns: [
                    {
                        data: 'id',
                        render: function(data, type, row, meta) {
                            var info = table.page.info();
                            var stt = meta.row + 1 + info.page * info.length;
                            return stt; // This contains the row index
                        }
                    },

                    {
                        data: "name",
                        render: function(data, type, row, meta) {
                            return "<span id='row" + row.id + "-column-id'>" + data + "<span>";
                        },
                    },


                    {
                        data: "email",
                        render: function(data, type, row, meta) {
                            return "<span id='row" + row.id + "-column-id'>" + data + "<span>";
                        },
                    },

                    {
                        data: "username",
                        render: function(data, type, row, meta) {
                            return "<span id='row" + row.id + "-column-id'>" + data + "<span>";
                        },
                    },


                    {
                        data: "phone",
                        render: function(data, type, row, meta) {
                            return formatPhoneNumber(data);
                        },
                    },

                    //{
                    //    data: "accountTypeId",
                    //    render: function (data, type, row, meta) {
                    //        return "<span id='row" + row.id + "-column-id'>" + row.accountTypeName + "<span>";
                    //    },
                    //},
                    {
                        data: "accountStatusId",
                        render: function(data, type, row, meta) {
                            return "<span id='row" + row.id + "-column-id'>" + row.accountStatusName + "<span>";
                        },
                    },
                    {
                        data: "createdTime",
                        render: function(data) {
                            var tempDate = new Date(data);
                            var displayValue = moment(data).format("DD/MM/YYYY HH:mm:ss");
                            return displayValue;
                        }
                    },

                    {
                        data: 'id',
                        render: function(data, type, row, meta) {
                            return "<div class='d-flex justify-content-center gap-2'>"
                                + "<a title='Cập nhật' onclick='editItem(" + row.id + ")' class='me-2 btn_manage'><span class='svg-icon-success svg-icon  svg-icon-1 svg_teh009'><span class='svg-icon-primary svg-icon  svg-icon-1'> <svg width='24' height='24' viewBox='0 0 24 24' fill='none' xmlns='http://www.w3.org/2000/svg'><path opacity='0.3' fill-rule='evenodd' clip-rule='evenodd' d='M2 4.63158C2 3.1782 3.1782 2 4.63158 2H13.47C14.0155 2 14.278 2.66919 13.8778 3.04006L12.4556 4.35821C11.9009 4.87228 11.1726 5.15789 10.4163 5.15789H7.1579C6.05333 5.15789 5.15789 6.05333 5.15789 7.1579V16.8421C5.15789 17.9467 6.05333 18.8421 7.1579 18.8421H16.8421C17.9467 18.8421 18.8421 17.9467 18.8421 16.8421V13.7518C18.8421 12.927 19.1817 12.1387 19.7809 11.572L20.9878 10.4308C21.3703 10.0691 22 10.3403 22 10.8668V19.3684C22 20.8218 20.8218 22 19.3684 22H4.63158C3.1782 22 2 20.8218 2 19.3684V4.63158Z' fill='currentColor'></path><path d='M10.9256 11.1882C10.5351 10.7977 10.5351 10.1645 10.9256 9.77397L18.0669 2.6327C18.8479 1.85165 20.1143 1.85165 20.8953 2.6327L21.3665 3.10391C22.1476 3.88496 22.1476 5.15129 21.3665 5.93234L14.2252 13.0736C13.8347 13.4641 13.2016 13.4641 12.811 13.0736L10.9256 11.1882Z' fill='currentColor'></path><path d='M8.82343 12.0064L8.08852 14.3348C7.8655 15.0414 8.46151 15.7366 9.19388 15.6242L11.8974 15.2092C12.4642 15.1222 12.6916 14.4278 12.2861 14.0223L9.98595 11.7221C9.61452 11.3507 8.98154 11.5055 8.82343 12.0064Z' fill='currentColor'></path></svg></span></span></a>"
                                + "<a title='Cập nhật' onclick='deleteItem(" + row.id + ")' class='me-2 btn_manage'><span class='svg-icon-success svg-icon  svg-icon-1 svg_teh009'><span class='svg-icon-danger svg-icon  svg-icon-1'><svg width='24' height='24' viewBox='0 0 24 24' fill='none' xmlns='http://www.w3.org/2000/svg'><path d='M5 9C5 8.44772 5.44772 8 6 8H18C18.5523 8 19 8.44772 19 9V18C19 19.6569 17.6569 21 16 21H8C6.34315 21 5 19.6569 5 18V9Z' fill='currentColor'></path><path opacity='0.5' d='M5 5C5 4.44772 5.44772 4 6 4H18C18.5523 4 19 4.44772 19 5V5C19 5.55228 18.5523 6 18 6H6C5.44772 6 5 5.55228 5 5V5Z' fill='currentColor'></path><path opacity='0.5' d='M9 4C9 3.44772 9.44772 3 10 3H14C14.5523 3 15 3.44772 15 4V4H9V4Z' fill='currentColor'></path></svg></span></a>"
                        }
                    },

                ],
                columnDefs: [
                    { targets: "no-sort", orderable: false },
                    { targets: "no-search", searchable: false },
                    { orderable: false, targets: [-1, 0] },
                ],
                aLengthMenu: [
                    [10, 25, 50, 100],
                    [10, 25, 50, 100]
                ],
                drawCallback: function() {
                    $('#tableData tfoot').html("");
                    $("#tableData thead:nth-child(1) tr").clone(true).appendTo("#tableData tfoot");
                    $('#tableData tfoot tr').addClass("border-top");
                }
            });
        }

        $("#btnChangePassword").click(function() {
            $("#account-password").val("");
            $("#account-password").attr("type", "password");
            $("#account-password").prop("disabled", false);
        })

        function formatPhoneNumber(phoneNumberString) {
            var cleaned = ('' + phoneNumberString).replace(/\D/g, '');
            var match = cleaned.match(/^(\d{4})(\d{3})(\d{3})$/);
            if (match) {
                return match[1] + ' ' + match[2] + ' ' + match[3];
            }
            return "";
        }

        async function editItem(id) {
            updatingItemId = id;
            autosize.destroy($('#account-info'));
            autosize($('#account-info'));
            $("#modal-id").modal('show');
            if (id > 0) {
                editObj = await getItemById(id);
            }
            $("#defaultModalTitle").text(id == 0 ? "Thêm mới tài khoản" : "Cập nhật tài khoản");
            $("#account-password").attr("type", "password");
            $("#account-password").prop("disabled", true);
            if (id > 0) {
                updatingObj = await getItemById(updatingItemId);
                $("#password__title").removeClass("required");

            }
            else {
                $("#password__title").addClass("required")
            }
            $("#adminAccountPhoto").attr("file-path", id > 0 ? editObj.photo : "");
            $("#adminAccountPhoto").attr("src", id > 0 && editObj.photo != undefined && editObj.photo.trim() != "" ? editObj.photo : "/assets/media/images/blog/NoImage.png").trigger("change");

            $("#account-id").val(id > 0 ? editObj.id : "0");
            $("#account-active").val(id > 0 ? editObj.active : "");
            $("#account-isActivated").val(id > 0 ? editObj.isActivated : "");
            //$("#account-guId").val(id > 0 ? editObj.guId : "");
            $("#account-name").val(id > 0 ? editObj.name : "");
            //$("#account-description").val(id > 0 ? editObj.description : "");
            //$("#account-info").val(id > 0 ? editObj.info : "");
            if (id > 0) {
                CKEDITOR.instances["account-info"].setData(editObj.info);
            }else{
                CKEDITOR.instances["account-info"].setData("");
            }
            //$("#account-photo").val(id > 0 ? editObj.photo : "");
            $("#account-firstName").val(id > 0 ? editObj.firstName : "");
            $("#account-lastName").val(id > 0 ? editObj.lastName : "");
            //$("#account-middleName").val(id > 0 ? editObj.middleName : "");
            $("#account-email").val(id > 0 ? editObj.email : "");
            $("#account-username").val(id > 0 ? editObj.username : "");
            $("#account-password").val(id > 0 ? editObj.password : "");
            $("#account-phone").val(id > 0 ? editObj.phone : "");
            $("#account-address").val(id > 0 ? editObj.address : "");
            //$("#account-googleId").val(id > 0 ? editObj.googleId : "");
            //$("#account-facebookId").val(id > 0 ? editObj.facebookId : "");
            $("#account-dob").val(id > 0 ? moment(editObj.dob).format("DD/MM/YYYY") : moment(new Date()).format("DD/MM/YYYY"));
            //$("#account-dob").val(id > 0 ? moment(editObj.dob).startOf('day').format("DD/MM/YYYY") : moment().startOf('day').format("DD/MM/YYYY"));
            //$("#account-gender").val(id > 0 ? editObj.gender : "");
            //$("#account-idCardNumber").val(id > 0 ? editObj.idCardNumber : "");
            //$("#account-idCardPhoto1").val(id > 0 ? editObj.idCardPhoto1 : "");
            //$("#account-idCardPhoto2").val(id > 0 ? editObj.idCardPhoto2 : "");
            //$("#account-idCardGrantedDate").val(id > 0 ? editObj.idCardGrantedDate : "");
            //$("#account-idCardGrantedPlace").val(id > 0 ? editObj.idCardGrantedPlace : "");
            //$("#account-addressCity").val(id > 0 ? editObj.addressCity : "");
            //$("#account-addressDistrict").val(id > 0 ? editObj.addressDistrict : "");
            //$("#account-addressWard").val(id > 0 ? editObj.addressWard : "");
            //$("#account-addressDetail").val(id > 0 ? editObj.addressDetail : "");
            //$("#account-linkedAccount").val(id > 0 ? editObj.linkedAccount : "");
            //$("#account-linkedPassword").val(id > 0 ? editObj.linkedPassword : "");
            //$("#account-bankName").val(id > 0 ? editObj.bankName : "");
            //$("#account-bankNumber").val(id > 0 ? editObj.bankNumber : "");
            //$("#account-bankBranch").val(id > 0 ? editObj.bankBranch : "");
            //$("#account-bankNote").val(id > 0 ? editObj.bankNote : "");
            //$("#account-roleId").val(id > 0 ? editObj.roleId : "").trigger("change");
            $("#account-roleId").val(id > 0 ? @RoleId.COUNSELOR : @RoleId.COUNSELOR).trigger("change");
            $("#account-accountTypeId").val(id > 0 ? @AccountTypeId.USER_DEFAULT : @AccountTypeId.USER_DEFAULT).trigger("change");
            $("#account-accountStatusId").val(id > 0 ? editObj.accountStatusId : "").trigger("change");
            $("#account-createdTime").val(id > 0 ? moment(editObj.createdTime).format("DD/MM/YYYY HH:mm:ss") : moment(new Date()).format("DD/MM/YYYY HH:mm:ss"));

            if (id > 0) {
                var strLength = $("#account-info").val().split('\n').length;
                $("#account-info").attr('rows', strLength < 6 ? 6 : strLength)
                $("#btnChangePassword").removeClass("d-none");
            }
            else {
                $("#btnChangePassword").addClass("d-none");
                $("#account-password").prop("disabled", false);
                $("#accountPhoto").removeClass("d-none");
                $("#accountAvatarPath").val("assets/media/images/avatar1.png")
            };

            //formatNumber();
        }
        async function updateItem(id) {
            let filePath = $("#adminAccountPhoto").attr("file-path") || "";
            filePath = filePath.replace("@UploadFileConst.DEFAULT_THUMB");
            var obj;
            if (id > 0) {
                obj = await getItemById(id);
            }
            let objName = id > 0 ? obj.name : "item";
            validateInputNumber();
            // Lấy tham chiếu đến CKEditor
            var editor = CKEDITOR.instances['account-info'];

            // Lấy nội dung HTML từ CKEditor
            var content = editor.getData();


            var updatingObj = {
                "id": $("#account-id").val(),
                "active": $("#account-active").val(),
                "isActivated": $("#account-isActivated").val(),
                //"guId": $("#account-guId").val(),
                "name": $("#account-name").val(),
                //"description": $("#account-description").val(),
                "info": content,
                "photo": filePath,
                "firstName": $("#account-firstName").val(),
                "lastName": $("#account-lastName").val(),
                //"middleName": $("#account-middleName").val(),
                "email": $("#account-email").val(),
                "username": $("#account-username").val(),
                "password": $("#account-password").val(),
                "phone": $("#account-phone").val(),
                "address": $("#account-address").val(),
                //"googleId": $("#account-googleId").val(),
                //"facebookId": $("#account-facebookId").val(),
                "dob": /*formatDatetimeUpdate($("#account-dob").val())*/ moment($("#account-dob").val()).format("YYYY-MM-DD 00:00:00"),
                //"gender": $("#account-gender").val(),
                //"idCardNumber": $("#account-idCardNumber").val(),
                //"idCardPhoto1": $("#account-idCardPhoto1").val(),
                //"idCardPhoto2": $("#account-idCardPhoto2").val(),
                //"idCardGrantedDate": $("#account-idCardGrantedDate").val(),
                //"idCardGrantedPlace": $("#account-idCardGrantedPlace").val(),
                //"addressCity": $("#account-addressCity").val(),
                //"addressDistrict": $("#account-addressDistrict").val(),
                //"addressWard": $("#account-addressWard").val(),
                //"addressDetail": $("#account-addressDetail").val(),
                //"linkedAccount": $("#account-linkedAccount").val(),
                //"linkedPassword": $("#account-linkedPassword").val(),
                //"bankName": $("#account-bankName").val(),
                //"bankNumber": $("#account-bankNumber").val(),
                //"bankBranch": $("#account-bankBranch").val(),
                //"bankNote": $("#account-bankNote").val(),
                "roleId": $("#account-roleId").val(),
                "accountTypeId": $("#account-accountTypeId").val(),
                "accountStatusId": $("#account-accountStatusId").val(),
                "createdTime": formatDatetimeUpdate($("#account-createdTime").val()),

            };
            //console.log(updatingObj);
            var actionName = (updatingItemId > 0 ? "cập nhật" : "thêm mới");
            var actionTitle = (updatingItemId > 0 ? "Cập nhật" : "Thêm mới");
            Swal.fire({
                title: actionTitle + " tài khoản",
                html: "Bạn có chắc chắn muốn " + actionName + " tài khoản <b>" + $("#account-name").val() + '</b>?',
                icon: 'info',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#443',
                confirmButtonText: 'Xác nhận',
                cancelButtonText: 'Huỷ'
            }).then((result) => {
                if (result.value) {
                    $("#modal-id").modal('hide');
                    //CALL AJAX TO UPDATE
                    if (id > 0) {
                        $.ajax({
                            url: systemURL + "account/api/update",
                            type: "POST",
                            contentType: "application/json",
                            data: JSON.stringify(updatingObj),
                            success: function(responseData) {
                                //debugger;
                                if (responseData.status == 200 && responseData.message === "SUCCESS") {
                                    Swal.fire(
                                        'Cập nhật tài khoản',
                                        'Tài khoản <b>' + $("#account-name").val() + '</b> đã được cập nhật thành công!',
                                        'success'
                                    );
                                    reGenTable();
                                    // Remove loading indication
                                    submitButton.removeAttribute('data-kt-indicator');
                                    // Enable button
                                    submitButton.disabled = false;
                                }
                            },
                            error: function(e) {
                                //console.log(e.message);
                                Swal.fire(
                                    'Lỗi!',
                                    'Đã xảy ra lỗi, vui lòng thử lại',
                                    'error'
                                );
                                // Remove loading indication
                                submitButton.removeAttribute('data-kt-indicator');
                                // Enable button
                                submitButton.disabled = false;
                            }
                        });
                    };
                    //CALL AJAX TO CREATE
                    if (id == 0) {
                        updatingObj.id = 1;
                        delete updatingObj["id"]
                        updatingObj.active = 1;
                        updatingObj.createdTime = new Date();
                        //console.log(updatingObj);
                        $.ajax({
                            url: systemURL + "account/api/add",
                            type: "POST",
                            contentType: "application/json",
                            data: JSON.stringify(updatingObj),
                            success: function(responseData) {
                                //debugger;
                                if (responseData.status == 201 && responseData.message === "CREATED") {
                                    Swal.fire(
                                        'Thêm mới tài khoản',
                                        'Tài khoản <b>' + $("#account-name").val() + '</b> đã được thêm mới thành công!',
                                        'success'
                                    );
                                    updatingObj = responseData.data;
                                    reGenTable();
                                    // Remove loading indication
                                    submitButton.removeAttribute('data-kt-indicator');
                                    // Enable button
                                    submitButton.disabled = false;
                                }
                            },
                            error: function(e) {
                                //console.log(e.message);
                                Swal.fire(
                                    'Lỗi!',
                                    'Đã xảy ra lỗi, vui lòng thử lại',
                                    'error'
                                );
                                // Remove loading indication
                                submitButton.removeAttribute('data-kt-indicator');
                                // Enable button
                                submitButton.disabled = false;
                            }
                        });
                    }
                }
                else {
                    // Remove loading indication
                    submitButton.removeAttribute('data-kt-indicator');
                    // Enable button
                    submitButton.disabled = false;
                }
            })
        }
        async function deleteItem(id) {
            updatingObj = table.ajax.json().data.find(c => c.id == id);
            let objName = id > 0 ? updatingObj.name : "item";
            Swal.fire({
                title: 'Xóa tài khoản?',
                html: "Bạn có chắc chắn muốn xóa tài khoản  <b>" + objName + "</b>?",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#d33',
                cancelButtonColor: '#3085d6',
                confirmButtonText: 'Xoá',
                cancelButtonText: 'Huỷ'
            }).then((result) => {
                if (result.value) {
                    //CALL AJAX TO DELETE
                    $.ajax({
                        url: systemURL + "account/api/delete",
                        type: "POST",
                        contentType: "application/json",
                        data: JSON.stringify({ "id": id }),
                        success: function(responseData) {
                            // debugger;
                            if (responseData.status == 200 && responseData.message === "SUCCESS") {
                                Swal.fire(
                                    'Xóa tài khoản!',
                                    'Tài khoản <b>' + updatingObj.name + ' </b> đã được xóa thành công.',
                                    'success'
                                );
                                reGenTable();
                            }
                        },
                        error: function(e) {
                            //console.log(e.message);
                            Swal.fire(
                                'Lỗi!',
                                'Đã xảy ra lỗi, vui lòng thử lại',
                                'error'
                            );
                        }
                    });

                }
                else {
                    // Remove loading indication
                    submitButton.removeAttribute('data-kt-indicator');
                    // Enable button
                    submitButton.disabled = false;
                }
            })
        }
        async function getItemById(id) {
            var data;
            await $.ajax({
                url: systemURL + "account/api/detail/" + id,
                method: "GET",
                success: function(responseData) {
                    data = responseData.data[0];
                },
                error: function(e) {
                },
            });
            return data;
        }
        function reGenTable() {
            tableUpdating = 0;
            table.destroy();
            $(".tableHeaderFilter").val(null).trigger("change");
            $("#tableData tbody").html('');
            loadData();
        }

        $("#btnUpdateItem").on("click", function() {
            validate();
        })

        function validate() {
            var errorList = [];
            if ($("#account-accountTypeId").val() == null) {
                errorList.push("Tên loại tài khoản không được để trống.");
            }
            if ($("#account-accountStatusId").val() == null) {
                errorList.push("Tên trạng thái tài khoản không được để trống.");
            }
            if ($("#account-isActivated").val() == null) {
                errorList.push("Kích hoạt tài khoản không được để trống.");
            }
            if ($("#account-firstName").val().length == 0) {
                errorList.push("Họ không được để trống.");
            }
            if ($("#account-lastName").val().length == 0) {
                errorList.push("Tên không được để trống.");
            }
            if ($("#account-name").val().length == 0) {
                errorList.push("Họ và tên không được để trống.");
            }
            if ($("#account-email").val().length == 0) {
                errorList.push("Email không được để trống.");
            }
            if ($("#account-password").val().length == 0) {
                errorList.push("Mật khẩu không được để trống.");
            }
            if ($("#account-dob").val().length == 0) {
                errorList.push("Ngày sinh không được để trống.");
            }

            if (errorList.length > 0) {
                var contentError = "<ul>";
                errorList.forEach(function(item, index) {
                    contentError += "<li class='text-start'>" + item + "</li>";
                })
                contentError += "</ul>";
                var actionName = (updatingItemId > 0 ? "Cập nhật" : "Thêm mới");
                var swalSubTitle = "<p class='swal__admin__subtitle'>" + actionName + " không thành công</p>";
                Swal.fire(
                    'Quản lý tài khoản' + swalSubTitle,
                    contentError,
                    'warning'
                );
            } else {
                updateItem(updatingItemId);
            }
        }
    </script>
    <!--end:Base load data-->
    <!--begin:setting in data table-->
    <script>
        function tableSearch() {
            table.column(1).search($("#tableData thead:nth-child(2) tr th:nth-child(2) input").val());
            table.column(2).search($("#tableData thead:nth-child(2) tr th:nth-child(3) input").val());
            table.column(3).search($("#tableData thead:nth-child(2) tr th:nth-child(4) input").val());
            table.column(4).search($("#tableData thead:nth-child(2) tr th:nth-child(5) input").val());
            table.column(5).search($("#tableData thead:nth-child(2) tr th:nth-child(6) input").val());
            table.column(6).search($("#tableData thead:nth-child(2) tr th:nth-child(7) input").val());
            table.column(7).search($("#tableData thead:nth-child(2) tr th:nth-child(8) input").val());
            //table.column(8).search($("#tableData thead:nth-child(2) tr th:nth-child(9) input").val());
            table.draw();
        }
    </script>
    <!--end:setting in data table-->
