@{
    Layout = "_Admin_Layout";
}
<link rel='stylesheet' href='https://cdn-uicons.flaticon.com/2.0.0/uicons-bold-rounded/css/uicons-bold-rounded.css'>
<style>

    .module-add-consultant {
        margin-top: 10px;
        display: none;
        padding: 10px;
        border: 1px solid var(--bs-gray-300);
        border-radius: 0.475rem;
    }

    .btn-add-consultant {
        display: flex;
        justify-content: end;
        gap: 10px;
        margin-top: 10px;
    }

    .div-consultant-reason {
        width: 40%;
    }

    .div-consultant-review {
        width: 30%;
    }

    .div-consultant-rating input {
        text-align: right;
    }

    #content-add-consultant {
        justify-content: space-between;
        flex-direction: row;
        gap: 15px;
        display: flex;
    }

    .flex-btn-function {
        display: flex;
        flex-direction: row;
        justify-content: space-between;
        align-items: center;
    }

    .n-m {
        margin: 0;
    }

    .table-responsive {
        width: 100%;
    }

    #table-result-tb {
        border-radius: 0.475rem;
        border: 1px solid #D9D9D9;
        border-bottom: 0;
        margin-top: 10px;
        width: 100%;
    }

        #table-result-tb thead tr th {
            padding: 10px;
            background: #F5F5F5;
            border-bottom: 1px solid #D9D9D9;
            color: #181C32;
            font-size: 14px;
            font-style: normal;
            font-weight: 500;
            line-height: 20px; /* 142.857% */
            /* text-transform: uppercase; */
        }

        #table-result-tb tbody tr td {
            padding: 5px 10px;
            border-right: 1px solid #D9D9D9;
            border-bottom: 1px solid #D9D9D9;
            color: #181C32;
            font-size: 14px;
            font-style: normal;
            font-weight: 400;
            line-height: 20px; /* 142.857% */
        }

            #table-result-tb thead tr th:nth-child(1),
            #table-result-tb tbody tr td:nth-child(1) {
                font-weight: 500;
                width: 30%;
            }

            #table-result-tb thead tr th:nth-child(2),
            #table-result-tb tbody tr td:nth-child(2),
            #table-result-tb thead tr th:nth-child(3),
            #table-result-tb tbody tr td:nth-child(3),
            #table-result-tb thead tr th:nth-child(4),
            #table-result-tb tbody tr td:nth-child(4) {
                text-align: center;
            }

            #table-result-tb thead tr th:nth-child(5),
            #table-result-tb tbody tr td:nth-child(5) {
                text-align: center;
                width: 20%;
            }

            #table-result-tb thead tr th:nth-child(6),
            #table-result-tb tbody tr td:nth-child(6) {
                text-align: right;
                font-weight: 500;
                width: 15%;
            }

            #table-result-tb thead tr th:nth-child(7),
            #table-result-tb tbody tr td:nth-child(7) {
                text-align: center;
                border-right: 0;
            }

    #tableData thead tr th:nth-child(1),
    #tableData tbody tr td:nth-child(1),
    #tableData tfoot tr th:nth-child(1) {
        text-align: center;
        width: 20px !important;
        max-width: 20px !important;
    }

    #tableData thead tr th:nth-child(2),
    #tableData tbody tr td:nth-child(2),
    #tableData tfoot tr th:nth-child(2) {
        text-align: left;
        width: 250px !important;
        max-width: 250px !important;
    }

    #tableData thead tr th:nth-child(3),
    #tableData tbody tr td:nth-child(3),
    #tableData tfoot tr th:nth-child(3),
    #tableData thead tr th:nth-child(4),
    #tableData tbody tr td:nth-child(4),
    #tableData tfoot tr th:nth-child(4) {
        text-align: center;
    }

    #tableData thead tr th:nth-child(6),
    #tableData tbody tr td:nth-child(6),
    #tableData tfoot tr th:nth-child(6) {
        text-align: center;
        width: 270px !important;
        min-width: 270px !important;
    }

    #tableData thead tr th:nth-child(7),
    #tableData tbody tr td:nth-child(7),
    #tableData tfoot tr th:nth-child(7) {
        text-align: center;
    }

    #tableDataSurveyHistory thead tr th:nth-child(1),
    #tableDataSurveyHistory tbody tr td:nth-child(1),
    #tableDataSurveyHistory tfoot tr th:nth-child(1) {
        text-align: left;
        width: 30px !important;
        max-width: 70px !important;
    }

    #tableDataSurveyHistory thead tr th:nth-child(2),
    #tableDataSurveyHistory tbody tr td:nth-child(2),
    #tableDataSurveyHistory tfoot tr th:nth-child(2) {
        text-align: left;
        width: 200px !important;
        min-width: 200px !important;
    }

    #tableDataSurveyHistory thead tr th:nth-child(3),
    #tableDataSurveyHistory tbody tr td:nth-child(3),
    #tableDataSurveyHistory tfoot tr th:nth-child(3) {
        text-align: center;
        width: 60px !important;
        max-width: 60px !important;
    }

    #tableDataSurveyHistory thead tr th:nth-child(4),
    #tableDataSurveyHistory tbody tr td:nth-child(4),
    #tableDataSurveyHistory tfoot tr th:nth-child(4) {
        text-align: center;
        width: 170px !important;
        min-width: 170px !important;
    }

    #tableDataSurveyHistory thead tr th:nth-child(5),
    #tableDataSurveyHistory tbody tr td:nth-child(5),
    #tableDataSurveyHistory tfoot tr th:nth-child(5) {
        text-align: center;
        width: 100px !important;
        max-width: 100px !important;
    }

    .table-content {
        padding: 15px;
        background: var(--bs-app-header-base-bg-color);
        border-radius: 8px;
    }

    table thead tr th {
        white-space: nowrap;
    }

    .status-wait {
        color: var(--bs-warning);
        border-color: var(--bs-warning-light);
        background-color: var(--bs-warning-light);
        border-radius: 10px;
        padding: 5px calc(0.7755rem + 1px);
    }

    .status-accept {
        color: var(--bs-success);
        border-color: var(--bs-success-light);
        background-color: var(--bs-success-light);
        border-radius: 10px;
        padding: 5px calc(0.7755rem + 1px);
    }

    .status-done {
        color: var(--bs-primary);
        border-color: var(--bs-primary-light);
        background-color: var(--bs-primary-light);
        border-radius: 10px;
        padding: 5px calc(0.7755rem + 1px);
    }

    .status-cancel {
        color: var(--bs-danger);
        border-color: var(--bs-danger-light);
        background-color: var(--bs-danger-light);
        border-radius: 10px;
        padding: 5px calc(0.7755rem + 1px);
    }

    .status-reject {
        color: var(--bs-dark);
        border-color: var(--bs-secondary-light);
        background-color: var(--bs-secondary-light);
        border-radius: 10px;
        padding: 5px calc(0.7755rem + 1px);
    }

    .status-confirm {
        color: #505dcd;
        border-color: #e8e8ff;
        background-color: #e8e8ff;
        border-radius: 10px;
        padding: 5px calc(0.7755rem + 1px);
    }
</style>
<style>
    #loading {
        width: 100vw;
        height: 100vh;
        position: fixed;
        inset: 0;
        z-index: 999999;
        display: flex;
        align-items: center;
        justify-content: center;
        background: rgb(0 0 0 / 70%);
        visibility: hidden;
    }

        #loading.show {
            visibility: visible;
        }

    .lds-ring {
        display: inline-block;
        position: relative;
        width: 80px;
        height: 80px;
    }

        .lds-ring div {
            box-sizing: border-box;
            display: block;
            position: absolute;
            width: 64px;
            height: 64px;
            margin: 8px;
            border: 8px solid #007983;
            border-radius: 50%;
            animation: lds-ring 1.2s cubic-bezier(0.5, 0, 0.5, 1) infinite;
            border-color: #007983 transparent transparent transparent;
        }

            .lds-ring div:nth-child(1) {
                animation-delay: -0.45s;
            }

            .lds-ring div:nth-child(2) {
                animation-delay: -0.3s;
            }

            .lds-ring div:nth-child(3) {
                animation-delay: -0.15s;
            }

    @@keyframes lds-ring {
        0% {
            transform: rotate(0deg);
        }

        100% {
            transform: rotate(360deg);
        }
    }

    .calculator-data > div {
        width: 20%;
    }
</style>
<div id="kt_app_content" class="app-content  flex-column-fluid ">
    <!--begin::Content container-->
    <div id="kt_app_content_container" class="app-container  container-fluid ">
        <div class="row mt-8 calculator-data">
            <div class="label-total-status" id="total-orderstatus-noprocess">

                <!--begin::Statistics Widget 5-->
                <div href="" class="card bg-warning hoverable card-xl-stretch mb-5 mb-xl-8 card-responsive cursor-pointer" onclick="filterStatus(@BookingStatusId.WAIT)">
                    <!--begin::Body-->
                    <div class="card-body">
                        <i class="ki-duotone ki-brifecase-timer fs-2x text-white">
                            <span class="path1"></span>
                            <span class="path2"></span>
                            <span class="path3"></span>
                        </i>

                        <div class="text-white fw-bold fs-2 mb-2 mt-5" data-kt-countup="true" data-kt-countup-start-val="0" data-kt-countup-duration="4s" data-kt-countup-value="0" data-kt-initialized="1" id="total-wait">0</div>

                        <div class="fw-semibold text-white">
                            Lịch xét nghiệm chờ xác nhận
                        </div>
                    </div>
                    <!--end::Body-->
                </div>
                <!--end::Statistics Widget 5-->
            </div>

            <div class="label-total-status" id="total-orderstatus-approved">
                <!--/orders/admin/listv1-->
                <!--begin::Statistics Widget 5-->
                <div href="" class="card bg-info hoverable card-xl-stretch mb-5 mb-xl-8 card-responsive cursor-pointer" onclick="filterStatus(@BookingStatusId.CONFIRM)">
                    <!--begin::Body-->
                    <div class="card-body">
                        <i class="ki-duotone ki-cheque text-white fs-2x ms-n1">
                            <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                                <path opacity="0.3" d="M20 18H4C3.4 18 3 17.6 3 17V7C3 6.4 3.4 6 4 6H20C20.6 6 21 6.4 21 7V17C21 17.6 20.6 18 20 18ZM12 8C10.3 8 9 9.8 9 12C9 14.2 10.3 16 12 16C13.7 16 15 14.2 15 12C15 9.8 13.7 8 12 8Z" fill="currentColor"></path>
                                <path d="M18 6H20C20.6 6 21 6.4 21 7V9C19.3 9 18 7.7 18 6ZM6 6H4C3.4 6 3 6.4 3 7V9C4.7 9 6 7.7 6 6ZM21 17V15C19.3 15 18 16.3 18 18H20C20.6 18 21 17.6 21 17ZM3 15V17C3 17.6 3.4 18 4 18H6C6 16.3 4.7 15 3 15Z" fill="currentColor"></path>
                            </svg>
                        </i>

                        <div class="text-white fw-bold fs-2 mb-2 mt-5 counted" data-kt-countup="true" data-kt-countup-start-val="0" data-kt-countup-duration="4s" data-kt-countup-value="0" data-kt-initialized="1" id="total-confirm">0</div>

                        <div class="fw-semibold text-white">
                            Lịch xét nghiệm đã xét duyệt

                        </div>
                    </div>
                    <!--end::Body-->
                </div>
                <!--end::Statistics Widget 5-->
            </div>

            <div class="label-total-status" id="total-orderstatus-deposited">
                <!--begin::Statistics Widget 5-->
                <div href="" class="card bg-success hoverable card-xl-stretch mb-5 mb-xl-8  card-responsive cursor-pointer" style="height:153.67px;" onclick="filterStatus(@BookingStatusId.ACCEPT)">
                    <!--begin::Body-->
                    <div class="card-body">
                        <i class="ki-duotone ki-abstract-39 text-white fs-2x ms-n1">
                            <span class="path1"></span>
                            <span class="path2"></span>
                        </i>
                        <div class="text-white fw-bold fs-2 mb-2 mt-5 counted" data-kt-countup="true" data-kt-countup-start-val="0" data-kt-countup-duration="4s" data-kt-countup-value="" data-kt-initialized="1" id="total-accept">0</div>

                        <div class="fw-semibold text-white">
                            Lịch xét nghiệm đã xác nhận
                        </div>
                    </div>
                    <!--end::Body-->
                </div>
                <!--end::Statistics Widget 5-->
            </div>

            <div class="label-total-status" id="total-orderstatus-purchaed">

                <!--begin::Statistics Widget 5-->
                <div href="" class="card bg-primary hoverable card-xl-stretch  mb-5 mb-xl-8  card-responsive cursor-pointer" style="height:153.67px;" onclick="filterStatus(@BookingStatusId.SUCCESS)">
                    <!--begin::Body-->
                    <div class="card-body">
                        <i class="ki-duotone ki-chart-pie-simple text-white fs-2x ms-n1">
                            <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="30px" height="30px" viewBox="0 0 24 24" version="1.1">
                                <g stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">
                                    <rect x="0" y="0" width="24" height="24"></rect>
                                    <path d="M6,2 L18,2 C19.6568542,2 21,3.34314575 21,5 L21,19 C21,20.6568542 19.6568542,22 18,22 L6,22 C4.34314575,22 3,20.6568542 3,19 L3,5 C3,3.34314575 4.34314575,2 6,2 Z M12,11 C13.1045695,11 14,10.1045695 14,9 C14,7.8954305 13.1045695,7 12,7 C10.8954305,7 10,7.8954305 10,9 C10,10.1045695 10.8954305,11 12,11 Z M7.00036205,16.4995035 C6.98863236,16.6619875 7.26484009,17 7.4041679,17 C11.463736,17 14.5228466,17 16.5815,17 C16.9988413,17 17.0053266,16.6221713 16.9988413,16.5 C16.8360465,13.4332455 14.6506758,12 11.9907452,12 C9.36772908,12 7.21569918,13.5165724 7.00036205,16.4995035 Z" fill="white"></path>
                                </g>
                            </svg>
                        </i>

                        <div class="text-white fw-bold fs-2 mb-2 mt-5 counted" data-kt-countup="true" data-kt-countup-start-val="0" data-kt-countup-duration="4s" data-kt-countup-value="0" data-kt-initialized="1" id="total-success">0</div>

                        <div class="fw-semibold text-white">
                            Lịch xét nghiệm đã hoàn thành
                        </div>
                    </div>
                    <!--end::Body-->
                </div>
                <!--end::Statistics Widget 5-->
            </div>

            <div class="label-total-status" id="total-orderstatus-cacel">
                <!--begin::Statistics Widget 5-->
                <div href="" class="card bg-danger hoverable card-xl-stretch mb-5 mb-xl-8  card-responsive cursor-pointer" style="height:153.67px;" onclick="filterStatus(@BookingStatusId.CANCEL)">
                    <!--begin::Body-->
                    <div class="card-body">
                        <i class="ki-duotone ki-briefcase text-white fs-2x ms-n1">
                            <svg width="25" height="28" viewBox="0 0 25 28" fill="none" xmlns="http://www.w3.org/2000/svg">
                                <path d="M24.0259 11.4401H1.97259C1.69436 11.4505 1.43123 11.5693 1.2394 11.7711C1.04757 11.9729 0.942247 12.2417 0.945922 12.5201V20.0801C0.933592 21.0248 1.10836 21.9627 1.46016 22.8395C1.81196 23.7164 2.33382 24.515 2.99568 25.1892C3.65754 25.8635 4.4463 26.4001 5.3165 26.7681C6.1867 27.1361 7.12112 27.3282 8.06592 27.3334H17.9993C19.8855 27.288 21.6778 26.5012 22.988 25.1436C24.2983 23.7859 25.0208 21.9667 24.9993 20.0801V12.5201C25.0037 12.2504 24.9057 11.989 24.7251 11.7886C24.5445 11.5882 24.2947 11.4637 24.0259 11.4401ZM8.73259 21.8401C8.51017 21.84 8.29271 21.7744 8.1073 21.6515C7.92189 21.5287 7.77672 21.354 7.68989 21.1492C7.60306 20.9444 7.5784 20.7186 7.61899 20.5C7.65957 20.2813 7.76361 20.0794 7.91813 19.9194C8.07266 19.7594 8.27084 19.6484 8.48798 19.6003C8.70513 19.5522 8.93164 19.569 9.1393 19.6487C9.34695 19.7283 9.52658 19.8673 9.65578 20.0484C9.78499 20.2294 9.85807 20.4445 9.86592 20.6668C9.86241 20.965 9.74146 21.2499 9.5293 21.4595C9.31714 21.6692 9.03087 21.7868 8.73259 21.7868V21.8401ZM8.73259 17.5868C8.50844 17.5868 8.28932 17.5203 8.10294 17.3958C7.91657 17.2712 7.77131 17.0942 7.68553 16.8871C7.59975 16.6801 7.5773 16.4522 7.62103 16.2323C7.66476 16.0125 7.7727 15.8105 7.9312 15.652C8.0897 15.4935 8.29164 15.3856 8.51149 15.3419C8.73133 15.2981 8.95921 15.3206 9.1663 15.4064C9.37339 15.4921 9.55039 15.6374 9.67492 15.8238C9.79945 16.0102 9.86592 16.2293 9.86592 16.4534C9.86771 16.6028 9.83962 16.7509 9.7833 16.8892C9.72697 17.0276 9.64356 17.1532 9.53796 17.2588C9.43236 17.3644 9.30672 17.4478 9.1684 17.5041C9.03009 17.5605 8.88192 17.5886 8.73259 17.5868ZM12.9993 21.8401C12.701 21.8331 12.4175 21.7088 12.2104 21.4941C12.0032 21.2794 11.889 20.9917 11.8926 20.6934C11.8926 20.3964 12.0106 20.1115 12.2206 19.9015C12.4307 19.6914 12.7155 19.5734 13.0126 19.5734C13.3096 19.5734 13.5945 19.6914 13.8045 19.9015C14.0146 20.1115 14.1326 20.3964 14.1326 20.6934C14.1291 20.9917 14.0081 21.2765 13.796 21.4862C13.5838 21.6959 13.2975 21.8135 12.9993 21.8134V21.8401ZM12.9993 17.5868C12.701 17.5798 12.4175 17.4555 12.2104 17.2408C12.0032 17.0261 11.889 16.7384 11.8926 16.4401C11.8926 16.1431 12.0106 15.8582 12.2206 15.6481C12.4307 15.4381 12.7155 15.3201 13.0126 15.3201C13.3096 15.3201 13.5945 15.4381 13.8045 15.6481C14.0146 15.8582 14.1326 16.1431 14.1326 16.4401C14.1326 16.7384 14.015 17.0246 13.8054 17.2368C13.5957 17.449 13.3109 17.5699 13.0126 17.5734L12.9993 17.5868ZM17.2393 21.8401C16.9387 21.8401 16.6504 21.7207 16.4379 21.5082C16.2253 21.2956 16.1059 21.0073 16.1059 20.7068C16.1059 20.4062 16.2253 20.1179 16.4379 19.9054C16.6504 19.6928 16.9387 19.5734 17.2393 19.5734C17.5398 19.5734 17.8281 19.6928 18.0406 19.9054C18.2532 20.1179 18.3726 20.4062 18.3726 20.7068C18.3726 21.0073 18.2532 21.2956 18.0406 21.5082C17.8281 21.7207 17.5398 21.8401 17.2393 21.8401ZM17.2393 17.5868C16.9387 17.5868 16.6504 17.4674 16.4379 17.2548C16.2253 17.0423 16.1059 16.754 16.1059 16.4534C16.1059 16.1529 16.2253 15.8646 16.4379 15.652C16.6504 15.4395 16.9387 15.3201 17.2393 15.3201C17.5398 15.3201 17.8281 15.4395 18.0406 15.652C18.2532 15.8646 18.3726 16.1529 18.3726 16.4534C18.3726 16.754 18.2532 17.0423 18.0406 17.2548C17.8281 17.4674 17.5398 17.5868 17.2393 17.5868ZM24.6393 8.13343C24.7349 8.40774 24.7203 8.7085 24.5984 8.9722C24.4765 9.2359 24.2569 9.44192 23.9859 9.54677C23.8703 9.58813 23.7487 9.61063 23.6259 9.61343H2.62592C2.2723 9.61343 1.93316 9.47296 1.68311 9.22291C1.43306 8.97286 1.29259 8.63372 1.29259 8.2801C1.28883 8.11525 1.32066 7.95153 1.38592 7.8001C1.77683 6.84295 2.37003 5.98161 3.12487 5.27509C3.87972 4.56858 4.77837 4.03358 5.75926 3.70677V1.62677C5.75926 1.3863 5.85478 1.15569 6.02481 0.985655C6.19485 0.815622 6.42546 0.720099 6.66592 0.720099C6.90639 0.720099 7.137 0.815622 7.30703 0.985655C7.47707 1.15569 7.57259 1.3863 7.57259 1.62677V3.33343H12.3059V1.62677C12.2904 1.49938 12.3021 1.37015 12.3402 1.24761C12.3783 1.12508 12.442 1.01204 12.5271 0.915961C12.6122 0.819883 12.7167 0.74296 12.8337 0.690277C12.9507 0.637594 13.0776 0.610352 13.2059 0.610352C13.3343 0.610352 13.4611 0.637594 13.5781 0.690277C13.6952 0.74296 13.7997 0.819883 13.8847 0.915961C13.9698 1.01204 14.0335 1.12508 14.0716 1.24761C14.1098 1.37015 14.1215 1.49938 14.1059 1.62677V3.33343H18.3326V1.62677C18.3171 1.49938 18.3287 1.37015 18.3669 1.24761C18.405 1.12508 18.4687 1.01204 18.5538 0.915961C18.6389 0.819883 18.7434 0.74296 18.8604 0.690277C18.9774 0.637594 19.1043 0.610352 19.2326 0.610352C19.3609 0.610352 19.4878 0.637594 19.6048 0.690277C19.7218 0.74296 19.8263 0.819883 19.9114 0.915961C19.9965 1.01204 20.0602 1.12508 20.0983 1.24761C20.1364 1.37015 20.1481 1.49938 20.1326 1.62677V3.70677C21.1713 4.05261 22.1173 4.63121 22.8984 5.39839C23.6794 6.16557 24.2749 7.10105 24.6393 8.13343Z" fill="currentColor"></path>
                            </svg>
                        </i>

                        <div class="text-white fw-bold fs-2 mb-2 mt-5 counted" data-kt-countup="true" data-kt-countup-start-val="0" data-kt-countup-duration="4s" data-kt-countup-value="" data-kt-initialized="1" id="total-cancel">0</div>

                        <div class="fw-semibold text-white">
                            Lịch xét nghiệm đã hủy
                        </div>
                    </div>
                    <!--end::Body-->
                </div>
                <!--end::Statistics Widget 5-->
            </div>
        </div>
        <!--begin::Row-->
        <div class="table-content">
            <!--begin::Col-->
            <!--begin::Wrapper-->
            <div class="d-flex flex-stack mb-5">
                <!--begin::Search-->
                <div class="d-flex align-items-center position-relative my-1">
                    <i class="ki-duotone ki-magnifier fs-1 position-absolute ms-6"><span class="path1"></span><span class="path2"></span></i>
                    <input type="search" data-kt-docs-table-filter="search" class="form-control form-control-solid w-250px ps-15" id="search-input" placeholder="Tìm kiếm" />
                </div>
                <!--end::Search-->
                @*                 <!--begin::Toolbar-->
                <div class="d-flex justify-content-end" data-kt-docs-table-toolbar="base">
                <!--begin::Filter-->
                <div class="card-toolbar">
                <div class="d-flex justify-content-end" data-kt-user-table-toolbar="base">

                <button type="button" class="btn btn-success mr-5 d-none" id="exportExcel" style="margin-right: 20px;">
                <span class="svg-icon svg-icon svg-icon-1 p-0">
                <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                <path opacity="0.3" d="M10 4H21C21.6 4 22 4.4 22 5V7H10V4Z" fill="currentColor" />
                <path opacity="0.3" d="M13 14.4V9C13 8.4 12.6 8 12 8C11.4 8 11 8.4 11 9V14.4H13Z" fill="currentColor" />
                <path d="M10.4 3.60001L12 6H21C21.6 6 22 6.4 22 7V19C22 19.6 21.6 20 21 20H3C2.4 20 2 19.6 2 19V4C2 3.4 2.4 3 3 3H9.20001C9.70001 3 10.2 3.20001 10.4 3.60001ZM13 14.4V9C13 8.4 12.6 8 12 8C11.4 8 11 8.4 11 9V14.4H8L11.3 17.7C11.7 18.1 12.3 18.1 12.7 17.7L16 14.4H13Z" fill="currentColor" />
                </svg>
                </span>Xuất Excel
                </button>

                <button type="button" class="btn btn-primary d-none" data-bs-toggle="tooltip" title="Tạo mới" onclick="editItem(0)">
                <i class="ki-duotone ki-plus fs-2"></i>
                Tạo mới
                </button>

                <button type="button" class="btn btn-secondary mr-5" data-bs-toggle="tooltip" id="booking-status-await" style="margin-right: 20px;">
                Chờ xác nhận
                </button>

                <button type="button" class="btn btn-secondary mr-5" data-bs-toggle="tooltip" id="booking-status-approve" style="margin-right: 20px;">
                Đã xác nhận
                </button>

                <button type="button" class="btn btn-secondary mr-5" data-bs-toggle="tooltip" id="booking-status-done" style="margin-right: 20px;">
                Hoàn thành
                </button>

                <button type="button" class="btn btn-secondary" data-bs-toggle="tooltip" id="booking-status-reject">
                Đã hủy
                </button>

                </div>
                </div>
                <!--end::Filter-->
                <!--begin::Add customer-->
                <!--end::Add customer-->
                </div>
                <!--end::Toolbar--> *@
                <!--begin::Group actions-->
                <div class="d-flex justify-content-end align-items-center d-none" data-kt-docs-table-toolbar="selected">
                    <div class="fw-bold me-5">
                        <span class="me-2" data-kt-docs-table-select="selected_count"></span> Selected
                    </div>

                    <button type="button" class="btn btn-danger" data-bs-toggle="tooltip" title="Coming Soon">
                        Selection Action
                    </button>
                </div>
                <!--end::Group actions-->
            </div>
            <!--end::Wrapper-->
            <!--begin::Datatable-->
            <table id="tableData" class="table table-hover table-rounded table-row-bordered gy-3 gs-3">
                <thead>
                    <tr class="fw-bold fs-6 text-gray-800">
                        <th>STT</th>
                        <th>Người đặt lịch</th>
                        <th>Loại</th>
                        <th>Trạng thái</th>
                        <th>Bác sỹ</th>
                        <th>Ngày khám</th>
                        <th>Thao tác</th>
                    </tr>
                </thead>
                <thead>
                    <tr class="fs-6">
                        <th></th>

                        <th>
                            <select class="form-select form-select-solid tableheaderFillter" id="filterAccountId" data-control="select2" data-placeholder="Chọn Tài khoản" data-allow-clear="true" multiple>
                            </select>
                        </th>

                        <th>
                            <select class="form-select form-select-solid tableheaderFillter" id="filterBookingTypeId" data-control="select2" data-placeholder="Chọn Loại booking" data-allow-clear="true" multiple>
                            </select>
                        </th>

                        <th>
                            <select class="form-select form-select-solid tableheaderFillter" id="filterBookingStatusId" data-control="select2" data-placeholder="Chọn Trạng thái booking" data-allow-clear="true" multiple>
                            </select>
                        </th>

                        <th>
                            <select class="form-select form-select-solid tableheaderFillter" id="filterCounselorId" data-control="select2" data-placeholder="Chọn Tài khoản" data-allow-clear="true" multiple>
                            </select>
                        </th>

                        <th>
                            <div class="input-group" id="filterCreatedTime" data-td-target-input="nearest" data-td-target-toggle="nearest">
                                <input id="filterCreatedTime_input" readonly type="text" class="form-control tableheaderFillter" data-td-target="#filterCreatedTime" />
                                <span class="input-group-text" title="Chọn" id="open-flatpickr" data-td-target="#filterCreatedTime">
                                    <i class="ki-duotone ki-calendar fs-2"><span class="path1"></span><span class="path2"></span></i>
                                </span>
                                <span class="input-group-text" id="clear-flatpickr" title="Xóa" data-clear="true" data-target="filterCreatedTime">
                                    <i class="ki-duotone ki-calendar-remove fs-2"><i class="path1"></i><i class="path2"></i><i class="path3"></i><i class="path4"></i><i class="path5"></i><i class="path6"></i></i>
                                </span>
                            </div>
                        </th>

                        <th class="text-center">
                            <div class="search-control">
                                <button class="btn btn-primary form-control mb-1" title="Tìm kiếm" id="btnTableSearch">
                                    <span class="svg-icon svg-icon svg-icon-1 svg_search_2 m-0">
                                        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                                            <path d="M21.7 18.9L18.6 15.8C17.9 16.9 16.9 17.9 15.8 18.6L18.9 21.7C19.3 22.1 19.9 22.1 20.3 21.7L21.7 20.3C22.1 19.9 22.1 19.3 21.7 18.9Z" fill="currentColor"></path>
                                            <path opacity="0.3" d="M11 20C6 20 2 16 2 11C2 6 6 2 11 2C16 2 20 6 20 11C20 16 16 20 11 20ZM11 4C7.1 4 4 7.1 4 11C4 14.9 7.1 18 11 18C14.9 18 18 14.9 18 11C18 7.1 14.9 4 11 4ZM8 11C8 9.3 9.3 8 11 8C11.6 8 12 7.6 12 7C12 6.4 11.6 6 11 6C8.2 6 6 8.2 6 11C6 11.6 6.4 12 7 12C7.6 12 8 11.6 8 11Z" fill="currentColor"></path>
                                        </svg>
                                    </span>
                                </button>
                                <button class="btn btn-secondary form-control" title="Reset" id="btnTableResetSearch">
                                    <span class="svg-icon svg-icon svg-icon-1 svg_cancel m-0">
                                        <svg width="32" height="32" viewBox="0 0 32 32" fill="none" xmlns="http://www.w3.org/2000/svg">
                                            <rect x="9.39844" y="20.7144" width="16" height="2.66667" rx="1.33333" transform="rotate(-45 9.39844 20.7144)" fill="currentColor"></rect>
                                            <rect x="11.2852" y="9.40039" width="16" height="2.66667" rx="1.33333" transform="rotate(45 11.2852 9.40039)" fill="currentColor"></rect>
                                        </svg>
                                    </span>
                                </button>
                            </div>
                        </th>
                    </tr>
                </thead>
                <tbody>
                </tbody>
                <tfoot>
                    <tr class="border-top fw-bold fs-6 text-gray-800">
                    </tr>
                </tfoot>
            </table>
            <!--end::Datatable-->
            <div class="modal fade" id="modal-id">
                <div class="modal-dialog modal-xl modal-dialog-scrollable">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h3 class="modal-title">Modal title</h3>

                            <!--begin::Close-->
                            <div class="btn btn-icon btn-sm btn-active-light-primary ms-2" data-bs-dismiss="modal" aria-label="Close">
                                <i class="ki-duotone ki-cross fs-1"><span class="path1"></span><span class="path2"></span></i>
                            </div>
                            <!--end::Close-->
                        </div>
                        <div class="modal-body">
                            <div>
                                <div class="row">

                                    <div class="col-md-4 mb-3 d-none">
                                        <span class="required fw-semibold fs-6 mb-2" id="basic-addon-photo">Tên</span>
                                        <input type="text" class="form-control mb-3 mb-lg-0 bs_max_length" id="booking-photo" aria-label="" />
                                    </div>

                                    <div class="col-sm-4 mb-3">
                                        <label class="required fw-semibold fs-6 mb-2" id="basic-addon-accountId">Người đặt lịch</label>
                                        <input type="text" class="form-control mb-3 mb-lg-0 bs_max_length mb-2" id="booking-accountName" aria-label="" readonly disabled />
                                        <input type="text" class="form-control mb-3 mb-lg-0 bs_max_length mb-2 d-none" id="booking-accountId" aria-label="" readonly disabled />
                                    </div>

                                    <div class="col-sm-4 mb-3">
                                        <div class="form-group">
                                            <div class="fv-plugins-icon-container">
                                                <label class="required fw-semibold fs-6 mb-2">Bác sỹ</label>
                                                <select class="form-select  dataSelect" id="booking-counselorId" data-placeholder="" aria-label="counselorId" aria-describedby="basic-addon-counselorId">
                                                </select>
                                            </div>
                                        </div>
                                        <script>
                                            var accountDataDoctor = [];
                                            async function loadDataSelectDoctorAccount() {
                                                await $.ajax({
                                                    url: systemURL + 'Doctors/api/list',
                                                    type: 'GET',
                                                    async: 'true',
                                                    contentType: 'application/json',
                                                    beforeSend: function (xhr) {
                                                        if (localStorage.token) {
                                                            xhr.setRequestHeader('Authorization', 'Bearer ' + localStorage.token);
                                                        }
                                                    },
                                                    success: function (responseData) {
                                                        var data = responseData.data
                                                        accountDataDoctor = data;
                                                    },
                                                    error: function (e) {
                                                    }
                                                });
                                            }
                                            $(document).ready(function () {
                                                loadDataSelectDoctorAccount();
                                                $.when(loadDataSelectDoctorAccount()).done(function () {
                                                    $("#filterAccountId").select2();

                                                    accountDataDoctor.forEach(function (item) {
                                                        //$('#booking-accountId').append(new Option(item.name, item.id, false, false)).trigger('change');
                                                        $('#booking-counselorId').append(new Option(item.name, item.id, false, false)).trigger('change');
                                                        $('#filterCounselorId').append(new Option(item.name, item.id, false, false));

                                                    })

                                                });
                                            });
                                        </script>
                                    </div>

                                    <div class="col-sm-4 mb-3">
                                        <div class="form-group">
                                            <div class="fv-plugins-icon-container">
                                                <label class="required fw-semibold fs-6 mb-2">Trạng thái đặt lịch</label>
                                                <select class="form-select  dataSelect" id="booking-bookingStatusId" data-placeholder="">
                                                </select>
                                            </div>
                                        </div>
                                        <script>
                                            var bookingStatusData = [];
                                            async function loadDataSelectBookingStatus() {
                                                await $.ajax({
                                                    url: systemURL + 'bookingStatus/api/list',
                                                    type: 'GET',
                                                    async: 'true',
                                                    contentType: 'application/json',
                                                    success: function (responseData) {
                                                        // debugger;
                                                        var data = responseData.data;
                                                        bookingStatusData = data;
                                                    },
                                                    error: function (e) {
                                                        //console.log(e.message);
                                                    }
                                                });
                                            }
                                            loadDataSelectBookingStatus();
                                            $(document).ready(function () {
                                                $.when(loadDataSelectBookingStatus()).done(function () {
                                                    $("#filterBookingStatusId").select2();
                                                    bookingStatusData.forEach(function (item) {
                                                        $('#booking-bookingStatusId').append(new Option(item.name, item.id, false, false)).trigger('change');
                                                        $('#filterBookingStatusId').append(new Option(item.name, item.id, false, false));
                                                        $("#booking-bookingStatusId").select2({
                                                            dropdownParent: $("#modal-id"),
                                                            data: item
                                                        });
                                                    })
                                                });
                                            });
                                        </script>
                                    </div>

                                    <div class="col-sm-6 d-none">
                                        <div class="form-group">
                                            <div class="input-group input-group-solid mb-3">
                                                <span class="input-group-text" id="basic-addon-id">Mã</span>
                                                <input readonly type="number" autocomplete="off" class="form-control input-id" id="booking-id" placeholder="id" aria-label="id" aria-describedby="basic-addon-id" />
                                            </div>
                                        </div>
                                    </div>


                                    <div class="col-sm-4 mb-3">
                                        <div class="form-group">
                                            <div class="fv-plugins-icon-container">
                                                <label class="required fw-semibold fs-6 mb-2">Loại đặt lịch</label>
                                                <select class="form-select  dataSelect" id="booking-bookingTypeId" data-placeholder="" disabled readonly>
                                                </select>
                                            </div>
                                        </div>
                                        <script>
                                            var bookingTypeData = [];
                                            async function loadDataSelectBookingType() {
                                                await $.ajax({
                                                    url: systemURL + 'bookingType/api/list',
                                                    type: 'GET',
                                                    async: 'true',
                                                    contentType: 'application/json',
                                                    success: function (responseData) {
                                                        // debugger;
                                                        var data = responseData.data;
                                                        bookingTypeData = data;
                                                    },
                                                    error: function (e) {
                                                        //console.log(e.message);
                                                    }
                                                });
                                            }
                                            loadDataSelectBookingType();
                                            $(document).ready(function () {
                                                $.when(loadDataSelectBookingType()).done(function () {
                                                    $("#filterBookingTypeId").select2();
                                                    bookingTypeData.forEach(function (item) {
                                                        $('#booking-bookingTypeId').append(new Option(item.name, item.id, false, false)).trigger('change');
                                                        //$('#booking-type').append(new Option(item.name, item.id, false, false)).trigger('change');
                                                        $('#filterBookingTypeId').append(new Option(item.name, item.id, false, false));
                                                        $("#booking-bookingTypeId").select2({
                                                            dropdownParent: $("#modal-id"),
                                                            data: item
                                                        });
                                                    })
                                                });
                                            });
                                        </script>
                                    </div>


                                    <div class="col-sm-4" style="display:none;">
                                        <div class="form-group">
                                            <div class="input-group input-group-solid mb-3">
                                                <span class="input-group-text" id="basic-addon-active">Kích hoạt</span>
                                                <input readonly type="number" autocomplete="off" class="form-control input-active" id="booking-active" placeholder="active" aria-label="active" aria-describedby="basic-addon-active" />
                                            </div>
                                        </div>
                                    </div>

                                    <div class="col-sm-4 d-none">
                                        <span class="required fw-semibold fs-6 mb-2" id="basic-addon-name">Tên</span>
                                        <input type="text" class="form-control mb-3 mb-lg-0 bs_max_length" id="booking-name" aria-label="" />
                                    </div>

                                    <div class="col-sm-2 mb-3">
                                        <label class="fw-semibold fs-6 mb-2" id="basic-addon-url">Số điện thoại bệnh nhân</label>
                                        <input type="text" class="form-control mb-3 mb-lg-0 bs_max_length" id="booking-url" aria-label="" disabled readonly />
                                    </div>

                                    <div class="col-sm-6 mb-3" id="row-address">
                                        <label class="fw-semibold fs-6 mb-2" id="basic-addon-address">Địa chỉ khám</label>
                                        <input type="text" class="form-control mb-3 mb-lg-0 bs_max_length" id="booking-address" aria-label="" disabled readonly />
                                    </div>

                                    <div class="col-sm-12 mb-3">
                                        <span class="fw-semibold fs-6 mb-2" id="basic-addon-description">Các lưu ý của người đặt lịch</span>
                                        <textarea class="form-control" rows="1" id="booking-info" data-kt-autosize="true" disabled readonly></textarea>
                                    </div>

                                    <div class="col-sm-4 mb-3">
                                        <label class="required fw-semibold fs-6 mb-2" id="basic-addon-startTime">Thời gian bắt đầu</label>
                                        <div class='date datetimepicker  input-startTime' id='booking-startTimeDiv' style='padding:0px;'>
                                            <input type='text' autocomplete="off" id="booking-startTime" required class="form-control datepicker" aria-label="startTime" aria-describedby="basic-addon-startTime" />
                                            <span class="input-group-addon">
                                                <span class="glyphicon glyphicon-calendar"></span>
                                                <span class="path1"></span>
                                            </span>
                                        </div>
                                    </div>

                                    <div class="col-sm-4 mb-3">
                                        <label class="fw-semibold fs-6 mb-2" id="basic-addon-endTime">Thời gian kết thúc</label>
                                        <div class='date datetimepicker  input-endTime' id='booking-endTimeDiv' style='padding:0px;'>
                                            <input type='text' autocomplete="off" id="booking-endTime" class="form-control datepicker" aria-label="endTime" aria-describedby="basic-addon-endTime" />
                                            <span class="input-group-addon">
                                                <span class="glyphicon glyphicon-calendar"></span>
                                                <span class="path1"></span>
                                            </span>
                                        </div>
                                    </div>

                                    <div class="col-sm-4 mb-3">
                                        <label class="fw-semibold fs-6 mb-2">Ngày tạo</label>
                                        <input type="text" id="booking-createdTime" class="form-control  mb-3 mb-lg-0" placeholder="" value="" readonly disabled>
                                    </div>
                                    <div class="col-sm-12 mb-3">
                                        <div class="flex-btn-function">
                                            <label class="n-m required fw-semibold fs-6 mb-2">Thông số xét nghiệm</label> <button id="btn-add-consultant" class="btn btn-primary">Thêm chỉ số</button>
                                        </div>
                                        <div class="module-add-consultant">
                                            <div id="content-add-consultant">
                                                <div class="div-consultant-reason">
                                                    <label class="required fw-semibold fs-6 mb-2">Danh mục khám</label>
                                                    <input type="text" id="consultant-reason" class="form-control  mb-3 mb-lg-0" placeholder="" value="">
                                                </div>
                                                <div>
                                                    <label class="fw-semibold fs-6 mb-2">Kết quả</label>
                                                    <input type="text" id="consultant-result" class="form-control  mb-3 mb-lg-0" placeholder="" value="">
                                                </div>
                                                <div>
                                                    <label class="fw-semibold fs-6 mb-2">Đơn vị</label>
                                                    <input type="text" id="consultant-symptom" class="form-control  mb-3 mb-lg-0" placeholder="" value="">
                                                </div>
                                                <div>
                                                    <label class="fw-semibold fs-6 mb-2">CS bình thường</label>
                                                    <input type="text" id="consultant-plan" class="form-control  mb-3 mb-lg-0" placeholder="" value="">
                                                </div>
                                                <div class="div-consultant-review">
                                                    <label class="fw-semibold fs-6 mb-2">Ghi chú</label>
                                                    <input type="text" id="consultant-review" class="form-control  mb-3 mb-lg-0" placeholder="" value="">
                                                </div>
                                                <div class="div-consultant-rating">
                                                    <label class="fw-semibold fs-6 mb-2">Đơn giá</label>
                                                    <input type="text" id="consultant-rating" class="form-control  mb-3 mb-lg-0" placeholder="" value="">
                                                </div>
                                            </div>
                                            <div class="btn-add-consultant">
                                                <button class="btn btn-primary" style="padding: 5px 20px" onclick="AddOrUpdateConsultant()">Lưu</button>
                                                <button class="btn btn-danger" style="padding: 5px 20px" onclick="CloseAddConsultant()">Hủy</button>
                                            </div>
                                        </div>
                                        <table id="table-result-tb">
                                            <thead>
                                                <tr>
                                                    <th>Danh mục khám</th>
                                                    <th>Kết quả</th>
                                                    <th>Đơn vị</th>
                                                    <th>CS bình thường</th>
                                                    <th>Ghi chú</th>
                                                    <th>Đơn giá</th>
                                                    <th>Thao tác</th>
                                                </tr>
                                            </thead>
                                            <tbody class="body-colsultant">
                                            </tbody>
                                        </table>
                                    </div>
                                    <div class="col-sm-12 mb-3">
                                        <label class="fw-semibold fs-6 mb-2">Tư vấn của bác sĩ:</label>
                                        <textarea type="text" id="booking-guide" class="form-control  mb-3 mb-lg-0" placeholder="" value=""></textarea>
                                    </div>
                                    <div class="col-sm-12" id="row-reason">
                                        <label class="fw-semibold fs-6 mb-2">Lý do từ chối hoặc hủy lịch</label>
                                        <input type="text" id="booking-reason" class="form-control  mb-3 mb-lg-0" placeholder="" value="" readonly disabled>
                                    </div>
                                </div>

                            </div>
                        </div>
                        <div class="modal-footer sticky-action">
                            <button type="button" class="btn btn-primary" data-bs-dismiss="modal" id="btnUpdate">Cập nhật</button>
                            <button type="button" class="btn btn-success" data-bs-dismiss="modal" id="btnAccept">Xét duyệt</button>
                            <button type="button" class="btn btn-primary" data-bs-dismiss="modal" id="btnDone">Hoàn thành</button>
                            <button type="button" class="btn btn-danger" data-bs-dismiss="modal" id="btnReject">Từ chối</button>
                            <button type="button" class="btn btn-danger" data-bs-dismiss="modal" id="btnCancel">Hủy</button>

                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Đóng</button>
                            <button type="button" class="btn btn-primary" id="btnUpdateItem">Đặt lại lịch</button>
                        </div>
                    </div>
                </div>
            </div>
            <!--begin:load data survey history-->
            <div class="modal fade" id="modal-id-survey-history">
                <div class="modal-dialog modal-xl modal-dialog-scrollable">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h3 class="modal-title" id="title-survey-history">Danh sách bài trắc nhiệm SKTT</h3>
                            <!--begin::Close-->
                            <div class="btn btn-icon btn-sm btn-active-light-primary ms-2" data-bs-dismiss="modal" aria-label="Close">
                                <i class="ki-duotone ki-cross fs-1"><span class="path1"></span><span class="path2"></span></i>
                            </div>
                            <!--end::Close-->
                        </div>
                        <div class="modal-body">
                            <table id="tableDataSurveyHistory" class="table table-hover table-rounded table-row-bordered gy-3 gs-3">
                                <thead>
                                    <tr class="fw-bold fs-6 text-gray-800">
                                        <th>STT</th>
                                        <th>Bài trắc nghiệm</th>
                                        <th>Kết quả trắc nghiệm</th>
                                        <th>Ngày làm trắc nhiệm</th>
                                        <th>Thao tác</th>
                                    </tr>
                                </thead>
                                <thead>
                                    <tr class="fs-6">
                                        <th></th>
                                        <th>
                                            <select class="form-select tableheaderFillter" id="filterSurveyId" data-control="select2" data-placeholder="" data-allow-clear="true" multiple>
                                            </select>
                                        </th>
                                        <th><input type="text" class="form-control tableheaderFillter" /></th>
                                        <th>
                                            <div class="input-group" id="filterCreatedTimeSurveyHistory" data-td-target-input="nearest" data-td-target-toggle="nearest">
                                                <input id="filterCreatedTimeSurveyHistory_input" readonly type="text" class="form-control tableheaderFillter" data-td-target="#filterCreatedTimeSurveyHistory" />
                                                <span class="input-group-text" title="Chọn" id="open-flatpickr-surveyHistory" data-td-target="#filterCreatedTime">
                                                    <i class="ki-duotone ki-calendar fs-2"><span class="path1"></span><span class="path2"></span></i>
                                                </span>
                                                <span class="input-group-text" id="clear-flatpickr-surveyHistory" title="Xóa" data-clear="true" data-target="filterCreatedTimeSurveyHistory">
                                                    <i class="ki-duotone ki-calendar-remove fs-2"><i class="path1"></i><i class="path2"></i><i class="path3"></i><i class="path4"></i><i class="path5"></i><i class="path6"></i></i>
                                                </span>
                                            </div>
                                        </th>

                                        <th class="text-center">
                                            <div class="search-control">
                                                <button class="btn btn-primary form-control mb-1" title="Tìm kiếm" id="btnTableSearchSurveyHistory">
                                                    <span class="svg-icon svg-icon svg-icon-1 svg_search_2 m-0">
                                                        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                                                            <path d="M21.7 18.9L18.6 15.8C17.9 16.9 16.9 17.9 15.8 18.6L18.9 21.7C19.3 22.1 19.9 22.1 20.3 21.7L21.7 20.3C22.1 19.9 22.1 19.3 21.7 18.9Z" fill="currentColor"></path>
                                                            <path opacity="0.3" d="M11 20C6 20 2 16 2 11C2 6 6 2 11 2C16 2 20 6 20 11C20 16 16 20 11 20ZM11 4C7.1 4 4 7.1 4 11C4 14.9 7.1 18 11 18C14.9 18 18 14.9 18 11C18 7.1 14.9 4 11 4ZM8 11C8 9.3 9.3 8 11 8C11.6 8 12 7.6 12 7C12 6.4 11.6 6 11 6C8.2 6 6 8.2 6 11C6 11.6 6.4 12 7 12C7.6 12 8 11.6 8 11Z" fill="currentColor"></path>
                                                        </svg>
                                                    </span>
                                                </button>
                                                <button class="btn btn-secondary form-control" title="Reset" id="btnTableResetSearchSurveyHistory">
                                                    <span class="svg-icon svg-icon svg-icon-1 svg_cancel m-0">
                                                        <svg width="32" height="32" viewBox="0 0 32 32" fill="none" xmlns="http://www.w3.org/2000/svg">
                                                            <rect x="9.39844" y="20.7144" width="16" height="2.66667" rx="1.33333" transform="rotate(-45 9.39844 20.7144)" fill="currentColor"></rect>
                                                            <rect x="11.2852" y="9.40039" width="16" height="2.66667" rx="1.33333" transform="rotate(45 11.2852 9.40039)" fill="currentColor"></rect>
                                                        </svg>
                                                    </span>
                                                </button>
                                            </div>
                                        </th>
                                    </tr>
                                </thead>
                                <tbody>
                                </tbody>
                                <tfoot>
                                    <tr class="border-top fw-bold fs-6 text-gray-800">
                                    </tr>
                                </tfoot>
                            </table>
                        </div>
                        <div class="modal-footer sticky-action justify-content-center">
                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Đóng</button>
                        </div>
                    </div>
                </div>
            </div>
            <!--end:load data survey history-->
            <!--end::Datatable-->
            <div class="modal fade" id="modal-id-detail-survey" data-bs-backdrop="static">
                <div class="modal-dialog modal-xxl modal-dialog-centered">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h3 class="modal-title" id="defaultModalTitle">Modal title</h3>

                            <!--begin::Close-->
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>

                            <!--end::Close-->
                        </div>
                        <div class="modal-body">
                            <form action="#">
                                <div class="row">

                                    <div class="col-sm-6 d-none">
                                        <div class="form-group">
                                            <div class="input-group input-group-solid mb-5">
                                                <span class="input-group-text" id="basic-addon-id">Mã</span>
                                                <input readonly type="number" autocomplete="off" class="form-control input-id" id="surveyAccount-id" placeholder="id" aria-label="id" aria-describedby="basic-addon-id" />
                                            </div>
                                        </div>
                                    </div>

                                    <div class="col-md-4 mb-7">
                                        <div class="form-group">
                                            <div class="fv-plugins-icon-container">
                                                <label class="fw-semibold fs-6 mb-2">Tài khoản</label>
                                                <select class="form-select  dataSelect" id="surveyAccount-accountId" data-placeholder="" readonly disabled>
                                                </select>
                                            </div>
                                        </div>
                                        <script>
                                            var accountData = [];
                                            async function loadDataSelectAccount() {
                                                await $.ajax({
                                                    url: systemURL + 'account/api/list',
                                                    type: 'GET',
                                                    async: 'true',
                                                    contentType: 'application/json',
                                                    success: function (responseData) {
                                                        //console.log(new Date().getSeconds() + ':' + new Date().getMilliseconds() + ' - loaded account');
                                                        // debugger;
                                                        var data = responseData.data;
                                                        accountData = data;
                                                    },
                                                    error: function (e) {
                                                        //console.log(e.message);
                                                    }
                                                });
                                            }
                                            $(document).ready(function () {
                                                loadDataSelectAccount();
                                                $.when(loadDataSelectAccount()).done(function () {
                                                    accountData.forEach(function (item) {
                                                        $('#surveyAccount-accountId').append(new Option(item.name, item.id, false, false)).trigger('change');
                                                    })
                                                });
                                            });
                                        </script>
                                    </div>

                                    <div class="col-md-8 mb-7">
                                        <div class="form-group">
                                            <div class="fv-plugins-icon-container">
                                                <label class="fw-semibold fs-6 mb-2">Bài khảo sát</label>
                                                <select class="form-select  dataSelect" id="surveyAccount-surveyId" data-placeholder="" readonly disabled>
                                                </select>
                                            </div>
                                        </div>
                                        <script>
                                            var surveyData = [];
                                            async function loadDataSelectSurvey() {
                                                await $.ajax({
                                                    url: systemURL + 'survey/api/list',
                                                    type: 'GET',
                                                    async: 'true',
                                                    contentType: 'application/json',
                                                    success: function (responseData) {
                                                        //console.log(new Date().getSeconds() + ':' + new Date().getMilliseconds() + ' - loaded account');
                                                        // debugger;
                                                        var data = responseData.data;
                                                        surveyData = data;
                                                    },
                                                    error: function (e) {
                                                        //console.log(e.message);
                                                    }
                                                });
                                            }
                                            $(document).ready(function () {
                                                loadDataSelectSurvey();
                                                $.when(loadDataSelectSurvey()).done(function () {
                                                    surveyData.forEach(function (item) {
                                                        $('#surveyAccount-surveyId').append(new Option(item.name, item.id, false, false)).trigger('change');
                                                    })
                                                });
                                            });
                                        </script>
                                    </div>

                                    <div class="col-sm-6" style="display:none;">
                                        <div class="form-group">
                                            <div class="input-group input-group-solid mb-5">
                                                <span class="input-group-text" id="basic-addon-active">Kích hoạt</span>
                                                <input readonly type="number" autocomplete="off" class="form-control input-active" id="surveyAccount-active" placeholder="active" aria-label="active" aria-describedby="basic-addon-active" />
                                            </div>
                                        </div>
                                    </div>

                                    <div class="col-md-4 mb-7">
                                        <label class="form-lable" for="score">
                                            Kết quả đánh giá
                                        </label>
                                        <input type="text" class="form-control" id="surveyAccount-score" readonly disabled />

                                    </div>

                                    <div class="col-md-4 mb-7 fv-plugins-icon-container">
                                        <label class="">Ngày bắt đầu</label>
                                        <input type="text" id="surveyAccount-startDate" class="form-control  mb-3 mb-lg-0" placeholder="" value="" readonly disabled>
                                    </div>

                                    <div class="col-md-4 mb-7 fv-plugins-icon-container">
                                        <label class="">Ngày tạo</label>
                                        <input type="text" id="surveyAccount-createdTime" class="form-control  mb-3 mb-lg-0" placeholder="" value="" readonly disabled>
                                    </div>

                                    <div class="col-md-12 mb-7">
                                        <label class="form-lable" for="description">
                                            Mô tả
                                        </label>
                                        <textarea class="form-control" id="surveyAccount-description" data-kt-autosize="true" readonly disabled></textarea>
                                    </div>

                                </div>

                            </form>
                        </div>
                        <iframe id="myIframe" src="" height="500" width="100%"></iframe>


                        <div class="modal-footer sticky-action justify-content-center">
                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Đóng</button>
                            @*<button type="button" class="btn btn-primary" id="btnUpdateItem">Lưu</button>*@
                        </div>
                    </div>
                </div>
            </div>
            <!--end::Col-->
        </div>
    </div>
    <!--end::Content container-->
</div>
<div class="modal  fade" id="reason-cancel-booking">
    <div class="modal-dialog modal-ml modal-dialog-centered">
        <div class="modal-content shadow-lg">
            <div class="modal-header">
                <h3 class="modal-title">Lý do hủy lịch</h3>

                <!--begin::Close-->
                <div class="btn btn-icon btn-sm btn-active-light-primary ms-2" data-bs-dismiss="modal" aria-label="Close">
                    <i class="icon-close"><span class="path1"></span><span class="path2"></span></i>
                </div>
                <!--end::Close-->
            </div>
            <div class="modal-body">
                <form action="#">
                    <div class="row">
                        <div class="col-sm-12">
                            <div class="form-group">
                                <input type="text" class="form-control mb-3 d-none" id="status-reason" aria-label="" disabled />
                                <textarea type="text" id="reason_cancel" class="form-control  input-description" placeholder="Nhập lý do ..." data-kt-autosize="true" value=""></textarea>
                            </div>
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer sticky-action justify-content-center">
                <button type="button" class="btn btnHS  btn-secondary" id="close-modal" data-bs-dismiss="modal">Đóng</button>
                <button type="button" class="btn btnHS  btn-primary" id="btnUpdateReason">Xác nhận</button>
            </div>
        </div>
    </div>
</div>
<div id="loading">
    <div class="lds-ring"><div></div><div></div><div></div><div></div></div>
</div>
<script>
    var accountIdGetLog = @ViewBag.accountIdGetLog;
    var roleIdGetLog = @ViewBag.roleIdGetLog;
</script>
<!--begin:Base load data-->
<script>
    var consultantData = [];
    var consultantId = 0;
    var addConsultant = 0;
    var bookingStatusId = 0;
    var currentDoctorId = 0;
    var showItemListConsultant = ["implementation", "reason", "form", "consultingTime", "createdTime"];
    var dataSourceConsultant = [];
    var tableConsultant;
    var showItem = ['id', 'surveyId', 'score', 'name', 'text', 'createdTime'];
    var dataSource = [];
    var updatingItemId = 0;
    var editObj;
    var tableUpdating = 0;
    var table;
    var tableSurveyHistory;
    var consultantId = 0;
    var currentBookingStatusId = 0;
    const submitButton = document.getElementById('btnUpdateItem');
    const buttonConsultant = document.getElementById('btnUpdateConsultant')
    submitButton.addEventListener('click', function (e) {
        e.preventDefault();
        updatingItemId = 0;
        submitButton.setAttribute('data-kt-indicator', 'on');
        validate(@BookingStatusId.WAIT);
    });

    function LoadTableConsultant() {
        if (dataSourceConsultant.length == 0) {
            $("#tableDataListConsultant thead").html("");
            $("#tableDataListConsultant tbody").html(`<div class="not-found d-flex flex-column align-items-center">
                                                    <img style="width:400px;height:auto;" src="/images/default/not-found.png"/>
                                                    <p>Chưa có dữ liệu hiển thị</p>
                                                </div>`);
        }
        else {
            $("#tableDataListConsultant thead").html("");
            $("#tableDataListConsultant thead").html(`<tr class="fw-bold fs-6 text-gray-800">
                                                                            <th>STT</th>
                                                                            <th>Bác sỹ</th>
                                                                            <th>Lý do khám</th>
                                                                            <th>Hình thức khám</th>
                                                                            <th>Thời gian khám</th>
                                                                            <th>Ngày tạo</th>
                                                                            <th>Thao tác</th>
                                                                        </tr>`);
            var index = 0;
            $("#tableDataListConsultant tbody").html("");
            dataSourceConsultant.forEach(function (item, index) {
                var rowContent = "<tr>";
                rowContent += "<td style='text-align: center;'>" + (index + 1) + "</td>";
                showItemListConsultant.forEach(function (key) {
                    if (item[key]) {
                        if (key == "createdTime") {
                            rowContent += "<td class='row-" + item.id + "-column column-" + key + "' property='" + key + "'>" + moment(item[key], "YYYY-MM-DD hh:mm:ss").format("DD/MM/YYYY hh:mm:ss") + "</td>"
                        }

                        else {
                            rowContent += "<td class='row" + item.id + "-column column-" + key + "' property='" + key + "'>" + item[key] + "</td>";
                        }
                    }
                    else {
                        rowContent += "<td class='row" + item.id + "-column column-" + key + "' property='" + key + "'>" + "</td>";
                    }
                })
                rowContent += "<td class='row" + item.id + "-column column-' property=''>"
                    + "<div class='d-flex justify-content-center'>";
                rowContent += "<a title='Chi tiết' onclick='detailItem(" + item.bookingId + ")' class='me-2 btn_manage'><span class='svg-icon-success svg-icon  svg-icon-1 svg_teh009'><span class='svg-icon-primary svg-icon  svg-icon-1'> <svg width='24' height='24' viewBox='0 0 24 24' fill='none' xmlns='http://www.w3.org/2000/svg'><path opacity='0.3' fill-rule='evenodd' clip-rule='evenodd' d='M2 4.63158C2 3.1782 3.1782 2 4.63158 2H13.47C14.0155 2 14.278 2.66919 13.8778 3.04006L12.4556 4.35821C11.9009 4.87228 11.1726 5.15789 10.4163 5.15789H7.1579C6.05333 5.15789 5.15789 6.05333 5.15789 7.1579V16.8421C5.15789 17.9467 6.05333 18.8421 7.1579 18.8421H16.8421C17.9467 18.8421 18.8421 17.9467 18.8421 16.8421V13.7518C18.8421 12.927 19.1817 12.1387 19.7809 11.572L20.9878 10.4308C21.3703 10.0691 22 10.3403 22 10.8668V19.3684C22 20.8218 20.8218 22 19.3684 22H4.63158C3.1782 22 2 20.8218 2 19.3684V4.63158Z' fill='currentColor'></path><path d='M10.9256 11.1882C10.5351 10.7977 10.5351 10.1645 10.9256 9.77397L18.0669 2.6327C18.8479 1.85165 20.1143 1.85165 20.8953 2.6327L21.3665 3.10391C22.1476 3.88496 22.1476 5.15129 21.3665 5.93234L14.2252 13.0736C13.8347 13.4641 13.2016 13.4641 12.811 13.0736L10.9256 11.1882Z' fill='currentColor'></path><path d='M8.82343 12.0064L8.08852 14.3348C7.8655 15.0414 8.46151 15.7366 9.19388 15.6242L11.8974 15.2092C12.4642 15.1222 12.6916 14.4278 12.2861 14.0223L9.98595 11.7221C9.61452 11.3507 8.98154 11.5055 8.82343 12.0064Z' fill='currentColor'></path></svg></span></span></a>"

                rowContent += "</div></td ></tr>";
                $(rowContent).appendTo($("#tableDataListConsultant tbody"));
            })
        }
    }

    async function loadDataConsultant(accountId, BookingId) {
        //var newId = accountIdAndBookingId.split(",");
        var accountIdConsultant = accountId;
        var bookingIdConsultant = BookingId;
        var consultingDetail = await getItemConsultantByBookingId(BookingId);
        $("#btnAddConsultant").html("Đánh giá của buổi khám này");
        $(".tableheaderFillter").val(null).trigger("change");//clear select default data fillter in table header
        //$("#modal-id-list-consultant").modal('show');
        $("#title-list-consultant").text('Danh sách phiếu đánh giá');
        $("#bookingId-to-add-consultant").val(bookingIdConsultant);
        $.ajax({
            url: systemURL + "consultant/api/ListConsultantByAccountId/" + accountIdConsultant,
            type: "GET",
            contentType: "application/json",
            success: function (responseData) {
                dataSourceConsultant = responseData.data[0];
                LoadTableConsultant();
            },
            error: function (e) {
                LoadTableConsultant();
                initTableConsultant();
            }
        });
    }

    function initTableConsultant() {
        tableConsultant = $('#tableDataListConsultant').DataTable({
            language: systemConfig.languageDataTable,
            searching: {
                regex: true
            },
            aLengthMenu: [
                [10, 25, 50, 100, -1],
                [10, 25, 50, 100, 'Tất cả']
            ],
            columnDefs: [
                { targets: "no-sort", orderable: false },
                { targets: [4], orderable: false },
                { targets: "no-search", searchable: false },
                { orderable: false, targets: [0] },
                {
                    targets: "trim",
                    render: function (data, type, full, meta) {
                        if (type === "display") {
                            data = strtrunc(data, 10);
                        }
                        return data;
                    }
                },
                { targets: "date-type", type: "date-eu" },
                { orderable: false, targets: [-1], className: "column_action" },
                { targets: [0], className: "column_index" },
                { targets: [5], className: "column_date" },
            ],
            drawCallback: function () {
                $('#tableDataListConsultant tfoot').html("");
                $("#tableDataListConsultant thead:nth-child(1) tr").clone(true).appendTo("#tableDataListConsultant tfoot");
                $("#tableDataListConsultant th.column_index").removeClass('sorting sorting_asc sorting_desc');
            }
        });
    }

    function detailItem(id) {
        //window.location.href = "/Consultant/Share/DetailConsultant/" + id + '_blank';
        //var url = "/Consultant/Share/DetailConsultant/" + id;
        //window.open(url, '_blank');
        consultantItem(id);
    }

    $("#btnAddConsultant").click(function () {
        consultantItem($("#bookingId-to-add-consultant").val());
        //$("#btnUpdateItem").removeClass('d-none');
    });

    //Huydq
    //Start----Sự kiện cập nhật trạng thái cho booking
    //Khi ấn nút xác nhận
    $("#btnAccept").click(function () {
        validate(@BookingStatusId.CONFIRM);
        console.log("Button accept clicked!");

    });

    $("#btnUpdate").click(function () {
        validate($("#booking-bookingStatusId").val());
        console.log("Button accept clicked!");
    });
    //Khi ấn nút hoàn thành
    $("#btnDone").click(function () {
        validate(@BookingStatusId.SUCCESS);
        console.log("Button done clicked!");
    });
    //Khi ấn nút từ chối
    $("#btnReject").click(function () {
        $("#reason-cancel-booking").modal('show');
        $("#reason_cancel").val('');
        $(".modal-title").text("Lý do từ chối lịch hẹn khám của " + $("#booking-accountName").val());
        $("#status-reason").val(@BookingStatusId.REJECT)
        //validate(@BookingStatusId.REJECT);
        //console.log("Button reject clicked!");
    });
    //Khi ấn nút hủy
    $("#btnCancel").click(function () {
        $("#reason-cancel-booking").modal('show');
        $("#reason_cancel").val('');
        $(".modal-title").text("Lý do hủy lịch hẹn khám của " + $("#booking-accountName").val());
        $("#status-reason").val(@BookingStatusId.CANCEL)
        //validate(@BookingStatusId.REJECT);
        //console.log("Button cancel clicked!");
    });
    //Khi ấn lưu lý do từ chối hoặc hủy lịch hẹn
    $("#btnUpdateReason").click(function () {
        if ($("#reason_cancel").val().trim() == "" || $("#reason_cancel").val() == null) {
            Swal.fire({
                html: 'Chưa có lý do, vui lòng thử lại!',
                icon: 'error'
            });
        }
        else {
            if ($("#status-reason").val() == @BookingStatusId.REJECT) {
                validate(@BookingStatusId.REJECT);
            }
            else {
                validate(@BookingStatusId.CANCEL);
            }
        }
    });
    //End------Sự kiện cập nhật trạng thái cho booking
    function filterStatus(bookingStatus) {
        $("#filterBookingStatusId").val(bookingStatus);
        tableSearch();
    }
    // $("#booking-status-approve").click(function() {
    //     $("#booking-status-approve").removeClass('btn-secondary');
    //     $("#booking-status-approve").addClass('btn-success');

    //     $("#booking-status-reject").addClass('btn-secondary');
    //     $("#booking-status-reject").removeClass('btn-danger');
    //     $("#booking-status-done").addClass('btn-secondary');
    //     $("#booking-status-done").removeClass('btn-primary');
    //     $("#booking-status-await").addClass('btn-secondary');
    //     $("#booking-status-await").removeClass('btn-warning');

    //     $("#filterBookingStatusId").val(@BookingStatusId.ACCEPT)
    //     tableSearch();
    // });

    // $("#booking-status-reject").click(function() {
    //     $("#booking-status-reject").removeClass('btn-secondary');
    //     $("#booking-status-reject").addClass('btn-danger');

    //     $("#booking-status-approve").addClass('btn-secondary');
    //     $("#booking-status-approve").removeClass('btn-success');
    //     $("#booking-status-done").addClass('btn-secondary');
    //     $("#booking-status-done").removeClass('btn-primary');
    //     $("#booking-status-await").addClass('btn-secondary');
    //     $("#booking-status-await").removeClass('btn-warning');

    //     $("#filterBookingStatusId").val(@BookingStatusId.CANCEL)
    //     tableSearch();
    // });

    // $("#booking-status-done").click(function() {
    //     $("#booking-status-done").removeClass('btn-secondary');
    //     $("#booking-status-done").addClass('btn-primary');

    //     $("#booking-status-approve").addClass('btn-secondary');
    //     $("#booking-status-approve").removeClass('btn-success');
    //     $("#booking-status-reject").addClass('btn-secondary');
    //     $("#booking-status-reject").removeClass('btn-danger');
    //     $("#booking-status-await").addClass('btn-secondary');
    //     $("#booking-status-await").removeClass('btn-warning');

    //     $("#filterBookingStatusId").val(@BookingStatusId.SUCCESS)
    //     tableSearch();
    // });

    // $("#booking-status-await").click(function() {
    //     $("#booking-status-await").removeClass('btn-secondary');
    //     $("#booking-status-await").addClass('btn-warning');

    //     $("#booking-status-approve").addClass('btn-secondary');
    //     $("#booking-status-approve").removeClass('btn-success');
    //     $("#booking-status-reject").addClass('btn-secondary');
    //     $("#booking-status-reject").removeClass('btn-danger');
    //     $("#booking-status-done").addClass('btn-secondary');
    //     $("#booking-status-done").removeClass('btn-primary');

    //     $("#filterBookingStatusId").val(@BookingStatusId.WAIT)
    //     tableSearch();
    // });

    $(document).ready(function () {
        $("#consultant-rating").on("input change", function (e) {
            formatCurrencyValue($(this));
        })

        $("#btn-add-consultant").on("click", function () {
            $(".module-add-consultant").show();
            addConsultant = 1;
        })
        // $("#table-result-tb").DataTable({
        //     "oLanguage": {
        //         "sUrl": "/js/Vietnamese.json"
        //     }
        // });
        getCountStatics();
        // Load data
        loadData();

        // Datetime picker
        document.querySelectorAll(".datepicker").forEach(function (item) {
            new tempusDominus.TempusDominus(item, datePickerOption);
        })
        $(".datepicker").on('dp.change', function (e) {
            // console.log(this.value);
            this.value = moment(this.value).format("YYYY-MM-DD HH:mm:ss");
            // console.log(this.value);
        });
        //Flat pickr format
        $("#filterCreatedTime_input").flatpickr({
            dateFormat: "d/m/Y",
            mode: "range",
        });
        $("#open-flatpickr").click(function () {
            $("#filterCreatedTime_input").click();
        });
        $("#clear-flatpickr").click(function () {
            $("#filterCreatedTime_input").val("");
        });

        $("#filterStartTime_input").flatpickr({
            dateFormat: "d/m/Y",
            mode: "range",
        });
        $("#open-flatpickr-StartTime").click(function () {
            $("#filterStartTime_input").click();
        });
        $("#clear-flatpickr-StartTime").click(function () {
            $("#filterStartTime_input").val("");
        });

        $("#filterEndTime_input").flatpickr({
            dateFormat: "d/m/Y",
            mode: "range",
        });
        $("#open-flatpickr-EndTime").click(function () {
            $("#filterEndTime_input").click();
        });
        $("#clear-flatpickr-EndTime").click(function () {
            $("#filterEndTime_input").val("");
        });

        //Flat pickr format
        $("#filterCreatedTimeSurveyHistory_input").flatpickr({
            dateFormat: "d/m/Y",
            mode: "range",
        });
        $("#open-flatpickr-surveyHistory").click(function () {
            $("#filterCreatedTimeSurveyHistory_input").click();
        });
        $("#clear-flatpickr-surveyHistory").click(function () {
            $("#filterCreatedTimeSurveyHistory_input").val("");
        });


        $('.dataSelect').select2();


        $('#search-input').on('keyup', function (e) {
            if (e.key === 'Enter' || e.keyCode === 13) {
                // Thực hiện tìm kiếm khi phím Enter được nhấn
                table.search(this.value).draw();
            }
        });

        $("#btnTableSearchSurveyHistory").click(function () {
            tableSearchSurveyHistory();
        });

        $("#btnTableSearch").click(function () {
            tableSearch();
        });



        $("#tableData thead:nth-child(2) tr th input").keypress(function (e) {
            let key = e.which;
            if (key == 13) {
                $("#btnTableSearch").click();
            }
        });
        $("#btnTableResetSearch").click(function () {
            $(".tableheaderFillter").val("").trigger("change");
            $("#booking-status-approve").addClass('btn-secondary');
            $("#booking-status-approve").removeClass('btn-success');
            $("#booking-status-reject").addClass('btn-secondary');
            $("#booking-status-reject").removeClass('btn-danger');
            $("#booking-status-done").addClass('btn-secondary');
            $("#booking-status-done").removeClass('btn-primary');
            $("#booking-status-await").addClass('btn-secondary');
            $("#booking-status-await").removeClass('btn-warning');
            tableSearch();
        });

        $("#btnTableResetSearchSurveyHistory").click(function () {
            $(".tableheaderFillter").val("").trigger("change");
            tableSearchSurveyHistory();
        });

        $("#btnExportConsultant").click(function () {
            // Chuyển hướng người dùng đến trang mới
            location.href = "/Consultant/Share/DetailConsultant/" + $('#id').val()
        });

        //Ấn nút đặt lại lịch hẹn
        $("#btnReBooking").click(function () {
            $("#modal-id-consultant").modal('hide');
            $("#modal-id-list-consultant").modal('hide');
            $("#modal-id").modal('show');
            //var bookingId = $("#id").val();
            //editItem(bookingId);
            editItemRebooking($("#reBooking-bookingId").val())
            $(".modal-title").text("Đặt lại lịch hẹn");

            updatingItemId = 0;
        });

        loadDataSelectSurvey();
        $.when(loadDataSelectSurvey()).done(function () {
            $("#filterSurveyId").select2();
            surveyData.forEach(function (item) {
                $('#filterSurveyId').append(new Option(item.name, item.id, false, false));
            })
        });
    });


    function loadData() {
        initTable();
    }
    function initTable() {
        table = $('#tableData').DataTable({
            processing: true,
            serverSide: true,
            paging: true,
            searching: { regex: true },
            "oLanguage": {
                "sUrl": "/js/Vietnamese.json"
            },

            buttons: [
                {
                    extend: 'excelHtml5',
                    title: 'Danh sách booking'
                },
                {
                    extend: 'pdfHtml5',
                    title: 'Danh sách booking'
                }
            ],
            order: [5, 'desc'],
            ajax: {
                url: systemURL + "booking/api/list-test-server-side",
                type: "POST",
                contentType: "application/json",
                dataType: "json",
                data: function (d) {
                    d.searchAll = $("#search-input").val();
                    d.accountIds = $("#filterAccountId").val();
                    d.bookingTypeIds = $("#filterBookingTypeId").val();
                    d.bookingStatusIds = $("#filterBookingStatusId").val();
                    d.counselorIds = $("#filterCounselorId").val();
                    return JSON.stringify(d);
                }

            },
            columns: [
                {
                    data: 'id',
                    render: function (data, type, row, meta) {
                        var info = table.page.info();
                        var stt = meta.row + 1 + info.page * info.length;
                        return stt;
                    }
                },

                {
                    data: "accountId",
                    render: function (data, type, row, meta) {
                        return "<span id='row" + row.id + "-column-id'>" + row.accountName + "<span>";
                    },
                },

                {
                    data: "bookingTypeId",
                    render: function (data, type, row, meta) {
                        return "<span id='row" + row.id + "-column-id'>" + row.bookingTypeName + "<span>";
                    },
                },

                {
                    data: "bookingStatusId",
                    render: function (data, type, row, meta) {
                        var statusClass;
                        if (row.bookingStatusId == @BookingStatusId.WAIT) {
                            statusClass = 'status-wait';
                        } else if (row.bookingStatusId == @BookingStatusId.ACCEPT) {
                            statusClass = 'status-accept';
                        } else if (row.bookingStatusId == @BookingStatusId.SUCCESS) {
                            statusClass = 'status-done';
                        } else if (row.bookingStatusId == @BookingStatusId.CANCEL) {
                            statusClass = 'status-cancel';
                        } else if (row.bookingStatusId == @BookingStatusId.REJECT) {
                            statusClass = 'status-reject';
                        } else if (row.bookingStatusId == @BookingStatusId.CONFIRM) {
                            statusClass = 'status-confirm';
                        }
                        return "<span id='row" + row.id + "-column-id' class='" + statusClass + "'>" + row.bookingStatusName + "<span>";
                    },
                },

                {
                    data: "counselorName",
                    render: function (data, type, row, meta) {
                        return "<span id='row" + row.id + "-column-id'>" + data + "<span>";
                    },
                },
                {
                    data: "startTime",
                    render: function (data, type, row, meta) {
                        var tempDate = new Date(data);
                        var endTime = "";
                        if (row.endTime != "" && row.endTime != null) {
                            endTime = "-" + moment(row.endTime).format("HH:mm");
                        }
                        var displayValue = moment(data).format("DD/MM/YYYY") + " " + moment(data).format("HH:mm") + endTime;
                        return displayValue;
                    }
                },
                {
                    data: 'id',
                    // render: function(data, type, row, meta) {
                    //     return "<div class='d-flex justify-content-center gap-2'>"
                    //         + "<a title='Đánh giá' data-value=" + row.accountId + " onclick='consultantItem(" + row.id +")' class='me-2 btn_manage consultant'><span class='svg-icon svg-icon-muted svg-icon-2hx'><svg width='26' height='28' viewBox='0 0 26 28' fill='none' xmlns='http://www.w3.org/2000/svg'><path d='M17.8254 27.3337H4.17203C3.1536 27.3337 2.17688 26.9291 1.45674 26.2089C0.736602 25.4888 0.332031 24.5121 0.332031 23.4937V4.50699C0.332031 3.48856 0.736602 2.51184 1.45674 1.7917C2.17688 1.07156 3.1536 0.666992 4.17203 0.666992H17.8254C18.8438 0.666992 19.8205 1.07156 20.5407 1.7917C21.2608 2.51184 21.6654 3.48856 21.6654 4.50699V23.4937C21.6654 24.5121 21.2608 25.4888 20.5407 26.2089C19.8205 26.9291 18.8438 27.3337 17.8254 27.3337ZM10.9987 7.33366C10.4713 7.33366 9.95571 7.49006 9.51718 7.78307C9.07865 8.07609 8.73685 8.49257 8.53502 8.97984C8.33319 9.46711 8.28038 10.0033 8.38327 10.5206C8.48616 11.0378 8.74014 11.513 9.11308 11.8859C9.48602 12.2589 9.96117 12.5129 10.4785 12.6158C10.9957 12.7186 11.5319 12.6658 12.0192 12.464C12.5065 12.2622 12.9229 11.9204 13.216 11.4818C13.509 11.0433 13.6654 10.5277 13.6654 10.0003C13.6654 9.29308 13.3844 8.6148 12.8843 8.11471C12.3842 7.61461 11.7059 7.33366 10.9987 7.33366ZM15.3587 19.3337C15.5794 19.347 15.8 19.3052 16.0005 19.2121C16.2011 19.1189 16.3753 18.9774 16.5076 18.8002C16.6398 18.623 16.7259 18.4157 16.7581 18.1969C16.7903 17.9781 16.7676 17.7548 16.692 17.547C16.2027 16.4571 15.3998 15.5378 14.3858 14.9061C13.3718 14.2744 12.1926 13.9591 10.9987 14.0003C9.81328 13.9677 8.64459 14.2856 7.63898 14.9141C6.63337 15.5426 5.83553 16.4538 5.34537 17.5337C4.9987 18.4003 5.70536 19.3337 7.38536 19.3337H15.3587ZM24.332 12.667H22.9987V18.0003H24.332C24.6857 18.0003 25.0248 17.8598 25.2748 17.6098C25.5249 17.3598 25.6654 17.0206 25.6654 16.667V14.0003C25.6654 13.6467 25.5249 13.3076 25.2748 13.0575C25.0248 12.8075 24.6857 12.667 24.332 12.667ZM24.332 4.66699H22.9987V10.0003H24.332C24.6857 10.0003 25.0248 9.85985 25.2748 9.6098C25.5249 9.35975 25.6654 9.02061 25.6654 8.66699V6.00033C25.6654 5.6467 25.5249 5.30756 25.2748 5.05752C25.0248 4.80747 24.6857 4.66699 24.332 4.66699Z' fill='currentColor'/></svg></span></span></a> "
                    //         + "<a title='Cập nhật' onclick='editItem(" + row.id + ")' class='me-2 btn_manage'><span class='svg-icon-success svg-icon  svg-icon-1 svg_teh009'><span class='svg-icon-primary svg-icon  svg-icon-1'> <svg width='24' height='24' viewBox='0 0 24 24' fill='none' xmlns='http://www.w3.org/2000/svg'><path opacity='0.3' fill-rule='evenodd' clip-rule='evenodd' d='M2 4.63158C2 3.1782 3.1782 2 4.63158 2H13.47C14.0155 2 14.278 2.66919 13.8778 3.04006L12.4556 4.35821C11.9009 4.87228 11.1726 5.15789 10.4163 5.15789H7.1579C6.05333 5.15789 5.15789 6.05333 5.15789 7.1579V16.8421C5.15789 17.9467 6.05333 18.8421 7.1579 18.8421H16.8421C17.9467 18.8421 18.8421 17.9467 18.8421 16.8421V13.7518C18.8421 12.927 19.1817 12.1387 19.7809 11.572L20.9878 10.4308C21.3703 10.0691 22 10.3403 22 10.8668V19.3684C22 20.8218 20.8218 22 19.3684 22H4.63158C3.1782 22 2 20.8218 2 19.3684V4.63158Z' fill='currentColor'></path><path d='M10.9256 11.1882C10.5351 10.7977 10.5351 10.1645 10.9256 9.77397L18.0669 2.6327C18.8479 1.85165 20.1143 1.85165 20.8953 2.6327L21.3665 3.10391C22.1476 3.88496 22.1476 5.15129 21.3665 5.93234L14.2252 13.0736C13.8347 13.4641 13.2016 13.4641 12.811 13.0736L10.9256 11.1882Z' fill='currentColor'></path><path d='M8.82343 12.0064L8.08852 14.3348C7.8655 15.0414 8.46151 15.7366 9.19388 15.6242L11.8974 15.2092C12.4642 15.1222 12.6916 14.4278 12.2861 14.0223L9.98595 11.7221C9.61452 11.3507 8.98154 11.5055 8.82343 12.0064Z' fill='currentColor'></path></svg></span></span></a>"
                    //         + "<a title='Xóa' onclick='deleteItem(" + row.id + ")' class='me-2 btn_manage'><span class='svg-icon-success svg-icon  svg-icon-1 svg_teh009'><span class='svg-icon-danger svg-icon  svg-icon-1'><svg width='24' height='24' viewBox='0 0 24 24' fill='none' xmlns='http://www.w3.org/2000/svg'><path d='M5 9C5 8.44772 5.44772 8 6 8H18C18.5523 8 19 8.44772 19 9V18C19 19.6569 17.6569 21 16 21H8C6.34315 21 5 19.6569 5 18V9Z' fill='currentColor'></path><path opacity='0.5' d='M5 5C5 4.44772 5.44772 4 6 4H18C18.5523 4 19 4.44772 19 5V5C19 5.55228 18.5523 6 18 6H6C5.44772 6 5 5.55228 5 5V5Z' fill='currentColor'></path><path opacity='0.5' d='M9 4C9 3.44772 9.44772 3 10 3H14C14.5523 3 15 3.44772 15 4V4H9V4Z' fill='currentColor'></path></svg></span></a>"
                    // }
                    render: function (data, type, row, meta) {
                        return "<div class='d-flex justify-content-center gap-2'>"
                            + "<a title='Cập nhật' onclick='editItem(" + row.id + ")' class='me-2 btn_manage'><span class='svg-icon-success svg-icon  svg-icon-1 svg_teh009'><span class='svg-icon-primary svg-icon  svg-icon-1'> <svg width='24' height='24' viewBox='0 0 24 24' fill='none' xmlns='http://www.w3.org/2000/svg'><path opacity='0.3' fill-rule='evenodd' clip-rule='evenodd' d='M2 4.63158C2 3.1782 3.1782 2 4.63158 2H13.47C14.0155 2 14.278 2.66919 13.8778 3.04006L12.4556 4.35821C11.9009 4.87228 11.1726 5.15789 10.4163 5.15789H7.1579C6.05333 5.15789 5.15789 6.05333 5.15789 7.1579V16.8421C5.15789 17.9467 6.05333 18.8421 7.1579 18.8421H16.8421C17.9467 18.8421 18.8421 17.9467 18.8421 16.8421V13.7518C18.8421 12.927 19.1817 12.1387 19.7809 11.572L20.9878 10.4308C21.3703 10.0691 22 10.3403 22 10.8668V19.3684C22 20.8218 20.8218 22 19.3684 22H4.63158C3.1782 22 2 20.8218 2 19.3684V4.63158Z' fill='currentColor'></path><path d='M10.9256 11.1882C10.5351 10.7977 10.5351 10.1645 10.9256 9.77397L18.0669 2.6327C18.8479 1.85165 20.1143 1.85165 20.8953 2.6327L21.3665 3.10391C22.1476 3.88496 22.1476 5.15129 21.3665 5.93234L14.2252 13.0736C13.8347 13.4641 13.2016 13.4641 12.811 13.0736L10.9256 11.1882Z' fill='currentColor'></path><path d='M8.82343 12.0064L8.08852 14.3348C7.8655 15.0414 8.46151 15.7366 9.19388 15.6242L11.8974 15.2092C12.4642 15.1222 12.6916 14.4278 12.2861 14.0223L9.98595 11.7221C9.61452 11.3507 8.98154 11.5055 8.82343 12.0064Z' fill='currentColor'></path></svg></span></span></a>"
                            + "<a title='Xóa' onclick='deleteItem(" + row.id + ")' class='me-2 btn_manage'><span class='svg-icon-success svg-icon  svg-icon-1 svg_teh009'><span class='svg-icon-danger svg-icon  svg-icon-1'><svg width='24' height='24' viewBox='0 0 24 24' fill='none' xmlns='http://www.w3.org/2000/svg'><path d='M5 9C5 8.44772 5.44772 8 6 8H18C18.5523 8 19 8.44772 19 9V18C19 19.6569 17.6569 21 16 21H8C6.34315 21 5 19.6569 5 18V9Z' fill='currentColor'></path><path opacity='0.5' d='M5 5C5 4.44772 5.44772 4 6 4H18C18.5523 4 19 4.44772 19 5V5C19 5.55228 18.5523 6 18 6H6C5.44772 6 5 5.55228 5 5V5Z' fill='currentColor'></path><path opacity='0.5' d='M9 4C9 3.44772 9.44772 3 10 3H14C14.5523 3 15 3.44772 15 4V4H9V4Z' fill='currentColor'></path></svg></span></a>"
                    }
                },

            ],
            columnDefs: [
                { targets: "no-sort", orderable: false },
                { targets: "no-search", searchable: false },
                { orderable: false, targets: [-1, 0] },
            ],
            aLengthMenu: [
                [10, 25, 50, 100],
                [10, 25, 50, 100]
            ],
            drawCallback: function () {
                $('#tableData tfoot').html("");
                $("#tableData thead:nth-child(1) tr").clone(true).appendTo("#tableData tfoot");
                $('#tableData tfoot tr').addClass("border-top");
            }
        });
    }
    async function editItem(id) {
        CloseAddConsultant();
        $("#row-reason").hide();
        $("#btnAccept").hide();
        $("#btnDone").hide();
        $("#btnReject").hide();
        $("#btnCancel").hide();
        $("#btnUpdateItem").hide();
        var account;
        updatingItemId = id;
        $("#modal-id").modal('show');
        $(".modal-title").text(id == 0 ? "Thêm mới xét nghiệm" : "Chi tiết xét nghiệm");
        if (id > 0) {
            editObj = await getItemById(id);
            account = await getDetailAccountById(editObj.accountId);
            currentBookingStatusId = editObj.bookingStatusId;
            bookingStatusId = editObj.bookingStatusId;
            // //Khi có trạng thái accept, done, reject, cancel thì sẽ không cho edit chi tiết booking nữa
            // if (currentBookingStatusId == @BookingStatusId.SUCCESS || currentBookingStatusId == @BookingStatusId.CANCEL || currentBookingStatusId == @BookingStatusId.REJECT || currentBookingStatusId == @BookingStatusId.ACCEPT) {
            //     $("#booking-counselorId").attr("disabled", true);
            //     $("#booking-bookingStatusId").attr("disabled", true);
            //     $("#booking-bookingTypeId").attr("disabled", true);
            //     $("#booking-startTime").attr("disabled", true);
            //     $("#booking-endTime").attr("disabled", true);
            //     $("#booking-address").attr("disabled", true);
            // }
            // else {
            //     $("#booking-counselorId").attr("disabled", false);
            //     $("#booking-bookingStatusId").attr("disabled", true);
            //     $("#booking-bookingTypeId").attr("disabled", true);
            //     $("#booking-startTime").attr("disabled", false);
            //     $("#booking-endTime").attr("disabled", false);
            //     $("#booking-address").attr("disabled", true);
            // }
            if (currentBookingStatusId == @BookingStatusId.REJECT || currentBookingStatusId == @BookingStatusId.CANCEL) {
                $("#row-reason").show();
            }
            //Nếu tài khoản đăng nhập có role là Bác sỹ thì sẽ ko được sửa trường Bác sỹ trong chi tiết
            if (roleIdGetLog == @RoleId.DOCTOR) {
                $("#booking-counselorId").prop("disabled", true);
            }
            //hiển thị các phím chức năng để duyệt đặt lịch
            if (currentBookingStatusId == @BookingStatusId.WAIT) {
                $("#btnAccept").show();
                //$("#btnDone").hide();
                $("#btnReject").show();
                //$("#btnCancel").show();
            } if (currentBookingStatusId == @BookingStatusId.ACCEPT) {
                //$("#btnAccept").show();
                $("#btnDone").show();
                //$("#btnReject").hide();
                $("#btnCancel").show();
            } if (currentBookingStatusId == @BookingStatusId.SUCCESS || currentBookingStatusId == @BookingStatusId.CANCEL || currentBookingStatusId == @BookingStatusId.REJECT) {
                $("#btnAccept").hide();
                $("#btnDone").hide();
                $("#btnReject").hide();
                $("#btnCancel").hide();
            }
        }
        $("#booking-id").val(id > 0 ? editObj.id : "0");
        $("#booking-accountName").val(id > 0 ? account.name : "");
        $("#booking-accountId").val(id > 0 ? editObj.accountId : "");
        $("#booking-bookingTypeId").val(id > 0 ? editObj.bookingTypeId : "").trigger("change");
        $("#booking-bookingStatusId").val(id > 0 ? editObj.bookingStatusId : "").trigger("change");
        $("#booking-counselorId").val(id > 0 ? editObj.counselorId : "").trigger("change");
        $("#booking-active").val(id > 0 ? editObj.active : "");
        $("#booking-name").val(id > 0 ? editObj.name : "");
        $("#booking-url").val(id > 0 ? editObj.url : "");
        $("#booking-address").val(id > 0 ? editObj.address : "");
        $("#booking-info").val(id > 0 ? editObj.info : "");
        $("#booking-photo").val(id > 0 ? editObj.photo : "");
        $("#booking-guide").val(id > 0 ? editObj.guide : "");

        $("#booking-startTime").val(id > 0 ? moment(editObj.startTime).format("DD/MM/YYYY HH:mm:ss") : moment(new Date()).format("DD/MM/YYYY HH:mm:ss"));
        if (editObj.endTime != null) {
            $("#booking-endTime").val(id > 0 ? moment(editObj.endTime).format("DD/MM/YYYY HH:mm:ss") : moment(new Date()).format("DD/MM/YYYY HH:mm:ss"));
        }
        $("#booking-createdTime").val(id > 0 ? moment(editObj.createdTime).format("DD/MM/YYYY HH:mm:ss") : moment(new Date()).format("DD/MM/YYYY HH:mm:ss"));
        $("#booking-reason").val(id > 0 ? editObj.reason : "");

        currentDoctorId = editObj.counselorId;
        //Load Data Colsutant
        consultantData = editObj.consultant;
        $(".body-colsultant").html("");
        if (editObj.consultant.length > 0) {
            for (let i = 0; i < editObj.consultant.length; i++) {
                let item = editObj.consultant[i];
                $(".body-colsultant").append(`
                            <tr>
                                <td>`+ (item.reason) + ` </td>
                                <td>`+ (item.consultingResults != null ? item.consultingResults : "") + `</td>
                                <td>`+ (item.symptom != null ? item.symptom : "") + `</td>
                                <td>`+ (item.consultingPlan != null ? item.consultingPlan : "") + `</td>
                                <td>`+ (item.review != null ? item.review : "") + `</td>
                                <td><span class="column-price">`+ (item.rating != null ? item.rating : "") + `</span></td>
                                <td><div class="d-flex justify-content-center gap-2"><a title="Cập nhật" onclick="editItemConsultant(`+ item.id + `)" class="me-2 btn_manage"><span class="svg-icon-success svg-icon  svg-icon-1 svg_teh009"><span class="svg-icon-primary svg-icon  svg-icon-1"> <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"><path opacity="0.3" fill-rule="evenodd" clip-rule="evenodd" d="M2 4.63158C2 3.1782 3.1782 2 4.63158 2H13.47C14.0155 2 14.278 2.66919 13.8778 3.04006L12.4556 4.35821C11.9009 4.87228 11.1726 5.15789 10.4163 5.15789H7.1579C6.05333 5.15789 5.15789 6.05333 5.15789 7.1579V16.8421C5.15789 17.9467 6.05333 18.8421 7.1579 18.8421H16.8421C17.9467 18.8421 18.8421 17.9467 18.8421 16.8421V13.7518C18.8421 12.927 19.1817 12.1387 19.7809 11.572L20.9878 10.4308C21.3703 10.0691 22 10.3403 22 10.8668V19.3684C22 20.8218 20.8218 22 19.3684 22H4.63158C3.1782 22 2 20.8218 2 19.3684V4.63158Z" fill="currentColor"></path><path d="M10.9256 11.1882C10.5351 10.7977 10.5351 10.1645 10.9256 9.77397L18.0669 2.6327C18.8479 1.85165 20.1143 1.85165 20.8953 2.6327L21.3665 3.10391C22.1476 3.88496 22.1476 5.15129 21.3665 5.93234L14.2252 13.0736C13.8347 13.4641 13.2016 13.4641 12.811 13.0736L10.9256 11.1882Z" fill="currentColor"></path><path d="M8.82343 12.0064L8.08852 14.3348C7.8655 15.0414 8.46151 15.7366 9.19388 15.6242L11.8974 15.2092C12.4642 15.1222 12.6916 14.4278 12.2861 14.0223L9.98595 11.7221C9.61452 11.3507 8.98154 11.5055 8.82343 12.0064Z" fill="currentColor"></path></svg></span></span></a><a title="Xóa" onclick="deleteItemConsultant(` + item.id + `)" class="me-2 btn_manage"><span class="svg-icon-success svg-icon  svg-icon-1 svg_teh009"><span class="svg-icon-danger svg-icon  svg-icon-1"><svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M5 9C5 8.44772 5.44772 8 6 8H18C18.5523 8 19 8.44772 19 9V18C19 19.6569 17.6569 21 16 21H8C6.34315 21 5 19.6569 5 18V9Z" fill="currentColor"></path><path opacity="0.5" d="M5 5C5 4.44772 5.44772 4 6 4H18C18.5523 4 19 4.44772 19 5V5C19 5.55228 18.5523 6 18 6H6C5.44772 6 5 5.55228 5 5V5Z" fill="currentColor"></path><path opacity="0.5" d="M9 4C9 3.44772 9.44772 3 10 3H14C14.5523 3 15 3.44772 15 4V4H9V4Z" fill="currentColor"></path></svg></span></span></a></div></td>
                          </tr>
                    `)
            }
        }
        else {
            $(".body-colsultant").html(`<tr class="odd"><td valign="top" colspan="7" class="dataTables_empty">Không có dữ liệu</td></tr>`)
        }
        formatNumber();

    }
    async function surveyHistory(id) {
        $("#modal-id-survey-history").modal('show');
        $(".modal-title").text('Danh sách bài trắc nghiệm SKTT');
        //if ($.fn.DataTable.isDataTable('#tableDataSurveyHistory')) {
        //    $('#tableDataSurveyHistory').DataTable().destroy();
        //}
        //$('#tableDataSurveyHistory').DataTable();
        initSurveyHistory(id);
    }
    var surveyData = [];
    async function loadDataSelectSurvey() {
        await $.ajax({
            url: systemURL + 'survey/api/list',
            type: 'GET',
            async: 'true',
            contentType: 'application/json',
            success: function (responseData) {
                //console.log(new Date().getSeconds() + ':' + new Date().getMilliseconds() + ' - loaded account');
                // debugger;
                var data = responseData.data;
                surveyData = data;
            },
            error: function (e) {
                //console.log(e.message);
            }
        });
    }
    async function initSurveyHistory(id) {
        if ($.fn.DataTable.isDataTable('#tableDataSurveyHistory')) {
            $('#tableDataSurveyHistory').DataTable().destroy();
        }
        var accounts = [];
        accounts.push(id);
        tableSurveyHistory = $('#tableDataSurveyHistory').DataTable({
            processing: true,
            serverSide: true,
            paging: true,
            searching: { regex: true },
            dom: 'Bfrtip',
            buttons: [
                {
                    extend: 'excelHtml5',
                    title: 'Danh sách kết quả khảo sát'
                },
                {
                    extend: 'pdfHtml5',
                    title: 'Danh sách kết quả khảo sát'
                }
            ],
            order: [3, 'desc'],
            "oLanguage": {
                "sUrl": "/js/Vietnamese.json"
            },
            ajax: {
                url: systemURL + "surveyAccount/api/list-server-side",
                type: "POST",
                contentType: "application/json",
                dataType: "json",
                data: function (d) {
                    d.searchAll = "";
                    d.accountIds = accounts; d.surveyIds = $("#filterSurveyId").val();
                    return JSON.stringify(d);
                }
            },
            columns: [
                {
                    data: 'id',
                    render: function (data, type, row, meta) {
                        var info = table.page.info();
                        var stt = meta.row + 1 + info.page * info.length;
                        return stt; // This contains the row index
                    }
                },
                {
                    data: "surveyId",
                    render: function (data, type, row, meta) {
                        return "<span id='row" + row.id + "-column-id'>" + row.surveyName + "<span>";
                    },
                },

                {
                    data: "description",
                    render: function (data, type, row, meta) {
                        return "<span id='row" + row.id + "-column-id'>" + data + "<span>";
                    },
                },

                {
                    data: "createdTime",
                    render: function (data) {
                        var tempDate = new Date(data);
                        var displayValue = moment(data).format("DD/MM/YYYY HH:mm:ss");
                        return displayValue;
                    }
                },

                {
                    data: 'id',
                    render: function (data, type, row, meta) {
                        return "<div class='d-flex justify-content-center gap-2'></div>"
                            + "<a title='Cập nhật' onclick='editItemSurvey(" + row.id + ")' class='me-2 btn_manage'><span class='svg-icon-success svg-icon  svg-icon-1 svg_teh009'><span class='svg-icon-primary svg-icon  svg-icon-1'> <svg width='24' height='24' viewBox='0 0 24 24' fill='none' xmlns='http://www.w3.org/2000/svg'><path opacity='0.3' fill-rule='evenodd' clip-rule='evenodd' d='M2 4.63158C2 3.1782 3.1782 2 4.63158 2H13.47C14.0155 2 14.278 2.66919 13.8778 3.04006L12.4556 4.35821C11.9009 4.87228 11.1726 5.15789 10.4163 5.15789H7.1579C6.05333 5.15789 5.15789 6.05333 5.15789 7.1579V16.8421C5.15789 17.9467 6.05333 18.8421 7.1579 18.8421H16.8421C17.9467 18.8421 18.8421 17.9467 18.8421 16.8421V13.7518C18.8421 12.927 19.1817 12.1387 19.7809 11.572L20.9878 10.4308C21.3703 10.0691 22 10.3403 22 10.8668V19.3684C22 20.8218 20.8218 22 19.3684 22H4.63158C3.1782 22 2 20.8218 2 19.3684V4.63158Z' fill='currentColor'></path><path d='M10.9256 11.1882C10.5351 10.7977 10.5351 10.1645 10.9256 9.77397L18.0669 2.6327C18.8479 1.85165 20.1143 1.85165 20.8953 2.6327L21.3665 3.10391C22.1476 3.88496 22.1476 5.15129 21.3665 5.93234L14.2252 13.0736C13.8347 13.4641 13.2016 13.4641 12.811 13.0736L10.9256 11.1882Z' fill='currentColor'></path><path d='M8.82343 12.0064L8.08852 14.3348C7.8655 15.0414 8.46151 15.7366 9.19388 15.6242L11.8974 15.2092C12.4642 15.1222 12.6916 14.4278 12.2861 14.0223L9.98595 11.7221C9.61452 11.3507 8.98154 11.5055 8.82343 12.0064Z' fill='currentColor'></path></svg></span></span></a>";
                    }
                },

            ],
            columnDefs: [
                { targets: "no-sort", orderable: false },
                { targets: "no-search", searchable: false },
                { orderable: false, targets: [-1, 0] },
            ],
            aLengthMenu: [
                [10, 25, 50, 100],
                [10, 25, 50, 100]
            ],
            drawCallback: function () {
                $('#tableDataSurveyHistory tfoot').html("");
                $("#tableDataSurveyHistory thead:nth-child(1) tr").clone(true).appendTo("#tableDataSurveyHistory tfoot");
                $('#tableDataSurveyHistory tfoot tr').addClass("border-top");
            }
        });
    }
    async function editItemSurvey(id) {
        //updatingItemId = id;
        var surveyAccount;
        autosize.destroy($('#surveyAccount-description'));
        autosize($('#surveyAccount-description'));
        $("#modal-id-detail-survey").modal('show');
        if (id > 0) {
            surveyAccount = await getSurveyAccountById(id);
        }
        $("#defaultModalTitle").text(id == 0 ? "Thêm mới tài khoản bài khảo sát" : "Xem chi tiết kết quả bài khảo sát");

        $("#surveyAccount-id").val(id > 0 ? surveyAccount.id : "0");
        $("#surveyAccount-accountId").val(id > 0 ? surveyAccount.accountId : "").trigger("change");
        $("#surveyAccount-surveyId").val(id > 0 ? surveyAccount.surveyId : "").trigger("change");
        $("#surveyAccount-active").val(id > 0 ? surveyAccount.active : "");
        $("#surveyAccount-score").val(id > 0 ? surveyAccount.score : "");
        $("#surveyAccount-name").val(id > 0 ? surveyAccount.name : "");
        $("#surveyAccount-description").val(id > 0 ? surveyAccount.description : "");
        $("#surveyAccount-text").val(id > 0 ? surveyAccount.text : "");
        $("#surveyAccount-createdTime").val(id > 0 ? moment(surveyAccount.createdTime).format("DD/MM/YYYY HH:mm:ss") : moment(new Date()).format("DD/MM/YYYY HH:mm:ss"));
        $("#surveyAccount-startDate").val(id > 0 ? moment(surveyAccount.startDate).format("DD/MM/YYYY HH:mm:ss") : moment(new Date()).format("DD/MM/YYYY HH:mm:ss"));
        $("#myIframe").attr("src", "/app/chi-tiet-bai-sang-loc?id=" + surveyAccount.id);

        if (id > 0) {
            var strLength = $("#surveyAccount-description").val().split('\n').length;
            $("#surveyAccount-description").attr('rows', strLength < 3 ? 3 : strLength)
        }

        //formatNumber();
    }
    async function getSurveyAccountById(id) {
        var data;
        await $.ajax({
            url: systemURL + "surveyAccount/api/detail/" + id,
            method: "GET",
            success: function (responseData) {
                data = responseData.data[0];
            },
            error: function (e) {
            },
        });
        return data;
    }
    function tableSearchSurveyHistory() {
        tableSurveyHistory.column(1).search($("#tableDataSurveyHistory thead:nth-child(2) tr th:nth-child(2) input").val());
        tableSurveyHistory.column(2).search($("#tableDataSurveyHistory thead:nth-child(2) tr th:nth-child(3) input").val());
        tableSurveyHistory.column(3).search($("#tableDataSurveyHistory thead:nth-child(2) tr th:nth-child(4) input").val());

        tableSurveyHistory.draw();
    }

    const getConsultant = async (id) => {
        var data;
        await $.ajax({
            url: systemURL + "consultant/api/DetailConsultantByBookingId/" + id,
            method: "GET",
            success: function (responseData) {
                if (responseData.status == 200 && responseData.message === "SUCCESS") {
                    data = responseData.data[0];
                }
                else {
                    data = false
                }
            },
            error: function (e) {
                data = false;
            },
        });
        return data;
    }

    //Chi tiết phiếu đánh giá
    async function consultantItem(id) {
        $("#modal-id-consultant").modal('show');
        $("#booking-nation").prop("disabled", true);
        $("#booking-cultural-level").prop("disabled", true);
        $("#booking-reason-for-consulation").prop("disabled", true);
        $("#booking-physical-mainfestations").prop("disabled", true);
        $("#booking-family-and-social-relationship").prop("disabled", true);
        $("#booking-person-and-family-history").prop("disabled", true);
        $("#booking-AssessmentResult").prop("disabled", true);
        $("#booking-Target").prop("disabled", true);
        $("#booking-ConsultingResults").prop("disabled", true);
        $("#booking-ConsultingPlan").prop("disabled", true);
        $("#btnUpdateConsultant").hide();
        $("#btnReBooking").hide();
        var consultant = await getConsultant(id);

        var booking = await getItemById(id)
        var account = await getDetailAccountById(booking.accountId)
        var counselor = await getDetailAccountById(booking.counselorId)
        var bookingtype = await getItemBookingTypeById(booking.bookingTypeId)
        var startTime = booking.startTime.slice(11, 16)
        var endTime = booking.endTime.slice(11, 16)
        var bookingTime = moment(booking.startTime).format("DD/MM/YYYY") + ' ' + startTime + '-' + endTime

        $('#accountName').val(account.name)
        $("#booking-date-of-birthday").val(moment(account.dob).format("DD/MM/YYYY"))
        $('#booking-phone').val(booking.url)
        $('#account-address-consultant').val(account.address)
        $('#booking-time').val(bookingTime);
        if (account.gender === 'MALE') {
            $('#booking-gender').val('Nam');
        }
        else {
            $('#booking-gender').val('Nữ');
        }

        $('#id').val(id)//bookingid
        $('#accountId').val(account.id)
        $('#counselorId').val(booking.counselorId)

        $('#booking-type').val(bookingtype.name);

        $('#booking-counsulor').val(counselor.name)
        $('#booking-nation').val(consultant != false ? consultant.religiousNation : "");
        $('#booking-reason-for-consulation').val(consultant != false ? consultant.reason : "");
        $('#booking-physical-mainfestations').val(consultant != false ? consultant.symptom : "");
        $('#booking-family-and-social-relationship').val(consultant != false ? consultant.religiorelationship : "");
        $('#booking-person-and-family-history').val(consultant != false ? consultant.history : "");
        $('#booking-AssessmentResult').val(consultant != false ? consultant.assessmentResult : "");
        $('#booking-Target').val(consultant != false ? consultant.target : "");
        $('#booking-ConsultingResults').val(consultant != false ? consultant.consultingResults : "");
        $('#booking-ConsultingPlan').val(consultant != false ? consultant.consultingPlan : "");
        if (consultant != false) {
            consultantId = consultant.id
            var link = "/Consultant/Share/DetailConsultant/" + id;
            $('#myLink').attr('href', link);
            $('#myLink').show();
            $("#modal-id-consultant").modal('show');
            $("#modal-title-consultant").text("Phiếu đánh giá khám");
        }
        else {
            consultantId = 0;
            $('#myLink').hide();
            $("#modal-id-consultant").modal('show');
            $("#modal-title-consultant").text("Phiếu đánh giá khám");
        }
        if (roleIdGetLog == @RoleId.ADMIN) {
            $("#booking-nation").prop("disabled", false);
            $("#booking-cultural-level").prop("disabled", false);
            $("#booking-reason-for-consulation").prop("disabled", false);
            $("#booking-physical-mainfestations").prop("disabled", false);
            $("#booking-family-and-social-relationship").prop("disabled", false);
            $("#booking-person-and-family-history").prop("disabled", false);
            $("#booking-AssessmentResult").prop("disabled", false);
            $("#booking-Target").prop("disabled", false);
            $("#booking-ConsultingResults").prop("disabled", false);
            $("#booking-ConsultingPlan").prop("disabled", false);
            $("#btnUpdateConsultant").show();
        }
        if (roleIdGetLog == @RoleId.DOCTOR && accountIdGetLog == booking.counselorId) {
            $("#booking-nation").prop("disabled", false);
            $("#booking-cultural-level").prop("disabled", false);
            $("#booking-reason-for-consulation").prop("disabled", false);
            $("#booking-physical-mainfestations").prop("disabled", false);
            $("#booking-family-and-social-relationship").prop("disabled", false);
            $("#booking-person-and-family-history").prop("disabled", false);
            $("#booking-AssessmentResult").prop("disabled", false);
            $("#booking-Target").prop("disabled", false);
            $("#booking-ConsultingResults").prop("disabled", false);
            $("#booking-ConsultingPlan").prop("disabled", false);
            $("#btnUpdateConsultant").show();
        }
        if (accountIdGetLog == counselor.id || roleIdGetLog == @RoleId.ADMIN) {
            $("#btnReBooking").show();
        }
        $("#reBooking-bookingId").val(id);

    }

    //Chi tiết đặt lại lịch
    async function editItemRebooking(id) {
        $("#row-address").show();
        $("#row-reason").hide();
        $("#btnAccept").hide();
        $("#btnDone").hide();
        $("#btnReject").hide();
        $("#btnCancel").hide();
        $("#btnUpdateItem").show();
        var account;
        updatingItemId = id;
        $("#modal-id").modal('show');
        $(".modal-title").text(id == 0 ? "Thêm mới lịch" : "Xác nhận lịch");
        if (id > 0) {
            editObj = await getItemById(id);
            account = await getDetailAccountById(editObj.accountId);
            currentBookingStatusId = @BookingStatusId.WAIT;

            //Khi có trạng thái accept, done, reject, cancel thì sẽ không cho edit chi tiết booking nữa
            if (currentBookingStatusId == @BookingStatusId.SUCCESS || currentBookingStatusId == @BookingStatusId.CANCEL || currentBookingStatusId == @BookingStatusId.REJECT || currentBookingStatusId == @BookingStatusId.ACCEPT) {
                $("#booking-counselorId").attr("disabled", true);
                $("#booking-bookingStatusId").attr("disabled", true);
                $("#booking-bookingTypeId").attr("disabled", true);
                $("#booking-startTime").attr("disabled", true);
                $("#booking-endTime").attr("disabled", true);
                $("#booking-address").attr("disabled", true);
            }
            else {
                $("#booking-counselorId").attr("disabled", false);
                $("#booking-bookingStatusId").attr("disabled", true);
                $("#booking-bookingTypeId").attr("disabled", false);
                $("#booking-startTime").attr("disabled", false);
                $("#booking-endTime").attr("disabled", false);
                $("#booking-address").attr("disabled", false);
            }

            if (currentBookingStatusId == @BookingStatusId.REJECT || currentBookingStatusId == @BookingStatusId.CANCEL) {
                $("#row-reason").show();
            }
            //Nếu tài khoản đăng nhập có role là Bác sỹ thì sẽ ko được sửa trường Bác sỹ trong chi tiết
            if (roleIdGetLog == @RoleId.DOCTOR) {
                $("#booking-counselorId").prop("disabled", true);
            }
            //hiển thị các phím chức năng để duyệt đặt lịch
            //if (currentBookingStatusId == @BookingStatusId.WAIT) {
            //    $("#btnAccept").show();
            //    //$("#btnDone").hide();
            //    $("#btnReject").show();
            //    //$("#btnCancel").show();
            //} if (currentBookingStatusId == @BookingStatusId.ACCEPT) {
            //    //$("#btnAccept").show();
            //    $("#btnDone").show();
            //    //$("#btnReject").hide();
            //    $("#btnCancel").show();
            //} if (currentBookingStatusId == @BookingStatusId.SUCCESS || currentBookingStatusId == @BookingStatusId.CANCEL || currentBookingStatusId == @BookingStatusId.REJECT) {
            //    $("#btnAccept").hide();
            //    $("#btnDone").hide();
            //    $("#btnReject").hide();
            //    $("#btnCancel").hide();
            //}
        }
        $("#booking-id").val(id > 0 ? editObj.id : "0");
        $("#booking-accountName").val(id > 0 ? account.name : "");
        $("#booking-accountId").val(id > 0 ? editObj.accountId : "");
        $("#booking-bookingTypeId").val(id > 0 ? editObj.bookingTypeId : "").trigger("change");
        $("#booking-bookingStatusId").val(@BookingStatusId.WAIT).trigger("change");
        $("#booking-counselorId").val(id > 0 ? editObj.counselorId : "").trigger("change");
        $("#booking-active").val(id > 0 ? editObj.active : "");
        $("#booking-name").val(id > 0 ? editObj.name : "");
        $("#booking-url").val(id > 0 ? editObj.url : "");
        $("#booking-address").val(id > 0 ? editObj.address : "");
        $("#booking-info").val(id > 0 ? editObj.info : "");
        $("#booking-photo").val(id > 0 ? editObj.photo : "");
        $("#booking-startTime").val(moment(new Date()).format("DD/MM/YYYY HH:mm:ss"));
        $("#booking-endTime").val(moment(new Date()).format("DD/MM/YYYY HH:mm:ss"));
        $("#booking-createdTime").val(moment(new Date()).format("DD/MM/YYYY HH:mm:ss"));
        $("#booking-reason").val(id > 0 ? editObj.reason : "");
        //formatNumber();
    }

    const updateConsultant = async () => {
        var consultantObj = await getConsultant($('#id').val());
        consultantId = consultantObj != false ? consultantObj.id : 0;
        var consultantItem = {
            'id': consultantId,
            'ReligiousNation': $('#booking-nation').val(),
            'CulturalLevel': $('#booking-cultural-level').val(),
            'Implementation': $('#booking-counsulor').val(),
            'Reason': $('#booking-reason-for-consulation').val(),
            'Symptom': $('#booking-physical-mainfestations').val(),
            'Religiorelationship': $('#booking-family-and-social-relationship').val(),
            'History': $('#booking-person-and-family-history').val(),
            'AssessmentResult': $('#booking-AssessmentResult').val(),
            'Target': $('#booking-Target').val(),
            'ConsultingResults': $('#booking-ConsultingResults').val(),
            'ConsultingPlan': $('#booking-ConsultingPlan').val(),
            'AccountId': $('#accountId').val(),
            'CounselorsId': $('#counselorId').val(),
            'BookingId': $('#id').val(),
            'ConsultingTime': $('#booking-time').val(),
            'Form': $('#booking-type').val(),
            'createdTime': "",
        }
        Swal.fire({
            title: "Phiếu đánh giá lịch xét nghiệm",
            html: "Bạn có chắc chắn muốn lưu phiếu đánh giá lịch xét nghiệm không?",
            icon: 'info',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#443',
            confirmButtonText: 'Xác nhận',
            cancelButtonText: 'Huỷ'
        }).then((result) => {
            if (result.value) {
                //CREATED CONSULTANT
                if (consultantId == 0) {
                    delete consultantItem["id"]
                    consultantItem.createdTime = new Date();
                    $.ajax({
                        url: systemURL + "consultant/api/Add",
                        type: "POST",
                        contentType: "application/json",
                        data: JSON.stringify(consultantItem),
                        success: function (responseData) {
                            if (responseData.status == 201 && responseData.message === "CREATED") {
                                Swal.fire({
                                    title: "Phiếu đánh giá lịch xét nghiệm",
                                    html: 'Phiếu đánh giá lịch xét nghiệm được tạo mới thành công!',
                                    icon: 'success'
                                });
                                $("#modal-id-consultant").modal('hide');
                                loadDataConsultant($('#accountId').val(), $('#id').val());
                            }
                            else if (responseData.status == 403 && responseData.message === "BadRequest") {
                                var contentError = "<ul>";
                                responseData.errors.forEach(function (item, index) {
                                    contentError += "<li class='text-start'>" + item + "</li>";
                                })
                                contentError += "</ul>";
                                var swalSubTitle = "<p class='swal__admin__subtitle'>" + "Thêm phiếu đánh giá lịch xét nghiệm" + " không thành công</p>";
                                Swal.fire(
                                    "Phiếu đánh giá lịch xét nghiệm" + swalSubTitle,
                                    contentError,
                                    'warning'
                                );
                            }
                        },
                        error: function (e) {
                            Swal.fire({
                                title: "Phiếu đánh giá lịch xét nghiệm",
                                html: 'Thêm phiếu đánh giá lịch xét nghiệm không thành công, vui lòng thử lại sau !',
                                icon: 'error'
                            });
                        }
                    });
                }
                //UPDATED CONSULTANT
                if (consultantId > 0) {
                    delete consultantItem["createdTime"]
                    $.ajax({
                        url: systemURL + "consultant/api/Update",
                        type: "POST",
                        contentType: "application/json",
                        data: JSON.stringify(consultantItem),
                        success: function (responseData) {
                            if (responseData.status == "200" && responseData.message === "SUCCESS") {
                                Swal.fire({
                                    title: "Phiếu đánh giá khám",
                                    html: 'Phiếu đánh giá khám được cập nhật thành công!',
                                    icon: 'success'
                                });
                                $("#modal-id-consultant").modal('hide');
                                loadDataConsultant($('#accountId').val(), $('#id').val());
                            }
                            else if (responseData.status == 403 && responseData.message === "BadRequest") {
                                var contentError = "<ul>";
                                responseData.errors.forEach(function (item, index) {
                                    contentError += "<li class='text-start'>" + item + "</li>";
                                })
                                contentError += "</ul>";
                                var swalSubTitle = "<p class='swal__admin__subtitle'>" + "Cập nhật phiếu đánh giá khám" + " không thành công</p>";
                                Swal.fire(
                                    "Phiếu đánh giá khám" + swalSubTitle,
                                    contentError,
                                    'warning'
                                );
                            }
                        },
                        error: function (e) {
                            Swal.fire({
                                title: "Phiếu đánh giá khám",
                                html: 'Cập nhật phiếu đánh giá khám không thành công, vui lòng thử lại sau !',
                                icon: 'error'
                            });
                        }
                    });
                }
            }
        })
    }

    //Cập nhật booking
    async function updateItem(id, bookingStatusId) {
        var actionName = (id == 0 ? "Bạn muốn tạo mới" : "Cập nhật");
        var obj;
        if (id > 0) {
            obj = await getItemById(id);
            var objAccount = await getDetailAccountById(obj.accountId);
        }
        let objName = id > 0 ? obj.name : "item";
        let accountNameCancel = (roleIdGetLog == @RoleId.DOCTOR ? 'Bác sỹ đã' : 'Admin đã');
        let statusName = '';
        if (bookingStatusId == @BookingStatusId.REJECT) {
            statusName = ' từ chối vì: ';
        }
        else if (bookingStatusId == @BookingStatusId.CANCEL) {
            statusName = ' hủy vì: ';
        }
        else {
            statusName = '';
        }
        var reason = '';
        if (statusName != "") {
            reason = accountNameCancel + statusName + $("#reason_cancel").val();
        }
        var endTime = "";
        if ($("#booking-endTime").val() != "") {
            endTime = formatDatetimeUpdate($("#booking-endTime").val())
        }
        validateInputNumber();
        var updatingObj = {
            "id": id,
            "accountId": $("#booking-accountId").val(),
            "bookingTypeId": $("#booking-bookingTypeId").val(),
            "bookingStatusId": bookingStatusId,
            "counselorId": $("#booking-counselorId").val(),
            "active": $("#booking-active").val(),
            "name": $("#booking-name").val(),
            "url": $("#booking-url").val(),
            "address": $("#booking-address").val(),
            "info": $("#booking-info").val(),
            "photo": $("#booking-photo").val(),
            "startTime": formatDatetimeUpdate($("#booking-startTime").val()),
            "endTime": endTime,
            "createdTime": formatDatetimeUpdate($("#booking-createdTime").val()),
            "reason": reason,
            "guide": $("#booking-guide").val()
        };
        var actionTitle = (updatingItemId > 0 ? "Cập nhật " : "Thêm mới ");

        Swal.fire({
            title: actionTitle + 'booking?',
            html: "Bạn có chắc chắn muốn " + actionName.toLowerCase() + " đặt lịch của <b>" + $("#booking-accountName").val() + '</b>?<br><br> Để xác nhận đã gọi điện và tư vấn<br>Nhập vào bên dưới: "<span style="color:var(--bs-primary)">Tôi đã xác nhận</span>" để xác nhận',
            input: "text",
            icon: 'info',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#443',
            confirmButtonText: 'Xác nhận',
            cancelButtonText: 'Huỷ'
        }).then((result) => {
            if (removeVietnameseTones(result.value) == removeVietnameseTones("@Html.Raw(BookingStatusId.TEXT_CONFIRM)")) {
                $("#modal-id").modal('hide');
                $("#loading").addClass("show");
                //CALL AJAX TO UPDATE
                if (id > 0) {
                    $.ajax({
                        url: systemURL + "booking/api/update",
                        type: "POST",
                        contentType: "application/json",
                        data: JSON.stringify(updatingObj),
                        success: function (responseData) {
                            // debugger;
                            if (responseData.status == 200 && responseData.message === "SUCCESS") {
                                $("#reason-cancel-booking").modal('hide');
                                $("#loading").removeClass("show");
                                Swal.fire(
                                    'Thành Công!',
                                    'Đã cập nhật lịch xét nghiệm của"' + $("#booking-accountName").val() + '" ',
                                    'success'
                                );
                                reGenTable();
                            }
                        },
                        error: function (e) {
                            //console.log(e.message);
                            $("#loading").removeClass("show");
                            Swal.fire(
                                'Lỗi!',
                                'Đã xảy ra lỗi, vui lòng thử lại',
                                'error'
                            );
                        }
                    });
                };
                //CALL AJAX TO CREATE
                if (id == 0) {
                    updatingObj.id = 1;
                    delete updatingObj["id"]
                    updatingObj.active = 1;
                    updatingObj.createdTime = new Date();
                    $.ajax({
                        url: systemURL + "booking/api/add",
                        type: "POST",
                        contentType: "application/json",
                        data: JSON.stringify(updatingObj),
                        success: function (responseData) {
                            // debugger;
                            if (responseData.status == 201 && responseData.message === "CREATED") {
                                $("#loading").removeClass("show");
                                Swal.fire(
                                    'Thành công!',
                                    'Đã cập nhật dữ liệu',
                                    'success'
                                );
                                updatingObj = responseData.data;
                                sendEmailSuccessBooking(updatingObj.accountId, updatingObj.counselorId);
                                reGenTable();
                            }
                        },
                        error: function (e) {
                            //console.log(e.message);
                            $("#loading").removeClass("show");
                            Swal.fire(
                                'Lỗi!',
                                'Đã xảy ra lỗi, vui lòng thử lại',
                                'error'
                            );
                            // Remove loading indication
                            submitButton.removeAttribute('data-kt-indicator');
                            // Enable button
                            submitButton.disabled = false;
                        }
                    });
                }
            }
            else {
                // Remove loading indication
                submitButton.removeAttribute('data-kt-indicator');
                // Enable button
                submitButton.disabled = false;
            }

        })
    }

    async function approvedItem(id, accountId) {
        var obj;
        var objBookingTypeId;
        if (id > 0) {
            obj = await getItemById(id);
            objBookingTypeId = obj.bookingTypeId;
            var objAccount = await getDetailAccountById(obj.accountId);
            var objCounselor = await getDetailAccountById(obj.counselorId);
        }
        let objName = id > 0 ? obj.name : "item";
        validateInputNumber();
        var updatingObj = {
            "id": id,
            "bookingStatusId": @BookingStatusId.ACCEPT,
        };

        Swal.fire({
            title: 'Duyệt booking?',
            html: "Bạn có chắc chắn muốn duyệt booking của <b>" + objAccount.name + '</b>?',
            icon: 'info',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#443',
            confirmButtonText: 'Xác nhận',
            cancelButtonText: 'Huỷ'
        }).then((result) => {
            if (result.value) {
                if (objBookingTypeId == @BookingTypeConstant.ONLINE) {
                    if (obj.url != null && obj.url.trim().length > 0) {
                        $.ajax({
                            url: systemURL + "booking/api/UpdateBookingStatus",
                            type: "POST",
                            contentType: "application/json",
                            data: JSON.stringify(updatingObj),
                            success: function (responseData) {
                                // debugger;
                                if (responseData.status == 200 && responseData.message === "SUCCESS") {
                                    Swal.fire(
                                        'Thành Công!',
                                        'Đã phê duyệt "' + objName + '" ',
                                        'success'
                                    );
                                    sendEmailAcceptBooking(id, accountId);
                                    reGenTable();
                                }
                            },
                            error: function (e) {
                                //console.log(e.message);
                                Swal.fire(
                                    'Lỗi!',
                                    'Đã xảy ra lỗi, vui lòng thử lại',
                                    'error'
                                );
                            }
                        });
                    }
                    else {
                        Swal.fire(
                            'Lỗi!',
                            'Chưa phê duyệt do chưa có link đường dẫn khám',
                            'error'
                        );
                    }
                }
                else {
                    if (obj.address != null && obj.address.trim().length > 0) {
                        $.ajax({
                            url: systemURL + "booking/api/UpdateBookingStatus",
                            type: "POST",
                            contentType: "application/json",
                            data: JSON.stringify(updatingObj),
                            success: function (responseData) {
                                // debugger;
                                if (responseData.status == 200 && responseData.message === "SUCCESS") {
                                    Swal.fire(
                                        'Thành Công!',
                                        'Đã phê duyệt "' + objName + '" ',
                                        'success'
                                    );
                                    sendEmailAcceptBooking(id, accountId);
                                    reGenTable();
                                }
                            },
                            error: function (e) {
                                //console.log(e.message);
                                Swal.fire(
                                    'Lỗi!',
                                    'Đã xảy ra lỗi, vui lòng thử lại',
                                    'error'
                                );
                            }
                        });
                    }
                    else {
                        Swal.fire(
                            'Lỗi!',
                            'Chưa phê duyệt do chưa có địa chỉ khám',
                            'error'
                        );
                    }
                }

            }
            else {
                // Remove loading indication
                submitButton.removeAttribute('data-kt-indicator');
                // Enable button
                submitButton.disabled = false;
            }
        })
    }
    async function rejectItem(id, accountId) {
        Swal.fire({
            title: 'Nhật lý do từ chối:',
            input: 'textarea',
            inputAttributes: {
                autocapitalize: 'off'
            },
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#443',
            confirmButtonText: 'Xác nhận',
            cancelButtonText: 'Huỷ',
            showLoaderOnConfirm: true,
            preConfirm: (value) => {
                // You can perform some validation or processing here
                return value;
            },
            allowOutsideClick: () => !Swal.isLoading()
        }).then(async (result) => {
            if (result.isConfirmed) {
                // Access the input value here
                var reason = result.value;
                if (reason.trim() == "" || reason == null) {
                    Swal.fire({
                        html: 'Chưa có lý do từ chối lịch hẹn, vui lòng thử lại!',
                        icon: 'error'
                    });

                } else {
                    var obj;
                    if (id > 0) {
                        obj = await getItemById(id);
                        var objAccount = await getDetailAccountById(obj.accountId);
                    }
                    let objName = id > 0 ? obj.name : "item";
                    validateInputNumber();
                    var updatingObj = {
                        "id": id,
                        "bookingStatusId": @BookingStatusId.REJECT,
                    };
                    Swal.fire({
                        title: 'Duyệt booking?',
                        html: "Bạn có chắc chắn muốn duyệt booking của <b>" + objAccount.name + '</b>?',
                        icon: 'info',
                        showCancelButton: true,
                        confirmButtonColor: '#3085d6',
                        cancelButtonColor: '#443',
                        confirmButtonText: 'Xác nhận',
                        cancelButtonText: 'Huỷ'
                    }).then((result) => {
                        if (result.value) {
                            $.ajax({
                                url: systemURL + "booking/api/UpdateBookingStatus",
                                type: "POST",
                                contentType: "application/json",
                                data: JSON.stringify(updatingObj),
                                success: function (responseData) {
                                    // debugger;
                                    if (responseData.status == 200 && responseData.message === "SUCCESS") {
                                        Swal.fire(
                                            'Thành Công!',
                                            'Đã phê duyệt "' + objName + '" ',
                                            'success'
                                        );
                                        sendEmailRejectBooking(id, accountId, reason);
                                        reGenTable();
                                    }
                                },
                                error: function (e) {
                                    //console.log(e.message);
                                    Swal.fire(
                                        'Lỗi!',
                                        'Đã xảy ra lỗi, vui lòng thử lại',
                                        'error'
                                    );
                                }
                            });
                        }
                        else {
                            // Remove loading indication
                            submitButton.removeAttribute('data-kt-indicator');
                            // Enable button
                            submitButton.disabled = false;
                        }
                    })
                }
            }
        });

    }
    async function validate(bookingStatusId) {
        if (bookingStatusId == @BookingStatusId.REJECT || bookingStatusId == @BookingStatusId.CANCEL) {
            updateItem(updatingItemId, bookingStatusId);
        }
        else {
            var startTime = moment($("#booking-startTime").val(), "DD/MM/YYYY HH:mm:ss");
            var endTime = moment($("#booking-endTime").val(), "DD/MM/YYYY HH:mm:ss");
            var createTime = moment($("#booking-createTime").val(), "DD/MM/YYYY HH:mm:ss");

            var errorList = [];

            if ($("#booking-url").val().length > 255) {
                errorList.push("Link buổi khám không được quá 255 ký tự.");
            }
            if ($("#booking-bookingTypeId").val() == @BookingTypeConstant.OFFLINE) {
                if ($("#booking-address").val().length == 0 || $("#booking-address").val() == null)
                    errorList.push("Chưa có địa chỉ dành cho lịch hẹn offline.");
            }
            if (endTime.unix() < startTime.unix()) {
                errorList.push("Thời gian bắt đầu phải nhỏ hơn thời gian kết thúc.");
            }
            if (startTime.unix() < createTime.unix()) {
                errorList.push("Ngày tạo phải nhở hơn thời gian bắt đầu.");
            }
            if (roleIdGetLog == @RoleId.ADMIN && $("#booking-counselorId").val() == @AdminAccountConst.COUNSELOR_DEFAULT && bookingStatusId != @BookingStatusId.WAIT) {
                errorList.push("Chưa chỉ định Bác sỹ cho lịch hẹn khám.")
            }

            if (errorList.length > 0) {
                var contentError = "<ul>";
                errorList.forEach(function (item, index) {
                    contentError += "<li class='text-start'>" + item + "</li>";
                })
                contentError += "</ul>";
                var actionName = (updatingItemId > 0 ? "Cập nhật" : "Thêm mới");
                var swalSubTitle = "<p class='swal__admin__subtitle'>" + actionName + " không thành công</p>";
                Swal.fire(
                    'Quản lý lịch hẹn' + swalSubTitle,
                    contentError,
                    'warning'
                );
            } else {
                updateItem(updatingItemId, bookingStatusId);
            }
        }
    }
    async function deleteItem(id) {
        updatingObj = table.ajax.json().data.find(c => c.id == id);
        let objName = id > 0 ? updatingObj.name : "item";
        Swal.fire({
            title: 'Xác nhận thay đổi?',
            text: "Xóa " + objName + "",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#d33',
            cancelButtonColor: '#3085d6',
            confirmButtonText: 'Xoá',
            cancelButtonText: 'Huỷ'
        }).then((result) => {
            if (result.value) {
                //CALL AJAX TO DELETE
                $.ajax({
                    url: systemURL + "booking/api/delete",
                    type: "POST",
                    contentType: "application/json",
                    data: JSON.stringify({ "id": id }),
                    success: function (responseData) {
                        // debugger;
                        if (responseData.status == 200 && responseData.message === "SUCCESS") {
                            Swal.fire(
                                'Thành công!',
                                'Đã xoá ' + updatingObj.name + '.',
                                'success'
                            );
                            reGenTable();
                        }
                    },
                    error: function (e) {
                        //console.log(e.message);
                        Swal.fire(
                            'Lỗi!',
                            'Đã xảy ra lỗi, vui lòng thử lại',
                            'error'
                        );
                    }
                });

            }
        })
    }
    async function getItemById(id) {
        var data;
        await $.ajax({
            url: systemURL + "booking/api/detail/" + id,
            method: "GET",
            success: function (responseData) {
                data = responseData.data[0];
            },
            error: function (e) {
            },
        });
        return data;
    }
    async function getItemBookingTypeById(id) {
        var data;
        await $.ajax({
            url: systemURL + "bookingtype/api/detail/" + id,
            method: "GET",
            success: function (responseData) {
                data = responseData.data[0];
            },
            error: function (e) {
            },
        });
        return data;
    }
    async function getItemConsultantByBookingId(id) {
        var data;
        await $.ajax({
            url: systemURL + "booking/api/detail/" + id,
            method: "GET",
            success: function (responseData) {
                data = responseData.data[0];
            },
            error: function (e) {
            },
        });
        return data;
    }
    async function validSendEmailConsultant() {
        var errorList = [];
        if ($('#booking-reason-for-consulation').val() == null || $('#booking-reason-for-consulation').val().trim().length == 0) {
            errorList.push("Lý do đến khám không được để trống.");
        } if ($('#booking-physical-mainfestations').val() == null || $('#booking-physical-mainfestations').val().trim().length == 0) {
            errorList.push("Triệu chứng, biểu hiện không được để trống.");
        } if ($('#booking-family-and-social-relationship').val() == null || $('#booking-family-and-social-relationship').val().trim().length == 0) {
            errorList.push("Các mối quan hệ gia đình và xã hội không được để trống.");
        } if ($('#booking-person-and-family-history').val() == null || $('#booking-person-and-family-history').val().trim().length == 0) {
            errorList.push("Tiểu sử bản thân và gia đình không được bỏ chống.");
        } if ($('#booking-AssessmentResult').val() == null || $('#booking-AssessmentResult').val().trim().length == 0) {
            errorList.push("Kết quả đánh giá sơ bộ không được để chống.");
        } if ($('#booking-Target').val() == null || $('#booking-Target').val().trim().length == 0) {
            errorList.push("Mục tiêu khám không được để trống.");
        } if ($('#booking-ConsultingResults').val() == null || $('#booking-ConsultingResults').val().trim().length == 0) {
            errorList.push("Kết quả khám không được để trống.");
        } if ($('#booking-ConsultingPlan').val() == null || $('#booking-ConsultingPlan').val().trim().length == 0) {
            errorList.push("Kế hoạch khám không được để trống.");
        }
        if (errorList.length > 0) {
            var contentError = "<ul>";
            errorList.forEach(function (item, index) {
                contentError += "<li class='text-start'>" + item + "</li>";
            })
            contentError += "</ul>";
            var swalSubTitle = "<p class='swal__admin__subtitle'>cập nhật không thành công</p>";
            Swal.fire(
                'Phiếu đánh giá' + swalSubTitle,
                contentError,
                'warning'
            );
        } else {
            updateConsultant();
        }
    }
    async function sendEmail() {
        var data;
        await $.ajax({
            url: systemURL + "consultant/api/send-email-consultant-to-account" + "?accountId=" + $('#accountId').val() + "&counselorId=" + $('#counselorId').val() + "&bookingId=" + $('#id').val(),
            method: "GET",
            success: function (responseData) {
                data = responseData.data[0];
            },
            error: function (e) {
            },
        });
        return data;
    }

    //booking thành công
    async function sendEmailSuccessBooking(accountId, counselorId) {
        var data;
        await $.ajax({
            url: systemURL + "booking/api/send-email-booking-success" + "?accountId=" + accountId + "&counselorId=" + counselorId,
            method: "GET",
            success: function (responseData) {
                data = responseData.data[0];
            },
            error: function (e) {
            },
        });
        return data;
    }
    //Bác sỹ xác nhận đặt lịch
    async function sendEmailAcceptBooking(bookingId, accountId) {
        var data;
        await $.ajax({
            url: systemURL + "booking/api/send-email-accept-booking" + "?accountId=" + accountId + "&bookingId=" + bookingId,
            method: "GET",
            success: function (responseData) {
                data = responseData.data[0];
            },
            error: function (e) {
            },
        });
        return data;
    }
    //Bác sỹ từ chối lịch đặt hẹn
    async function sendEmailRejectBooking(bookingId, accountId, reason) {
        var data;
        await $.ajax({
            url: systemURL + "booking/api/send-email-cancel-booking" + "?accountId=" + accountId + "&bookingId=" + bookingId + "&reason=" + reason,
            method: "GET",
            success: function (responseData) {
                data = responseData.data[0];
            },
            error: function (e) {
            },
        });
        return data;
    }
    //Bác sỹ hủy lịch đặt hẹn
    async function sendEmailCancelBooking(bookingId, accountId, reason) {
        var data;
        await $.ajax({
            url: systemURL + "booking/api/send-email-reject-booking" + "?accountId=" + accountId + "&bookingId=" + bookingId + "&reason=" + reason,
            method: "GET",
            success: function (responseData) {
                data = responseData.data[0];
            },
            error: function (e) {
            },
        });
        return data;
    }

    async function getDetailAccountById(id) {
        var data;
        await $.ajax({
            url: systemURL + "account/api/detail/" + id,
            method: "GET",
            success: function (responseData) {
                data = responseData.data[0];
            },
            error: function (e) {
            },
        });
        return data;
    }

    //await httpService.getAsync("Notification/api/add/", notificationObj);
    async function sendNotification(accountId, senderId, message) {
        var notificationObj = {
            "id": 1,
            "active": 1,
            "accountId": 0,
            "notificationStatusId": 1000002,
            "name": "",
            "senderId": 0,
            "description": "BOOKING",
            "createdTime": new Date(),
        };

        notificationObj.accountId = accountId;
        notificationObj.senderId = senderId;
        notificationObj.name = message;
        delete notificationObj["id"]
        $.ajax({
            url: systemURL + "notification/api/add",
            type: "POST",
            contentType: "application/json",
            data: JSON.stringify(notificationObj),
            success: function (responseData) {
                // debugger;
                if (responseData.status == 201 && responseData.message === "CREATED") {
                    Swal.fire(
                        'Thành công!',
                        'Đã cập nhật dữ liệu',
                        'success'
                    );
                }
            },
            error: function (e) {
                //console.log(e.message);
            }
        })
    };
    function reGenTable() {
        tableUpdating = 0;
        table.destroy();
        $(".tableHeaderFilter").val(null).trigger("change");
        $("#tableData tbody").html('');
        loadData();
    }

    async function getCountStatics() {
        var data;
        await $.ajax({
            url: systemURL + "booking/api/count-static-test",
            method: "GET",
            success: function (responseData) {
                data = responseData.data[0];
                $("#total-wait").text(data.countWait);
                $("#total-confirm").text(data.countConfirm);
                $("#total-accept").text(data.countAccept);
                $("#total-success").text(data.countSuccess);
                $("#total-cancel").text(data.countCancel);

                console.log(data);
            },
            error: function (e) {
            },
        });
    }
    function removeVietnameseTones(str) {
        str = str.replace(/à|á|ạ|ả|ã|â|ầ|ấ|ậ|ẩ|ẫ|ă|ằ|ắ|ặ|ẳ|ẵ/g, "a");
        str = str.replace(/è|é|ẹ|ẻ|ẽ|ê|ề|ế|ệ|ể|ễ/g, "e");
        str = str.replace(/ì|í|ị|ỉ|ĩ/g, "i");
        str = str.replace(/ò|ó|ọ|ỏ|õ|ô|ồ|ố|ộ|ổ|ỗ|ơ|ờ|ớ|ợ|ở|ỡ/g, "o");
        str = str.replace(/ù|ú|ụ|ủ|ũ|ư|ừ|ứ|ự|ử|ữ/g, "u");
        str = str.replace(/ỳ|ý|ỵ|ỷ|ỹ/g, "y");
        str = str.replace(/đ/g, "d");
        str = str.replace(/À|Á|Ạ|Ả|Ã|Â|Ầ|Ấ|Ậ|Ẩ|Ẫ|Ă|Ằ|Ắ|Ặ|Ẳ|Ẵ/g, "A");
        str = str.replace(/È|É|Ẹ|Ẻ|Ẽ|Ê|Ề|Ế|Ệ|Ể|Ễ/g, "E");
        str = str.replace(/Ì|Í|Ị|Ỉ|Ĩ/g, "I");
        str = str.replace(/Ò|Ó|Ọ|Ỏ|Õ|Ô|Ồ|Ố|Ộ|Ổ|Ỗ|Ơ|Ờ|Ớ|Ợ|Ở|Ỡ/g, "O");
        str = str.replace(/Ù|Ú|Ụ|Ủ|Ũ|Ư|Ừ|Ứ|Ự|Ử|Ữ/g, "U");
        str = str.replace(/Ỳ|Ý|Ỵ|Ỷ|Ỹ/g, "Y");
        str = str.replace(/Đ/g, "D");
        // Some system encode vietnamese combining accent as individual utf-8 characters
        // Một vài bộ encode coi các dấu mũ, dấu chữ như một kí tự riêng biệt nên thêm hai dòng này
        str = str.replace(/\u0300|\u0301|\u0303|\u0309|\u0323/g, ""); // ̀ ́ ̃ ̉ ̣  huyền, sắc, ngã, hỏi, nặng
        str = str.replace(/\u02C6|\u0306|\u031B/g, ""); // ˆ ̆ ̛  Â, Ê, Ă, Ơ, Ư
        // Remove extra spaces
        // Bỏ các khoảng trắng liền nhau
        str = str.replace(/ + /g, " ");
        str = str.trim();
        // Remove punctuations
        // Bỏ dấu câu, kí tự đặc biệt
        str = str.replace(/!|@@|%|\^|\*|\(|\)|\+|\=|\<|\>|\?|\/|,|\.|\:|\;|\'|\"|\&|\#|\[|\]|~|\$|_|`|-|{|}|\||\\/g, " ");
        return str;
    }
</script>
<!--end:Base load data-->
<!--begin:setting in data table-->
<script>
    function tableSearch() {
        table.column(5).search($("#tableData thead:nth-child(2) tr th:nth-child(6) input").val());
        table.draw();
    }

    function CloseAddConsultant() {
        $("#consultant-reason").val("");
        $("#consultant-result").val("");
        $("#consultant-symptom").val("");
        $("#consultant-plan").val("");
        $("#consultant-rating").val("");
        $("#consultant-review").val("");
        $(".module-add-consultant").hide();
    }
    function formatNumberCurrency(n) {
        // format number 1000000 to 1,234,567
        return n.replace(/\D/g, "").replace(/\B(?=(\d{3})+(?!\d))/g, ",")
    }
    function formatCurrencyValue(input, blur) {
        // appends $ to value, validates decimal side
        // and puts cursor back in right position.

        // get input value
        var input_val = input.val();

        // don't validate empty input
        if (input_val === "") { return; }

        // original length
        var original_len = input_val.length;

        // initial caret position
        var caret_pos = input.prop("selectionStart");

        // check for decimal
        if (input_val.indexOf(".") >= 0) {

            // get position of first decimal
            // this prevents multiple decimals from
            // being entered
            var decimal_pos = input_val.indexOf(".");

            // split number by decimal point
            var left_side = input_val.substring(0, decimal_pos);
            var right_side = input_val.substring(decimal_pos);

            // add commas to left side of number
            left_side = formatNumberCurrency(left_side);

            // validate right side
            right_side = formatNumberCurrency(right_side);

            // On blur make sure 2 numbers after decimal

            // Limit decimal to only 2 digits
            right_side = right_side.substring(0, 2);

            // join number by .
            input_val = left_side + "." + right_side;

        } else {
            // no decimal entered
            // add commas to number
            // remove all non-digits
            input_val = formatNumberCurrency(input_val);

            // final formatting
        }

        // send updated string to input
        input.val(input_val);

        // put caret back in the right position
        var updated_len = input_val.length;
        caret_pos = updated_len - original_len + caret_pos;
        input[0].setSelectionRange(caret_pos, caret_pos);
    }
    function AddOrUpdateConsultant() {
        if ($("#consultant-reason").val().length == 0) {
            Swal.fire(
                'Nhập danh mục khám',
                'Vui lòng nhập danh mục khám.',
                'warning'
            );
            return;
        }

        var actionName = (addConsultant == 1 ? "Thêm chỉ số" : "Cập nhật chỉ số");
        var updatingObj = {
            "id": consultantId,
            "accountId": accountId,
            "doctorId": currentDoctorId,
            "reason": $("#consultant-reason").val(),
            "symptom": $("#consultant-symptom").val(),
            "consultingResults": $("#consultant-result").val(),
            "consultingPlan": $("#consultant-plan").val(),
            "rating": $("#consultant-rating").val(),
            "review": $("#consultant-review").val(),
            "bookingId": updatingItemId,
            "createdTime": new Date(),
        };
        var actionTitle = (addConsultant == 1 ? "Thêm mới " : "Cập nhật ");

        Swal.fire({
            title: actionTitle + 'chỉ số xét nghiệm ?',
            html: "Xác nhận " + actionTitle.toLowerCase() + " chỉ số xét nghiệm?",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#443',
            confirmButtonText: 'Xác nhận',
            cancelButtonText: 'Huỷ'
        }).then((result) => {
            if (result.value) {
                //CALL AJAX TO UPDATE
                if (addConsultant == 0) {
                    $.ajax({
                        url: systemURL + "consultant/api/update",
                        type: "POST",
                        contentType: "application/json",
                        data: JSON.stringify(updatingObj),
                        success: function (responseData) {
                            // debugger;
                            if (responseData.status == 200 && responseData.message === "SUCCESS") {
                                Swal.fire(
                                    'Thành Công!',
                                    'Đã cập nhật',
                                    'success'
                                );
                                RegenTableConsultant();
                                CloseAddConsultant();
                            }
                        },
                        error: function (e) {
                            Swal.fire(
                                'Lỗi!',
                                'Đã xảy ra lỗi, vui lòng thử lại',
                                'error'
                            );
                        }
                    });
                };
                //CALL AJAX TO CREATE
                if (addConsultant == 1) {
                    updatingObj.id = 1;
                    delete updatingObj["id"]
                    $.ajax({
                        url: systemURL + "consultant/api/add",
                        type: "POST",
                        contentType: "application/json",
                        data: JSON.stringify(updatingObj),
                        success: function (responseData) {
                            // debugger;
                            if (responseData.status == 201 && responseData.message === "CREATED") {
                                Swal.fire(
                                    'Thành công!',
                                    'Đã cập nhật dữ liệu',
                                    'success'
                                );
                                RegenTableConsultant();
                                CloseAddConsultant();
                            }
                        },
                        error: function (e) {
                            //console.log(e.message);
                            Swal.fire(
                                'Lỗi!',
                                'Đã xảy ra lỗi, vui lòng thử lại',
                                'error'
                            );
                        }
                    });
                }
            }
            else {
                // Remove loading indication
                submitButton.removeAttribute('data-kt-indicator');
                // Enable button
                submitButton.disabled = false;
            }

        })
    }
    function RegenTableConsultant() {
        $(".body-colsultant").html("");
        $.ajax({
            url: systemURL + "consultant/api/list-by-bookingId/" + updatingItemId,
            method: "GET",
            success: function (responseData) {
                data = responseData.data[0]
                consultantData = data;
                if (data.length > 0) {
                    for (let i = 0; i < data.length; i++) {
                        let item = data[i];
                        $(".body-colsultant").append(`
                                    <tr>
                                        <td>`+ (item.reason) + ` </td>
                                        <td>`+ (item.consultingResults != null ? item.consultingResults : "") + `</td>
                                        <td>`+ (item.symptom != null ? item.symptom : "") + `</td>
                                        <td>`+ (item.consultingPlan != null ? item.consultingPlan : "") + `</td>
                                        <td>`+ (item.review != null ? item.review : "") + `</td>
                                        <td><span class="column-price">`+ (item.rating != null ? item.rating : "") + `</span></td>
                                        <td><div class="d-flex justify-content-center gap-2"><a title="Cập nhật" onclick="editItemConsultant(`+ item.id + `)" class="me-2 btn_manage"><span class="svg-icon-success svg-icon  svg-icon-1 svg_teh009"><span class="svg-icon-primary svg-icon  svg-icon-1"> <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"><path opacity="0.3" fill-rule="evenodd" clip-rule="evenodd" d="M2 4.63158C2 3.1782 3.1782 2 4.63158 2H13.47C14.0155 2 14.278 2.66919 13.8778 3.04006L12.4556 4.35821C11.9009 4.87228 11.1726 5.15789 10.4163 5.15789H7.1579C6.05333 5.15789 5.15789 6.05333 5.15789 7.1579V16.8421C5.15789 17.9467 6.05333 18.8421 7.1579 18.8421H16.8421C17.9467 18.8421 18.8421 17.9467 18.8421 16.8421V13.7518C18.8421 12.927 19.1817 12.1387 19.7809 11.572L20.9878 10.4308C21.3703 10.0691 22 10.3403 22 10.8668V19.3684C22 20.8218 20.8218 22 19.3684 22H4.63158C3.1782 22 2 20.8218 2 19.3684V4.63158Z" fill="currentColor"></path><path d="M10.9256 11.1882C10.5351 10.7977 10.5351 10.1645 10.9256 9.77397L18.0669 2.6327C18.8479 1.85165 20.1143 1.85165 20.8953 2.6327L21.3665 3.10391C22.1476 3.88496 22.1476 5.15129 21.3665 5.93234L14.2252 13.0736C13.8347 13.4641 13.2016 13.4641 12.811 13.0736L10.9256 11.1882Z" fill="currentColor"></path><path d="M8.82343 12.0064L8.08852 14.3348C7.8655 15.0414 8.46151 15.7366 9.19388 15.6242L11.8974 15.2092C12.4642 15.1222 12.6916 14.4278 12.2861 14.0223L9.98595 11.7221C9.61452 11.3507 8.98154 11.5055 8.82343 12.0064Z" fill="currentColor"></path></svg></span></span></a><a title="Xóa" onclick="deleteItemConsultant(` + item.id + `)" class="me-2 btn_manage"><span class="svg-icon-success svg-icon  svg-icon-1 svg_teh009"><span class="svg-icon-danger svg-icon  svg-icon-1"><svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M5 9C5 8.44772 5.44772 8 6 8H18C18.5523 8 19 8.44772 19 9V18C19 19.6569 17.6569 21 16 21H8C6.34315 21 5 19.6569 5 18V9Z" fill="currentColor"></path><path opacity="0.5" d="M5 5C5 4.44772 5.44772 4 6 4H18C18.5523 4 19 4.44772 19 5V5C19 5.55228 18.5523 6 18 6H6C5.44772 6 5 5.55228 5 5V5Z" fill="currentColor"></path><path opacity="0.5" d="M9 4C9 3.44772 9.44772 3 10 3H14C14.5523 3 15 3.44772 15 4V4H9V4Z" fill="currentColor"></path></svg></span></span></a></div></td>
                                  </tr>
                            `)
                    }
                    formatNumber();
                }
                else {
                    $(".body-colsultant").html(`<tr class="odd"><td valign="top" colspan="7" class="dataTables_empty">Không có dữ liệu</td></tr>`)
                }
            },
            error: function (e) {
                $(".body-colsultant").html(`<tr class="odd"><td valign="top" colspan="7" class="dataTables_empty">Không có dữ liệu</td></tr>`)
            }
        });
    }
    function editItemConsultant(id){
        $(".module-add-consultant").show();
        addConsultant = 0;
        consultantId = id;
        let item = consultantData.find(item => item.id === id);
        if (item != null){
            $("#consultant-reason").val(item.reason);
            $("#consultant-result").val(item.consultingResults);
            $("#consultant-symptom").val(item.symptom);
            $("#consultant-plan").val(item.consultingPlan);
            $("#consultant-rating").val(item.rating != null ? formatNumberCurrency(item.rating.toString()) : "");
            $("#consultant-review").val(item.review);
        }

    }
    function deleteItemConsultant(id) {
        Swal.fire({
            title: "Xóa chỉ số xét nghiệm",
            html: "Xác nhận xóa chỉ số xét nghiệm?",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#443',
            confirmButtonText: 'Xác nhận',
            cancelButtonText: 'Huỷ'
        }).then((result) => {
            if (result.value) {
                $.ajax({
                    url: systemURL + "consultant/api/delete/" + id,
                    method: "GET",
                    success: function (responseData) {
                        Swal.fire(
                            'Thành công',
                            'Đã xóa chỉ số xét nghiệm.',
                            'success'
                        );
                        RegenTableConsultant();
                    },
                    error: function (e) {
                        Swal.fire(
                            'Lỗi!',
                            'Đã xảy ra lỗi, vui lòng thử lại',
                            'error'
                        );
                    }
                });
            }
        })
    }
</script>
<!--end:setting in data table-->
